doctype html
html(lang="en" xmlns="http://www.w3.org/1999/xhtml")
  head
    title Site Schemes &in; Site Design
    meta(charset="utf-8")
    link(rel="stylesheet" href="../../styles/chharvey.css")
    style.
      body {
        color: #000;
        background-color: #fff;
      }
      .o-Cell {
        padding: 0.375rem 0.5rem;
      }
      .this-c-FontDemo {
        margin-bottom: 1.5rem;
      }
      .this-c-FontDemo::after {
        content: '';
        display: block;
        border-bottom: 0.25rem solid #cbcfd4;
        margin-top: -0.25rem;
        position: relative;
        top: 0.75rem;
      }
      .ColorTitle {
        font-style: inherit;
        font-weight: 600;
        font-family: inherit;
        font-size: 1.25rem;
        line-height: 1.2;
      }
      .ColorRelation {
        font-style: italic;
        opacity: 0.5;
        quotes: '(' ')';
      }
      .ColorRelation::before {content: open-quote;}
      .ColorRelation::after  {content: close-quote;}
      .ColorCode {
        font-family: 'Menlo','Monaco','Andale Mono',monospace;
        font-size: 0.75rem;
      }
      #syntax-example, #syntax-example * {
        transition-property: border-color, color, background-color;
        transition-duration: 250ms;
        transition-timing-function: ease;
        transition-delay: 0ms;
      }
      /* Some background colors are dark, so a light translucent foreground color has been added. */
      .h-darkbg {
        color: rgba(255, 255, 255, 0.8);
      }
      .a-bc-gray-tint1  { background-color: rgba(255, 255, 255, 0.15910358) !important; }
      .a-bc-gray-tint2  { background-color: rgba(255, 255, 255, 0.29289322) !important; }
      .a-bc-gray-tint3  { background-color: rgba(255, 255, 255, 0.40539644) !important; }
      .a-bc-gray-tint4  { background-color: rgba(255, 255, 255, 0.5       ) !important; }
      .a-bc-gray-shade1 { background-color: rgba(  0,   0,   0, 0.15910358) !important; }
      .a-bc-gray-shade2 { background-color: rgba(  0,   0,   0, 0.29289322) !important; }
      .a-bc-gray-shade3 { background-color: rgba(  0,   0,   0, 0.40539644) !important; }
      .a-bc-gray-shade4 { background-color: rgba(  0,   0,   0, 0.5       ) !important; }
  body.o-GoldenContainer
    main.o-GoldenContainer__Content
      h1 Site-Wide Schemes
      section#fonts
        h2 Font Scheme
        form
          p Check the radio buttons to change the style, variant, and weight of the font demos below.
          fieldset
            ul.o-ListBare
              li
                input#check-fs(type="checkbox" name="fs" value="italic")
                label(for="check-fs") font-style: italic;
              li
                input#check-fv(type="checkbox" name="fv" value="small-caps")
                label(for="check-fv") font-variant: small-caps;
              li
                input#js-range-fw(type="range" name="fw" min="100" max="900" step="100" value="400")
                label(for="js-range-fw"): input#js-text-fw(class="!ml:1" type="text" value="400 (normal)" disabled="")
          p: input#reset-fonts(type="reset")
        section.this-c-FontDemo.u-ff_base
          p.
            The base font-family is used for the main body copy.
            It is a sans-serif type with little to no thick/thin transition.
            Being a sans-serif, its #[i italic] is actually an oblique, which just slants the glyphs.
            Suggested typefaces include #[b Avenir Next], #[b Helvetica Neue].
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        section.this-c-FontDemo.u-ff_heading
          p.
            The heading font-family is used only for headings of body copy (not table headings,
            #[i(lang="la"): abbr(title="et cetera") etc.]).
            It is a sans-serif polyweight type with a moderate thick/thin transition.
            Because of this, it goes well with both monoweight types and serif types, which makes it perfect for headings.
            Suggested typefaces include #[b Optima], #[b Seravek], #[b Tahoma].
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        section.this-c-FontDemo.u-ff_prose
          p.
            The prose font-family is used for text in formal documents and articles.
            It is a serif oldstyle type, which is easy on the eyes and can be read at extensive length.
            Like the #[i heading] font family, it, too, has a moderate thick/thin transition, but has diagonal stress and
            serifs, and true italics, which means it uses a whole new set of glyphs.
            Suggested typefaces include #[b Baskerville], #[b Palatino], #[b Cochin].#[sup: a.Rf#rf-baskerville(rel="this" href="#fn-baskerville") 1]
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        section.this-c-FontDemo.u-ff_accent
          p.
            The accent font-family is used for typographical and #[abbr(title="user interface") UI]
            components such as ledes, pull quotes, captions, alerts, labels, buttons, and keys.
            Like the #[i base] font-family, it is a monoweight sans-serif, yet slightly heavier.
            Suggested typefaces include #[b Helvetica Neue], #[b Helvetica].
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        section.this-c-FontDemo.u-ff_code
          p.
            The code font-family is a monospace type used for&hellip; well, code. Personally, I dislike
            monospace fonts with serifs, so this family is sans-serif.
            Suggested typefaces include #[b Menlo], #[b Monaco], #[b Andale Mono].
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        section.this-c-FontDemo.u-ff_math
          p.
            The math font-family is a serif modern type use for mathematical spans and spans in foreign
            languages. It has a radical
            thick/thin transition, vertical stress, and straight horizontal serifs. With a cold yet
            elegant look, this font family makes long spans of text
            hard to read, but that&rsquo;s okay because this font is used only for short expressions.
            Suggested typefaces include #[b Didot], #[b Bodoni 72], #[b Times].
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        section.this-c-FontDemo.u-ff_script(style="line-height: 3.0;")
          p.
            The script font-family is used for very fancy elements such as drop-caps and subheadings. Use
            this font family sparingly.
            Suggested typefaces include #[b Zapfino].
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        footer
          ul.c-ListFootnotes
            li.
              #[sup: a.Fn#fn-baskerville(rel="this" href="#rf-baskerville") 1]
              #[b Baskerville], though considered an #[b oldstyle] type, actually has
              a straight, vertical stress, which is typically a feature of #[b modern] types.
              However #[b Palatino] and #[b Cochin] indeed have diagonal stresses.
      section
        h2 Portal Color Scheme
        footer.
          This color scheme is based on the
          #[a(rel="external" href="http://www.thinkwithportals.com/"): cite Portal] video game series.
        section.o-FlexContainer
          h3(class="!w:1o1") Main Portal Colors
          section.o-Box(class="!w:1o2").u-bgc_aperture_white
            h4.ColorTitle Aperture White
            p: span.ColorCode #f2f7ff
            p.
              The purity of Aperture Science in all its glory. This dazzling
              brilliance of bluish light seen on the portalable panels coated with
              Conversion Gel makes the background emit an eerie glow, like the full moon.
            ul
              li body background
          section.o-Box(class="!w:1o2").u-bgc_aperture_black.h-darkbg
            h4.ColorTitle Aperture Black
            p: span.ColorCode #0d0800
            p.
              The polar opposite of Aperture White. Representing the true dark nature
              of the Enrichment Center, this is the color of the panels that inhibit
              portals. A hint of orange is infinitesimally noticeable. What better way to
              complement the background color than the color of normal text?
            ul
              li body text
          section.o-Box(class="!w:1o2").u-bgc_lakesuperior.h-darkbg
            h4.ColorTitle Lake Superior
            p: span.ColorCode #120099
            p.
              This Great Lake borders #[a Ontonagon, MI], the location of the
              Aperture Science Enrichment Center. A perfect fit for superior headings on
              a page.
            ul
              li major heading text
              li ledes and drop caps
          section.o-Box(class="!w:1o2").u-bgc_facilityabyss.h-darkbg
            h4.ColorTitle Facility Abyss
            p: span.ColorCode #3d6166
            p.
              This color can be seen in the endless depths of the subterranean
              testing facility. This color is for #[i minor] headings of a page.
            ul
              li minor heading text
          section.o-Box(class="!w:1o2").u-bgc_atlas.h-darkbg
            h4.ColorTitle Atlas
            p: span.ColorCode #0062ff
            p.
              Short and stout, Atlas is one of the two robots used for testing.
              Untouched hyperlinks are dedicated to his digital iris.
            ul
              li link text
          section.o-Box(class="!w:1o2").u-bgc_pbody
            h4.ColorTitle P-Body
            p: span.ColorCode #ff9d00
            p.
              Tall and wiry, P-body is one of the two robots used for testing.
              Hovered hyperlinks are dedicated to his (or her?) digital iris.
            ul
              li hover link text
        section.o-FlexContainer
          h3(class="!w:1o1") UI Component Colors
          section.o-Box(class="!w:1o2").u-bgc_deploying.h-darkbg
            h4.ColorTitle Deploying
            p: span.ColorCode #ff4b33
            p.
              The one word you never want to hear without a portal gun. Just as the
              iris of a Sentry Turret, this color is briefly seen, providing a subtle accent
              on the site.
            ul
              li Danger components
          section.o-Box(class="!w:1o2").u-bgc_hereye
            h4.ColorTitle HER Eye
            p: span.ColorCode #ffe433
            p.
              This color alone will scare the
              prokaryotic-microorganism-infested-fecal-matter out of you. See where you can
              find it. You monster.
            ul
              li Caution components
          section.o-Box(class="!w:1o2").u-bgc_neurotoxin
            h4.ColorTitle Neurotoxin
            p: span.ColorCode #9acc7a
            p.
              Long ago an #[i accident] resulted in the unleashing of
              this deadly vapor and the murdering of the entire human staff of
              Aperture Laboratories. Some say it could happen again, but this time on the
              test subjects&hellip;
            ul
              li Success components
          section.o-Box(class="!w:1o2").u-bgc_bridges
            h4.ColorTitle Bridges of Light
            p: span.ColorCode #99daff
            p.
              Hard Light Bridges are literally massless, yet they can sustain
              infinite weight, as Chell can attest to.
            ul
              li Info components
          section.o-Box(class="!w:1o2").u-bgc_companion
            h4.ColorTitle Heart of a Companion
            p: span.ColorCode #ff99c0
            p.
              Believed to be sentient by some and alive by others, the
              Weighted Companion Cube has been said to provide advice and display emotions
              such as brevity, care, and love. It is even believed to hum opera when near
              a friend. A perfect color for helpful elements on a Web page.
            ul
              li Help components
          section.o-Box(class="!w:1o2").u-bgc_vilify.h-darkbg
            h4.ColorTitle Vilify
            p: span.ColorCode #9d00ff
            p: q(class="!fs:t" cite="https://www.youtube.com/watch?v=G-Vg2YS-sFE").
              You&rsquo;ve
              got sucker&rsquo;s luck. Have you given up? Does it feel
              like a trial? Does it trouble your mind the way you trouble mine?
        section.o-FlexContainer
          h3(class="!w:1o1") More Portal Colors
          section.o-Box(class="!w:1o2").u-bgc_cavescaves.h-darkbg
            h4.ColorTitle Cave&rsquo;s Caves
            p: span.ColorCode #80522b
            p.
              Cave&rsquo;s underground salt mines were the ideal venue for early
              test chambers.
          section.o-Box(class="!w:1o2").u-bgc_asbestos
            h4.ColorTitle Asbestos
            p: span.ColorCode #bf9300
            p.
              The forgotten underground test chambers are ridden with this harmful
              substance. Or so Mr.&nbsp;Johnson says.
          section.o-Box(class="!w:1o2").u-bgc_repulsion
            h4.ColorTitle Repulsion Gel
            p: span.ColorCode #33b4ff
            p.
              Good news, you&rsquo;re not part of the control group; you get the gel.
              Bad news, it does #[em not] like the human skeleton. Turns out you might
              just break every bone in your legs anyway.
            ul
              li code/kbd/samp on print
          section.o-Box(class="!w:1o2").u-bgc_propulsion
            h4.ColorTitle Propulsion Gel
            p: span.ColorCode #ff7e33
            p #[i Forwarding] the cause of science.
            ul
              li subheading text
        section
          h3 Gray Tones and Shadows
          aside.o-Box.o-Box--dialog(style="margin-bottom: 1.5rem; border: 1px solid #9acc7a; background: rgba(0, 0, 0, 0.05); box-shadow: inset 0 0 0.5rem 0rem rgba(0,0,0,0.2);")
            h4 Introduction and Mathematical Background
            p.o-Box.o-Box--island.c-Alert.c-Alert--help
              strong.c-Alert__Title !
              | You may skip this section if you don&rsquo;t care about the mathematical explanation.
            p.
              I picked four as the number of shades and tints I wanted on this site, one of each which would be
              pure gray (an even mix of black and white, that is, #[code #808080]).
              To calculate the other three, I used a system of overlapping opacities.
              Four overlapping shades, each pure black and with the same alpha,
              on top of a white background, should result in this pure gray. Likewise,
              four overlapping white tints with the same alpha in front of a black background
              should produce the same pure gray.
            p.
              To spoil the answer, this uniquely-determined alpha has a value of about 0.1591.
              The next subsection explains how I derived its value, and the subsection after
              demonstrates its use with pure black and white opacities.
            aside
              h5 Calculating The Right Alpha
              p.
                Let it be noted that the common intuition that overlapping alphas are simply added
                is incorrect. For example, a block with an opacity of 0.4 in front of another block
                with an opacity of 0.6 does not result in a total opacity of 1.0. It actually results
                in an opacity of 0.76. The fact of the matter is that no matter how many translucent
                blocks overlap (as long as their alphas are less than 1), you will never get something
                completely opaque. (You may get very close, like 0.99991, but not exactly 1.0.)
                This implies that the model for overlapping opacities is some sort of
                exponential decay#[sup: a.Rf#rf-decay(href="#fn-decay") 1]
                that increasingly and asymptotically approaches 1.0.
              p: small.
              p.
                To cut to the chase, the formula used to calculate the final resulting alpha,
                call it #[span.M \alpha], from a given number of alphas,
                #[span.M \alpha_1, \alpha_2, \dots, \alpha_n], is
              p.M.M--B \alpha = 1 - \bigl[\left(1-\alpha_1\right)\left(1-\alpha_2\right)\cdots\left(1-\alpha_n\right)\bigr]
              p Therefore the true resulting opacity from two overlapping blocks with opacity 0.4 and 0.6 is
              p.M.M--B.
                \begin{align}
                  \alpha
                  &= 1 - \left(1-0.6\right)\left(1-0.4\right) \\
                  &= 1-\left(0.4\right)\left(0.6\right) \\
                  &= 1-0.24 \\
                  &= 0.76
                \end{align}
              p.
                If all of the alphas are a constant #[span.M \alpha_1], however, we may convert
                this formula into a function of one variable: the number of overlapping blocks.
                This results in our desired increasing exponential decay function. Indeed,
                its right-hand limit is 1.
              p.M.M--B \alpha(n) = 1 - \left(1-\alpha_1\right)^n
              p.
                So for my problem, I needed to obtain a final alpha of 0.5, using
                four overlapping blocks each with an alpha of some unknown constant value #[span.M a].
              p.M.M--B \alpha(4) = \frac{1}{2} = 1 - \left(1-a\right)^4
              p Using algebra to solve for #[span.M a] gives us approximately 0.1591.
              p.M.M--B a = 1 - \frac{1}{\sqrt[4]2}
              p Now we can use #[span.M a] to find the other three alpha values.
              p.M.M--B.
                \begin{align}
                  \alpha(1) &= 1 - \left(1-a\right)^1 = 1 - \frac{1}{\sqrt[4]2} &&\approx 0.1591 \\
                  \alpha(2) &= 1 - \left(1-a\right)^2 = 1 - \frac{1}{\sqrt{2}}  &&\approx 0.2929 \\
                  \alpha(3) &= 1 - \left(1-a\right)^3 = 1 - \frac{1}{2^{3/4}}   &&\approx 0.4054 \\
                  \alpha(4) &= 1 - \left(1-a\right)^4 = 1 - \frac{1}{2}         &&=       0.5 \text{ (as expected)}
                \end{align}
              footer: ul.c-ListFootnotes
                  li.
                    #[sup: a.Fn#fn-decay(href="#rf-decay") 1]
                    I call it exponential #[em decay] because the base of the exponent is less than 1.
                    This is true even if the function itself is increasing.
                    It would only be called exponential #[em growth] if the base were more than 1,
                    again, whether the function were increasing or decreasing.
            section
              h5 Pure Gray Tones
              p.
                Below are tables containing blocks whose background colors are translucent
                (an alpha of between 0 and 1). The hexadecimal values shown are not the actual
                background colors of the blocks, but rather, the #[em perceived] colors as a result of the
                blocks&rsquo; translucent backgrounds overlapping its parent background.
                I used a simple color picker to determine these perceived values.
              table.c-TableBordered
                caption.c-Caption
                  strong(class="!mr:1") Table 1a.
                  | Increasing opacities of
                  |  pure white (#[code #fff]) and pure black (#[code #000])
                  |  on pure black and pure white backgrounds, respectively.
                thead
                  th.o-Box.M(class="!fz:h4") \alpha
                  th.o-Box 15.910%
                  th.o-Box 29.289%
                  th.o-Box 40.540%
                  th.o-Box 50%
                tbody(class="!va:m")
                  tr(class="!bc:b !c:w")
                    th.o-Box
                      div Tints
                      code fadein(#fff,&hellip;)
                      .ColorCode #000000
                    td.ColorCode.a-bc-gray-tint1 #282828
                    td.ColorCode.a-bc-gray-tint2 #4a4a4a
                    td.ColorCode.a-bc-gray-tint3 #676767
                    td.ColorCode.a-bc-gray-tint4 #7f7f7f
                  tr(class="!bc:w !c:b")
                    th.o-Box
                      div Shades
                      code fadein(#000,&hellip;)
                      .ColorCode #ffffff
                    td.ColorCode.a-bc-gray-shade1 #d7d7d7
                    td.ColorCode.a-bc-gray-shade2 #b5b5b5
                    td.ColorCode.a-bc-gray-shade3 #989898
                    td.ColorCode.a-bc-gray-shade4 #808080
              table.c-TableBordered
                caption.c-Caption
                  strong(class="!mr:1") Table 1b.
                  | A demonstration of overlapping blocks, each with an opacity of 0.1591,
                  |  whose resulting opacities approximate the tints and shades above.
                thead
                  th.o-Box Nested Divs
                  th.o-Box 1
                  th.o-Box 2
                  th.o-Box 3
                  th.o-Box 4
                tbody(class="!va:m")
                  tr(class="!bc:b !c:w")
                    th.ColorCode.o-Box #000000
                    td.ColorCode: .o-Cell.a-bc-gray-tint1: .o-Cell:                 .o-Cell:                 .o-Cell                 #282828
                    td.ColorCode: .o-Cell.a-bc-gray-tint1: .o-Cell.a-bc-gray-tint1: .o-Cell:                 .o-Cell                 #4a4a4a
                    td.ColorCode: .o-Cell.a-bc-gray-tint1: .o-Cell.a-bc-gray-tint1: .o-Cell.a-bc-gray-tint1: .o-Cell                 #666666
                    td.ColorCode: .o-Cell.a-bc-gray-tint1: .o-Cell.a-bc-gray-tint1: .o-Cell.a-bc-gray-tint1: .o-Cell.a-bc-gray-tint1 #7e7e7e
                  tr(class="!bc:w !c:b")
                    th.ColorCode.o-Box #ffffff
                    td.ColorCode: .o-Cell.a-bc-gray-shade1: .o-Cell:                  .o-Cell:                  .o-Cell                  #d7d7d7
                    td.ColorCode: .o-Cell.a-bc-gray-shade1: .o-Cell.a-bc-gray-shade1: .o-Cell:                  .o-Cell                  #b5b5b5
                    td.ColorCode: .o-Cell.a-bc-gray-shade1: .o-Cell.a-bc-gray-shade1: .o-Cell.a-bc-gray-shade1: .o-Cell                  #999999
                    td.ColorCode: .o-Cell.a-bc-gray-shade1: .o-Cell.a-bc-gray-shade1: .o-Cell.a-bc-gray-shade1: .o-Cell.a-bc-gray-shade1 #818181
          section
            h4 Aperture Gray Tones
            p.
              The section above was purely theoretical, demonstrative, and unopinionated,
              for the purpose of arriving at the necessary alpha value of 0.1591.
              This value is used with the Aperture White and Aperture Black colors to create the
              opinionated gray tone palette for the site.
            p.
              #[cite Table 2a] and #[cite Table 2b], like #[cite Table 1a] and #[cite Table 1b],
              contain translucent blocks. As such, the hexadecimal values shown are not the actual
              background colors.
            p.
              The hexadecimal values shown in Table 3 however are the blocks&rsquo; true
              background colors.
            table.c-TableBordered
              caption.c-Caption
                strong(class="!mr:1") Table 2a.
                | Increasing opacities of
                |  Aperture White (#[code #f2f7ff]) and Aperture Black (#[code #0d0800])
                |  on Aperture Black and Aperture White backgrounds, respectively.
              thead
                th.o-Box.M(class="!fz:h4") \alpha
                th.o-Box 15.910%
                th.o-Box 29.289%
                th.o-Box 40.540%
                th.o-Box 50%
              tbody(class="!va:m")
                tr.u-bgc_aperture_black.h-darkbg
                  th.o-Box
                    div Tints
                    code fadein(@aperturewhite,&hellip;)
                    form
                      .ColorCode #0d0800
                      input.js-rowbc-swatch(type="color" value="#0d0800")
                      input.js-reset-swatch(type="reset")
                  td.ColorCode.a-bc-portal-tint03 #312e28
                  td.ColorCode.a-bc-portal-tint02 #4e4e4a
                  td.ColorCode.a-bc-portal-tint01 #6a6967
                  td.ColorCode.a-bc-portal-tint00 #807f7f
                tr.u-bgc_aperture_white
                  th.o-Box
                    div Shades
                    code fadein(@apertureblack,&hellip;)
                    form
                      .ColorCode #f2f7ff
                      input.js-rowbc-swatch(type="color" value="#f2f7ff")
                      input.js-reset-swatch(type="reset")
                  td.ColorCode.a-bc-portal-shade3 #ced1d7
                  td.ColorCode.a-bc-portal-shade2 #afb2b5
                  td.ColorCode.a-bc-portal-shade1 #969798
                  td.ColorCode.a-bc-portal-shade0 #808080
            table.c-TableBordered
              caption.c-Caption
                strong(class="!mr:1") Table 2b.
                | A demonstration of overlapping blocks, each with an opacity of 0.1591,
                |  whose resulting opacities approximate the tints and shades above.
              thead
                th.o-Box Nested Divs
                th.o-Box 1
                th.o-Box 2
                th.o-Box 3
                th.o-Box 4
              tbody(class="!va:m")
                tr.u-bgc_aperture_black.h-darkbg
                  th.o-Box
                    form
                      .ColorCode #0d0800
                      input.js-rowbc-swatch(type="color" value="#0d0800")
                      input.js-reset-swatch(type="reset")
                  td.ColorCode: .o-Cell.a-bc-portal-tint03: .o-Cell:                   .o-Cell:                   .o-Cell                   #312e28
                  td.ColorCode: .o-Cell.a-bc-portal-tint03: .o-Cell.a-bc-portal-tint03: .o-Cell:                   .o-Cell                   #4e4e4a
                  td.ColorCode: .o-Cell.a-bc-portal-tint03: .o-Cell.a-bc-portal-tint03: .o-Cell.a-bc-portal-tint03: .o-Cell                   #696966
                  td.ColorCode: .o-Cell.a-bc-portal-tint03: .o-Cell.a-bc-portal-tint03: .o-Cell.a-bc-portal-tint03: .o-Cell.a-bc-portal-tint03 #7f807e
                tr.u-bgc_aperture_white
                  th.o-Box
                    form
                      .ColorCode #f2f7ff
                      input.js-rowbc-swatch(type="color" value="#f2f7ff")
                      input.js-reset-swatch(type="reset")
                  td.ColorCode: .o-Cell.a-bc-portal-shade3: .o-Cell:                    .o-Cell:                    .o-Cell                    #ced1d7
                  td.ColorCode: .o-Cell.a-bc-portal-shade3: .o-Cell.a-bc-portal-shade3: .o-Cell:                    .o-Cell                    #b0b1b5
                  td.ColorCode: .o-Cell.a-bc-portal-shade3: .o-Cell.a-bc-portal-shade3: .o-Cell.a-bc-portal-shade3: .o-Cell                    #979699
                  td.ColorCode: .o-Cell.a-bc-portal-shade3: .o-Cell.a-bc-portal-shade3: .o-Cell.a-bc-portal-shade3: .o-Cell.a-bc-portal-shade3 #818081
            p.
              Sometimes you may need a gray-colored element when the background of its container
              isn&rsquo;t Aperture White or Aperture Black. In these cases, using a translucent background
              is not an ideal solution, so you need an opaque color (whose alpha is 1). The following
              colors are mixes of Aperture Black and Aperture White. The weight of each mix corresponds
              to the alphas shown above.
            p.c-Caption
              strong(class="!mr:1") Table 3.
              | A table of opaque gray tones, for use when backgrounds are non-standard.
            ul.o-FlexContainer
              li.o-Box(class="!w:2o10      ").u-bgc_aperture_black.h-darkbg Aperture Black   #[span.ColorCode #0d0800]
              li.o-Box(class="!w:2o10      ").a-bc-aperturegray03.h-darkbg  Aperture Gray 03 #[span.ColorCode #312e29]
              li.o-Box(class="!w:2o10      ").a-bc-aperturegray02.h-darkbg  Aperture Gray 02 #[span.ColorCode #504e4b]
              li.o-Box(class="!w:2o10      ").a-bc-aperturegray01.h-darkbg  Aperture Gray 01 #[span.ColorCode #6a6967]
              li.o-Box(class="!w:2o10      ").a-bc-aperturegray00           Aperture Gray 00 #[span.ColorCode #7f7f7f]
              li.o-Box(class="!w:2o10 !xo:4").a-bc-aperturegray0            Aperture Gray 0  #[span.ColorCode #808080]
              li.o-Box(class="!w:2o10 !xo:3").a-bc-aperturegray1            Aperture Gray 1  #[span.ColorCode #959698]
              li.o-Box(class="!w:2o10 !xo:2").a-bc-aperturegray2            Aperture Gray 2  #[span.ColorCode #afb1b4]
              li.o-Box(class="!w:2o10 !xo:1").a-bc-aperturegray3            Aperture Gray 3  #[span.ColorCode #ced1d6]
              li.o-Box(class="!w:2o10 !xo:0").u-bgc_aperture_white          Aperture White   #[span.ColorCode #f2f7ff]
      section
        h2 Code Color Scheme
        //- p.
        //-   Then there&rsquo;s the added bonus of its name being based off of the Moon, which is an
        //-   integral part of #[cite Portal] gameplay.
        section.o-FlexContainer
          h3(class="!w:1o1") #[cite Solarized] Color Scheme
          section.o-Box(class="!w:1o2 a-bc-s03").h-darkbg
            h4.ColorTitle Solarized Base03
            ul
              li dark code background
          section.o-Box(class="!w:1o2 a-bc-s3")
            h4.ColorTitle Solarized Base3
            ul
              li light code background
          section.o-Box(class="!w:1o2 a-bc-s02").h-darkbg
            h4.ColorTitle Solarized Base02
            ul
              li dark code border
          section.o-Box(class="!w:1o2 a-bc-s2")
            h4.ColorTitle Solarized Base2
            ul
              li light code border
          section.o-Box(class="!w:1o2 a-bc-s01")
            h4.ColorTitle Solarized Base01
            ul
              li light code emphasis
              li dark code comment
          section.o-Box(class="!w:1o2 a-bc-s1")
            h4.ColorTitle Solarized Base1
            ul
              li light code comment
              li dark code emphasis
          section.o-Box(class="!w:1o2 a-bc-s00")
            h4.ColorTitle Solarized Base00
            ul
              li light code text
          section.o-Box(class="!w:1o2 a-bc-s0")
            h4.ColorTitle Solarized Base0
            ul
              li dark code text
          section.o-Box(class="!w:1o2 a-bc-sr")
            h4.ColorTitle Solarized Red
            ul
              li programming control (#[code if], #[code for], #[code switch], #[code return])
              li other control (#[code public], #[code private], #[code static])
          section.o-Box(class="!w:1o2 a-bc-sc")
            h4.ColorTitle Solarized Cyan
            ul
              li HTML attribute values
              li CSS property values
              li strings (except in CSS#[sup: a.Rf#rf-cssstring(rel="this" href="#fn-cssstring") 2])
          section.o-Box(class="!w:1o2 a-bc-so")
            h4.ColorTitle Solarized Orange
            ul
              li delimiters and operators (#[code +], #[code ==], #[code .], #[code new], #[code typeof])
          section.o-Box(class="!w:1o2 a-bc-sb")
            h4.ColorTitle Solarized Blue
            ul
              li HTML tags
              li CSS/Less class selectors
              li JS function definitions and function calls
          section.o-Box(class="!w:1o2 a-bc-sy")
            h4.ColorTitle Solarized Yellow
            ul
              li HTML attribute names
              li CSS property names
              li pre-defined keywords and types (#[code var], #[code function], #[code int], #[code class])
          section.o-Box(class="!w:1o2 a-bc-sv")
            h4.ColorTitle Solarized Violet
            ul
              li variable names
              li function arguments
          section.o-Box(class="!w:1o2 a-bc-sg")
            h4.ColorTitle Solarized Green
            ul
              li HTML characters and entities
              li CSS numeric values with units
              li constant values (numbers, colors, booleans, #[code null])
          section.o-Box(class="!w:1o2 a-bc-sm")
            h4.ColorTitle Solarized Magenta
            ul
              li string delimiters (#[code &quot;] and #[code &apos;])
              li #[sup: a.Fn#fn-cssstring(rel="this" href="#rf-cssstring") 2]CSS strings
              li object/class/function references (custom, built-in, #[code this], #[code prototype], #[code String], #[code Array])
        section.o-FlexContainer
          h3(class="!w:1o1") #[i Lunarized] Color Scheme
          section.o-Box(class="!w:1o2 a-bc-l03").h-darkbg
            h4.ColorTitle Lunarized Base03
            p.ColorRelation inverse of Solarized Base 03
            ul
              li dark code background
          section.o-Box(class="!w:1o2 a-bc-l3")
            h4.ColorTitle Lunarized Base3
            p.ColorRelation inverse of Solarized Base 3
            ul
              li light code background
          section.o-Box(class="!w:1o2 a-bc-l02").h-darkbg
            h4.ColorTitle Lunarized Base02
            p.ColorRelation inverse of Solarized Base 02
            ul
              li dark code border
          section.o-Box(class="!w:1o2 a-bc-l2")
            h4.ColorTitle Lunarized Base2
            p.ColorRelation inverse of Solarized Base 2
            ul
              li light code border
          section.o-Box(class="!w:1o2 a-bc-l01")
            h4.ColorTitle Lunarized Base01
            p.ColorRelation inverse of Solarized Base 01
            ul
              li light code emphasis
              li dark code comment
          section.o-Box(class="!w:1o2 a-bc-l1")
            h4.ColorTitle Lunarized Base1
            p.ColorRelation inverse of Solarized Base 1
            ul
              li light code comment
              li dark code emphasis
          section.o-Box(class="!w:1o2 a-bc-l00")
            h4.ColorTitle Lunarized Base00
            p.ColorRelation inverse of Solarized Base 00
            ul
              li light code text
          section.o-Box(class="!w:1o2 a-bc-l0")
            h4.ColorTitle Lunarized Base0
            p.ColorRelation inverse of Solarized Base 0
            ul
              li dark code text
          section.o-Box(class="!w:1o2 a-bc-lc")
            h4.ColorTitle Lunarized Cyan
            p.ColorRelation complement of Solarized Red
          section.o-Box(class="!w:1o2 a-bc-lr")
            h4.ColorTitle Lunarized Red
            p.ColorRelation complement of Solarized Cyan
          section.o-Box(class="!w:1o2 a-bc-lb")
            h4.ColorTitle Lunarized Blue
            p.ColorRelation complement of Solarized Orange
          section.o-Box(class="!w:1o2 a-bc-lo")
            h4.ColorTitle Lunarized Orange
            p.ColorRelation complement of Solarized Blue
          section.o-Box(class="!w:1o2 a-bc-li")
            h4.ColorTitle Lunarized Indigo
            p.ColorRelation complement of Solarized Yellow
          section.o-Box(class="!w:1o2 a-bc-ly")
            h4.ColorTitle Lunarized Yellow
            p.ColorRelation complement of Solarized Violet
          section.o-Box(class="!w:1o2 a-bc-lv")
            h4.ColorTitle Lunarized Violet
            p.ColorRelation complement of Solarized Green
          section.o-Box(class="!w:1o2 a-bc-lg")
            h4.ColorTitle Lunarized Green
            p.ColorRelation complement of Solarized Magenta
        section
          h3 Interactive Example
          form.o-FlexContainer
            p(class="!w:1o1").
              Check the radio buttons to add/remove classes to the #[code pre] Element below,
              which will change its color theme.
            fieldset(class="!w:1o3")
              legend Backgrounds
              ul.o-ListBare
                li
                  input#check-t-bg-sol-lite(type="radio" name="bg" value="t-bg-sol-lite")
                  label(for="check-t-bg-sol-lite") t-bg-sol-lite
                li
                  input#check-t-bg-sol-dark(type="radio" name="bg" value="t-bg-sol-dark")
                  label(for="check-t-bg-sol-dark") t-bg-sol-dark
                li
                  input#check-t-bg-lun-lite(type="radio" name="bg" value="t-bg-lun-lite" checked="")
                  label(for="check-t-bg-lun-lite") t-bg-lun-lite (default)
                li
                  input#check-t-bg-lun-dark(type="radio" name="bg" value="t-bg-lun-dark")
                  label(for="check-t-bg-lun-dark") t-bg-lun-dark
            fieldset(class="!w:1o3")
              legend Foregrounds
              ul.o-ListBare
                li
                  input#check-t-fg-sol-lite(type="radio" name="fg" value="t-fg-sol-lite" checked="")
                  label(for="check-t-fg-sol-lite") t-fg-sol-lite (default)
                li
                  input#check-t-fg-sol-dark(type="radio" name="fg" value="t-fg-sol-dark")
                  label(for="check-t-fg-sol-dark") t-fg-sol-dark
                li
                  input#check-t-fg-lun-lite(type="radio" name="fg" value="t-fg-lun-lite")
                  label(for="check-t-fg-lun-lite") t-fg-lun-lite
                li
                  input#check-t-fg-lun-dark(type="radio" name="fg" value="t-fg-lun-dark")
                  label(for="check-t-fg-lun-dark") t-fg-lun-dark
            fieldset(class="!w:1o3")
              legend Accents
              ul.o-ListBare
                li
                  input#check-default(type="radio" name="ac" value="" checked="")
                  label(for="check-default") none (default)
                li
                  input#check-t-ac-sol(type="radio" name="ac" value="t-ac-sol")
                  label(for="check-t-ac-sol") t-ac-sol
                li
                  input#check-t-ac-lun(type="radio" name="ac" value="t-ac-lun")
                  label(for="check-t-ac-lun") t-ac-lun
            p(class="!w:1o1"): input#reset-pre(type="reset")
          pre#syntax-example.
            <span class="c__Kwd">function</span> <span class="c__Cmd">Person(<span class="c__Arg">name</span>)</span> { <small class="c__Comm">// constructor for class `Person`</small>
              <span class="c__Obj">this</span>.greet = <span class="c__Str">'hello!'</span>;
            }
            <span class="c__Kwd">function</span> <span class="c__Cmd">TestSubject(<span class="c__Arg">name, adopted</span>)</span> { <small class="c__Comm">// constructor for class `TestSubject`</small>
              <span class="c__Obj">Person</span>.<span class="c__Cmd">call(<span class="c__Arg"><span class="c__Obj">this</span>, name, adopted</span>)</span>; <small class="c__Comm">// calls the parent constructor</small>
              <span class="c__Ctl">if (<span class="c__Opr">typeof</span> <span class="c__Arg">adopted</span> <span class="c__Opr">==</span> <span class="c__Str">'boolean'</span>)</span>
                <span class="c__Obj">this.</span>is_adopted = <span class="c__Arg">adopted</span>;
              <strong class="c__Emph"><span class="c__Ctl">else</span>  <span class="c__Obj">this.</span>is_adopted = <span class="c__Cst">false</span>;</strong>
            }
            <span class="c__Obj">Util</span>.<span class="c__Cmd">extend(<span class="c__Arg"><span class="c__Obj">TestSubject</span>, <span class="c__Obj">Person</span></span>)</span>; <small class="c__Comm">// extends `TestSubject` from `Person`</small>
            <span class="c__Kwd">var</span> you = <span class="c__Opr">new</span> <span class="c__Cmd">TestSubject(<span class="c__Arg"><span class="c__Str">'Chell'</span>, <span class="c__Cst">true</span></span>)</span>; <small class="c__Comm">// creates an instance of `TestSubject`</small>

            <small class="c__Comm">small.c__Comm  (comment)</small>
            <strong class="c__Emph">strong.c__Emph (importance)</strong>

            <span class="c__Ctl">.c__Ctl  (control)</span>                   <span class="c__Tag">.c__Tag  (HTML tag)</span>
            <span class="c__Opr">.c__Opr  (delimiter/operator)</span>        <span class="c__Atr">.c__Atr  (HTML attribute)</span>
            <span class="c__Kwd">.c__Kwd  (keyword/type)</span>              <span class="c__Val">.c__Val  (HTML/CSS value)</span>
            <span class="c__Cst">.c__Cst  (constant)</span>                  <span class="c__Sel">.c__Sel  (CSS selector)</span>
            <span class="c__Str">.c__Str  (string)</span>                    <span class="c__Prp">.c__Prp  (CSS property)</span>
            <span class="c__Cmd">.c__Cmd  (command/function)</span>
            <span class="c__Arg">.c__Arg  (argument/variable)</span>
            <span class="c__Obj">.c__Obj  (object)</span>
          pre.
            <span class="c__Kwd">function</span> <span class="c__Cmd">Person(<span class="c__Arg">name</span>)</span> { <small>// constructor for class `Person`</small>
              <span class="c__Obj">this</span>.greet = <span class="c__Str">'hello!'</span>;
            }
            <span class="c__Kwd">function</span> <span class="c__Cmd">TestSubject(<span class="c__Arg">name, adopted</span>)</span> { <small>// constructor for class `TestSubject`</small>
              <span class="c__Obj">Person</span>.<span class="c__Cmd">call(<span class="c__Arg"><span class="c__Obj">this</span>, name, adopted</span>)</span>; <small>// calls the parent constructor</small>
              <span class="c__Ctl">if (<span class="c__Opr">typeof</span> <span class="c__Arg">adopted</span> <span class="c__Opr">==</span> <span class="c__Str">'boolean'</span>)</span>
                <span class="c__Obj">this.</span>is_adopted = <span class="c__Arg">adopted</span>;
              <strong><span class="c__Ctl">else</span>  <span class="c__Obj">this.</span>is_adopted = <span class="c__Cst">false</span>;</strong>
            }
            <span class="c__Obj">Util</span>.<span class="c__Cmd">extend(<span class="c__Arg"><span class="c__Obj">TestSubject</span>, <span class="c__Obj">Person</span></span>)</span>; <small>// extends `TestSubject` from `Person`</small>
            <span class="c__Kwd">var</span> you = <span class="c__Opr">new</span> <span class="c__Cmd">TestSubject(<span class="c__Arg"><span class="c__Str">'Chell'</span>, <span class="c__Cst">true</span></span>)</span>; <small>// creates an instance of `TestSubject`</small>
      section
        h2 Table Color Scheme
        p Table rows, columns, or cells are colored based on their position in the table.
        section.o-Box
          h4 Table Row Background High
          ul: li rows/cols in table header/footer
        section.o-Box
          h4 Table Row Background Medium
          ul: li odd rows/cols in table body
        section.o-Box
          h4 Table Row Background Low
          ul: li even rows/cols in table body
        section.o-Box
          h4 Table Row Background Hover
          ul: li rows/cols on hover in table body
    nav.Bc
      ol.Anc
        li: a.Crumb(rel="top   " href="../../index.html   ") Home
        li: a.Crumb(rel="parent" href="../../home/web.html") Web
      ul.Sib
        li: a.Crumb(rel="sibling" href="typo.html     ") Typography
        li: a.Crumb(rel="sibling" href="objects.html  ") Objects
        li: a.Crumb(rel="sibling" href="comp-typo.html") Typo Components
        li: a.Crumb(rel="sibling" href="comp-ui.html  ") UI Components
        li: a.Crumb(rel="this   " href="schemes.html  ") Site Schemes
      ul.Child
    script(src="../../bower_components/jquery/dist/jquery.js")
    script(src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML,https://chharvey.github.io/chhlib/mathjax-localconfig.js")
    script(src="../scripts/global.js")
    script(src="../scripts/Util.js")
    script(src="../scripts/Color.js")
    script.
      $('.js-rowbc-swatch').change(function () {
        var orig = $(this).attr('value')
          , value = $(this).val() || orig
        function swatchChange(self, newvalue) {
          $(self).parents('tr').each(function () {
            $(this).attr('style', 'background-color: ' + newvalue + ' !important')
            $(this).find('th .ColorCode').html(newvalue)
          })
        }
        swatchChange($(this), value)
        $(this).parents('tr').find('td').each(function () {
          if ($(this).find('s').length === 0) {
            $(this).wrapInner('<s>').find('s').css('line-height','inherit').css('color', 'transparent')
          }
        })
        $(this).siblings('.js-reset-swatch').click(function () {
          swatchChange($(this), orig)
          $(this).parents('tr').find('td').each(function () {
            $(this).html($(this).find('s').html()) // unwraps contents with <s> element
          })
        })
      })
      var pre = $('#syntax-example')
      $('input[name="bg"]').change(function () {
        pre.removeClass('t-bg-sol-lite t-bg-sol-dark t-bg-lun-lite t-bg-lun-dark')
        if (this.checked) { pre.addClass($(this).val()) }
      })
      $('input[name="fg"]').change(function () {
        pre.removeClass('t-fg-sol-lite t-fg-sol-dark t-fg-lun-lite t-fg-lun-dark')
        if (this.checked) { pre.addClass($(this).val()) }
      })
      $('input[name="ac"]').change(function () {
        pre.removeClass('t-ac-sol t-ac-lun')
        if (this.checked) { pre.addClass($(this).val()) }
      })
      $('#reset-pre').click(function () {
        pre.removeClass()
      })
      var fontdemo = $('.this-c-FontDemo')
      $('input[name="fs"]').change(function () {
        fontdemo.css('font-style', (this.checked) ? $(this).val() : '')
      })
      $('input[name="fv"]').change(function () {
        fontdemo.css('font-variant', (this.checked) ? $(this).val() : '')
      })
      $('input[name="fw"]').change(function () {
        fontdemo.css('font-weight', (this.checked) ? $(this).val() : '')
      })
      $('input[name="fw"]').on('input change', function () {
        var val = $(this).val() // a string
        fontdemo.css('font-weight', val)
        var norm = (+val == 400) ? ' (normal)' : ''
        var bold = (+val == 700) ? ' (bold)' : ''
        $('#js-text-fw').val(val + norm + bold)
      })
      $('#reset-fonts').click(function () {
        fontdemo.css('font-style', '').css('font-variant','').css('font-weight', '')
      })
