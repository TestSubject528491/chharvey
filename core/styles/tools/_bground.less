// main: ../all.less

/*-----------------*\
    _bground.less
\*-----------------*/


/**
  * This Mixin sets the background position of an Object's background sprite image.
  * This assumes the sprite's images are linearly horizontally ordered.
@params
: @position : the position of the sprite's image to be used. must be a positive integer.
: @iconsize : the horizontal (x) size of the sprite's image. in pixels.
: @iconpadd : the padding between images in the sprite. in pixels.
@tags
: #background-image
@author
: Chris Harvey
@updated
: 2014-07-18
  */
.sprite(@position; @iconsize; @iconpadd) {
	background-position: ((@position - 1) * -(@iconsize + @iconpadd)) 0;
}
/**
  * Use this Mixin to apply a linear gradient background on an Element.
  * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient) for more info.
  * See [WPD](http://docs.webplatform.org/wiki/css/functions/linear-gradient) for more info.
@params
: ... : any number of parameters
@tags
: #gradient
: #vendorspecific
@author
: Chris Harvey
@updated
: 2014-07-08
  */
.gradient(...) {
	background-image: -webkit-linear-gradient(@arguments);
	background-image:    -moz-linear-gradient(@arguments);
	background-image:     -ms-linear-gradient(@arguments);
	background-image:      -o-linear-gradient(@arguments);
	background-image:         linear-gradient(@arguments);
	background-image:        -webkit-gradient(@arguments); // "Old Webkit"
}
/**
  * This Interface makes an object slightly transparent, but it becomes opaque upon `:hover`.
@tags
: #schematic
: #golden
@author
: Chris Harvey
@updated
: 2014-04-30
  */
.transp {
	opacity: @phi1;
	&:hover {opacity: 1;}
}
