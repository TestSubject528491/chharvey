
/*-------------*\
    vert.less
\*-------------*/

//Table of Contents
//- FONT SIZES
//- VERTICAL SPACING
//- VERTICAL BORDERS


//+++++++++++//
/*@FONT SIZES*/
//+++++++++++//
/** One vertical rhythm unit. This is the 'magic number'. */
@vru: @fontsize_base * @lineheight_base; // 24px

@fontsize_ratio_giga:    (6/1); // (48/8) or 6.000em
@fontsize_ratio_mega:    (4/1); // (32/8) or 4.000em
@fontsize_ratio_kilo:    (3/1); // (24/8) or 3.000em

@fontsize_ratio_alpha:   (2/1); // (16/8) or 2.000em
@fontsize_ratio_beta:    (3/2); // (12/8) or 1.500em
@fontsize_ratio_gamma:   (5/4); // (10/8) or 1.250em
@fontsize_ratio_delta:   (1/1); // (08/8) or 1.000em
@fontsize_ratio_epsilon: (7/8); // (07/8) or 0.875em
@fontsize_ratio_zeta:    (3/4); // (06/8) or 0.750em

@fontsize_ratio_milli:   (1/2); // (04/8) or 0.500em

/**
  * These Mixins multiply `font-size` by `@ratio` and adjusts `line-height` such that `font-size` * `line-height` = `@vru` (@vru is one vertical rhythm unit).
@params
: @ratio : the ratio of the new font size to `fontsize_base`
@tags
: #verticalrhythm
: #fontsize
@author
: Chris Harvey
@updated
: 2014-04-26
  */
.fontsize-scale(@ratio) {
	font-size: (@fontsize_base * @ratio);
	line-height: (@lineheight_base / @ratio);
	// this.line-height = @vru / this.font-size
	//                  = (@lineheight--base * @fontsize--base) / (@fontsize--base * @ratio)
	//                  = @lineheight--base / @ratio
}
.fontsize-lrg  {.fontsize-scale(@fontsize_ratio_gamma);}
.fontsize-med {.fontsize-scale(1);}
.fontsize-sml  {.fontsize-scale(@fontsize_ratio_zeta);}
.fontsize-inline {
	display: inline;
	line-height: @lineheight_base;
}
/**
  * This Interface sets large font-size and adjusts line-height.
@implements
: .fontsize-large
: .fontsize-inline
@tags
: #verticalrhythm
: #fontsize
@author
: Chris Harvey
@updated
: 2014-05-03
  */
.fontsize-lrg-inline {
	&:extend(.fontsize-lrg);
	&:extend(.fontsize-inline);
}
/**
  * This Interface sets small font-size and adjusts line-height.
@implements
: .fontsize-large
: .fontsize-inline
@tags
: #verticalrhythm
: #fontsize
@author
: Chris Harvey
@updated
: 2014-05-03
  */
.fontsize-sml-inline {
	&:extend(.fontsize-sml);
	&:extend(.fontsize-inline);
}
//++++ @end FONT SIZES ++++//


//+++++++++++++++++//
/*@VERTICAL SPACING*/
//+++++++++++++++++//
/**
  * These Interfaces provide vertical spacing of one vertical rhythm unit.
  * .vru-content is meant for text-containing block elements,
  *     such as p, blockquote, li, dt, dd, th, td 
@tags
: #verticalrhythm
: #golden
@author
: Chris Harvey
@updated
: 2014-04-26
  */
.vru-content {min-height: @vru;}
.vru-top {margin-top: @vru;}
.vru-bottom {padding-bottom: @vru;}
/**
  * This Mixin sets the padding-top, border-top, and margin-top such that the padding:margin ratio is Golden, while keeping the border-top-width. The sum of the padding, border, and margin is one vertical rhythm unit.
@params
: @brdrw : value of the border-top-width property. Must be less than `@vru`.
: @brdrs : value of the border-top-style property
: @brdrc : value of the border-top-color property
@tags
: #verticalrhythm
: #golden
@author
: Chris Harvey
@updated
: 2014-04-26
  */
.vru-top-phi(@brdrw; @brdrs; @brdrc) {
	padding-top: ((@vru - @brdrw) * @phi2);
	border-top: @brdrw @brdrs @brdrc;
	margin-top: ((@vru - @brdrw) * @phi1);
}
.vru-top-phi {.vru-top-phi(0; solid; #000);}
//++++ @end VERTICAL SPACING ++++//


//+++++++++++++++++//
/*@VERTICAL BORDERS*/
//+++++++++++++++++//
// 
/**
  * The following Mixins adjust borders for **BLOCK** elements only! They will keep the vertical rhythm intact when adding borders (by slightly adjusting position and margins). *Do *not** use these mixins on INLINE elements!
  * Note: Methods with same # of params cannot be overloaded; thus mixin names have modifiers.
@params
: @width: the width of the top or bottom border
: @side:  either `top` or `bottom`
: @style: a `border-style` value
: @color: a `border-color` value
@tags
: #verticalrhythm
: #border
@author
: Chris Harvey
@updated
: 2014-04-26
  */
.border-vert(@width) {
	display: block;
	position: relative;
	top: (-1 * @width);
}
/** Adjust only the top or bottom border. */
.border-vert-one(@width) {
	.border-vert(@width);
	margin-bottom: (-1 * @width);
}
.border-vert-one(@side; @width) {
	.border-vert-one(@width);
	border-@{side}-width: @width;
}
.border-vert-one(@side; @width; @style) {
	.border-vert-one(@side; @width);
	border-@{side}-style: @style;
}
.border-vert-one(@side; @width; @style; @color) {
	.border-vert-one(@side; @width; @style);
	border-color: @color;
}
/** Adjust both the top and bottom borders. */
.border-vert-both(@width) {
	.border-vert(@width);
	margin-bottom: (-2 * @width);
}
.border-vert-both(topbot; @width) {
	.border-vert-both(@width);
	border-width: @width;
	border-left: 0;
	border-right: 0;
}
.border-vert-both(topbot; @width; @style) {
	.border-vert-both(topbot; @width);
	border-style: @style;
}
.border-vert-both(topbot; @width; @style; @color) {
	.border-vert-both(topbot; @width; @style);
	border-color: @color;
}
/** Adjust all four borders. */
.border-vert-both(all; @width) {
	.border-vert-both(@width);
	border-width: @width;
}
.border-vert-both(all; @width; @style) {
	.border-vert-both(all; @width);
	border-style: @style;
}
.border-vert-both(all; @width; @style; @color) {
	.border-vert-both(all; @width; @style);
	border-color: @color;
}
//++++ @end VERTICAL BORDERS ++++//
