
/*-------------*\
    vert.less
\*-------------*/

//Table of Contents
//- FONT SIZES
//- VERTICAL SPACING
//- VERTICAL BORDERS


//+++++++++++//
/*@FONT SIZES*/
//+++++++++++//
@vru: @fontsize_base * @lineheight_base; // 24px

@fontsize_ratio--giga:    (6/1); // (48/8) or 6.000em
@fontsize_ratio--mega:    (4/1); // (32/8) or 4.000em
@fontsize_ratio--kilo:    (3/1); // (24/8) or 3.000em

@fontsize_ratio--alpha:   (2/1); // (16/8) or 2.000em
@fontsize_ratio--beta:    (3/2); // (12/8) or 1.500em
@fontsize_ratio--gamma:   (5/4); // (10/8) or 1.250em
@fontsize_ratio--delta:   (1/1); // (08/8) or 1.000em
@fontsize_ratio--epsilon: (7/8); // (07/8) or 0.875em
@fontsize_ratio--zeta:    (3/4); // (06/8) or 0.750em

@fontsize_ratio--milli:   (1/2); // (04/8) or 0.500em

/**
  * These Mixins multiply `font-size` by `@ratio` and adjusts `line-height` such that `font-size` * `line-height` = `@vru` (@vru is one vertical rhythm unit).
@params
: @ratio: the ratio of the new font size to `fontsize_base`
@author
: Chris Harvey
@tags
: #verticalrhythm
@updated
: 2014-04-26
  */
.fontsize--scale(@ratio) {
	font-size: (@fontsize_base * @ratio);
	// this.line-height = @vru / this.font-size
	//                  = (@lineheight--base * @fontsize--base) / (@fontsize--base * @ratio)
	//                  = @lineheight--base / @ratio
	line-height: (@lineheight_base / @ratio);
}
.fontsize--inline() {
	display: inline;
	line-height: @lineheight_base;
}
.fontsize(large)  {.fontsize--scale(@fontsize_ratio--gamma);}
.fontsize(medium) {.fontsize--scale(1);}
.fontsize(small)  {.fontsize--scale(@fontsize_ratio--zeta);}
.fontsize(large, inline) {
	.fontsize(large);
	.fontsize--inline();
}
.fontsize(small, inline) {
	.fontsize(small);
	.fontsize--inline();
}
//++++ @end FONT SIZES ++++//


//+++++++++++++++++//
/*@VERTICAL SPACING*/
//+++++++++++++++++//
/**
  * These Mixins provide vertical spacing of one vertical rhythm unit.
  * The .vru--content() Mixin provides minimum height and is meant for text-containing block elements.
  * The .vru-phi--top() Mixin provides a padding-top, border-top, and margin-top such that the padding-to-margin ratio is Golden.
@author
: Chris Harvey
@tags
: #verticalrhythm
: #golden
@updated
: 2014-04-26
  */
.vru--content() {min-height: @vru;}
.vru--top() {margin-top: @vru;}
.vru--bottom() {padding-bottom: @vru;}
.vru-phi--top(@brdr-width; @brdr-style; @brdr-color) {
	padding-top: ((@vru - @brdr-width) * @phi2);
	border-top: @brdr-width @brdr-style @brdr-color;
	margin-top: ((@vru - @brdr-width) * @phi1);
}
.vru-phi--top() {
	.vru-phi--top(0; solid; #000);
}
//++++ @end VERTICAL SPACING ++++//


//+++++++++++++++++//
/*@VERTICAL BORDERS*/
//+++++++++++++++++//
// 
/**
  * The following Mixins adjust borders for **BLOCK** elements only! They will keep the vertical rhythm intact when adding borders (by slightly adjusting position and margins). *Do *not** use these mixins on INLINE elements!
  * Note: Methods with same # of params cannot be overloaded; thus mixin names have modifiers.
@params
: @width: the width of the top or bottom border
: @side:  either `top` or `bottom`
: @style: a `border-style` value
: @color: a `border-color` value
@author
: Chris Harvey
@tags
: #verticalrhythm
: #border
@updated
: 2014-04-26
  */
.border-vert(@width) {
	display: block;
	position: relative;
	top: (-1 * @width);
}
.border-vert--one(@width) {
	.border-vert(@width);
	margin-bottom: (-1 * @width);
}
.border-vert--one(@side; @width) {
	.border-vert--one(@width);
	border-@{side}-width: @width;
}
.border-vert--one(@side; @width; @style) {
	.border-vert--one(@side; @width);
	border-@{side}-style: @style;
}
.border-vert--one(@side; @width; @style; @color) {
	.border-vert--one(@side; @width; @style);
	border-color: @color;
}
.border-vert--both(@width) {
	.border-vert(@width);
	margin-bottom: (-2 * @width);
}
.border-vert--both(topbot; @width) {
	.border-vert--both(@width);
	border-width: @width;
	border-left: 0;
	border-right: 0;
}
.border-vert--both(topbot; @width; @style) {
	.border-vert--both(topbot; @width);
	border-style: @style;
}
.border-vert--both(topbot; @width; @style; @color) {
	.border-vert--both(topbot; @width; @style);
	border-color: @color;
}
.border-vert--both(all; @width) {
	.border-vert--both(@width);
	border-width: @width;
}
.border-vert--both(all; @width; @style) {
	.border-vert--both(all; @width);
	border-style: @style;
}
.border-vert-both(all; @width; @style; @color) {
	.border-vert-both(all; @width; @style);
	border-color: @color;
}
//++++ @end VERTICAL BORDERS ++++//
