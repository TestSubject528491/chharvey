// main: all.less

/*-------------*\
	vert.less
\*-------------*/

//Table of Contents
//- FONT SIZES
//- VERTICAL SPACING
//- VERTICAL BORDERS


//+++++++++++//
/*@FONT SIZES*/
//+++++++++++//
@vru: @lineheight--base * @fontsize--base; // 24px

@fontsize--ratio--giga:    (6/1); // (48/8) or 6.000em
@fontsize--ratio--mega:    (4/1); // (32/8) or 4.000em
@fontsize--ratio--kilo:    (3/1); // (24/8) or 3.000em

@fontsize--ratio--alpha:   (2/1); // (16/8) or 2.000em
@fontsize--ratio--beta:    (3/2); // (12/8) or 1.500em
@fontsize--ratio--gamma:   (5/4); // (10/8) or 1.250em
@fontsize--ratio--delta:   (1/1); // (08/8) or 1.000em
@fontsize--ratio--epsilon: (7/8); // (07/8) or 0.875em
@fontsize--ratio--zeta:    (3/4); // (06/8) or 0.750em

@fontsize--ratio--milli:   (1/2); // (04/8) or 0.500em

.fontsize--scale(@ratio) {
	// * multiplies font-size by @ratio and adjusts line-height so that font-size * line-height = @vru
	font-size: (@fontsize--base * @ratio);
	// this.line-height = @vru / this.font-size
	//                  = (@lineheight--base * @fontsize--base) / (@fontsize--base * @ratio)
	//                  = @lineheight--base / @ratio
	line-height: (@lineheight--base / @ratio);
}
.fontsize(large)  {.fontsize--scale(@fontsize--ratio--gamma);}
.fontsize(medium) {.fontsize--scale(1);}
.fontsize(small)  {.fontsize--scale(@fontsize--ratio--zeta);}

.fontsize--inline() {
	display: inline;
	line-height: @lineheight--base;
}
.fontsize(large, inline) {
	.fontsize(large);
	.fontsize--inline();
}
.fontsize(small, inline) {
	.fontsize(small);
	.fontsize--inline();
}
//++++ @end FONT SIZES ++++//


//+++++++++++++++++//
/*@VERTICAL SPACING*/
//+++++++++++++++++//
.vru--content() {
	// * minimum height for text-containing block elements
	min-height: @vru;
}
.vru--top() {
	// * provides a margin-top of one vertical rhythm unit
	margin-top: @vru;
}
.vru--bottom() {
	// * provides a padding-bottom of one vertical rhythm unit
	padding-bottom: @vru;
}
.vru--top--false() {
	// * no margin-top:
	// - following all headings
	// - first child of some containers (figure, blockquote, li, dt, dd, td)
	margin-top: 0;
}
.vru--bottom--false() {
	padding-bottom: 0;
}
.vru-phi--top(@brdr-width; @brdr-style; @brdr-color) {
	// * provides a padding-top, border-top, and margin-top. The padding : margin ratio is Golden.
	padding-top: ((@vru - @brdr-width) * @phi2);
	border-top: @brdr-width @brdr-style @brdr-color;
	margin-top: ((@vru - @brdr-width) * @phi1);
}
.vru-phi--top() {
	.vru-phi--top(0; solid; #000);
}
//++++ @end VERTICAL SPACING ++++//


//+++++++++++++++++//
/*@VERTICAL BORDERS*/
//+++++++++++++++++//
// * Use the folowing mixins to adjust borders for **BLOCK** elements only! They will keep the vertical rhythm intact when adding borders (by slightly adjusting position and margins). *DO NOT* use these mixins on INLINE elements!
// Cannot overload methods with same # of parameters, thus mixin names have modifiers.
.border-vert(@width) {
	display: block;
	position: relative;
	top: (-1 * @width);
}
.border-vert--one(@width) {
	.border-vert(@width);
	margin-bottom: (-1 * @width);
}
.border-vert--one(@side; @width) {
	.border-vert--one(@width);
	border-@{side}-width: @width;
}
.border-vert--one(@side; @width; @style) {
	.border-vert--one(@side; @width);
	border-@{side}-style: @style;
}
.border-vert--one(@side; @width; @style; @color) {
	.border-vert--one(@side; @width; @style);
	border-color: @color;
}
.border-vert--both(@width) {
	.border-vert(@width);
	margin-bottom: (-2 * @width);
}
.border-vert--both(topbot; @width) {
	.border-vert--both(@width);
	border-width: @width;
	border-left: 0;
	border-right: 0;
}
.border-vert--both(topbot; @width; @style) {
	.border-vert--both(topbot; @width);
	border-style: @style;
}
.border-vert--both(topbot; @width; @style; @color) {
	.border-vert--both(topbot; @width; @style);
	border-color: @color;
}
.border-vert--both(all; @width) {
	.border-vert--both(@width);
	border-width: @width;
}
.border-vert--both(all; @width; @style) {
	.border-vert--both(all; @width);
	border-style: @style;
}
.border-vert-both(all; @width; @style; @color) {
	.border-vert-both(all; @width; @style);
	border-color: @color;
}
//++++ @end VERTICAL BORDERS ++++//
