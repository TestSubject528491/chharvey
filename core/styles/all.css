/*------------------*\
    _settings.less
\*------------------*/
/*@GLOBAL VARIABLES*/
/*@General Variables*/
/** Determines the amount to fade out. Change this if you wish. */
/** Used for horizontal spacing, e.g., inserting a space between a heading and subheading. */
/** Determines the duration for transition animation effects. */
/*@Fonts*/
/** These determine 1rem and the 'magic number'. Change these if you wish. */
/*@Color Scheme*/
/*@FUNCTIONS*/
/*@CONSTANTS*/
/*@Golden Values*/
/*@Even Values*/
/*@Color Values*/
/*---------------*\
    _reset.less
\*---------------*/
body,
section,
article,
aside,
nav,
main,
header,
footer,
h1,
h2,
h3,
h4,
h5,
h6,
p,
address,
figure,
blockquote,
ol,
ul,
dl,
dt,
dd,
pre {
  display: block;
}
li {
  display: list-item;
}
table {
  display: table;
  border-collapse: collapse;
}
caption {
  display: table-caption;
}
thead {
  display: table-header-group;
}
tbody {
  display: table-row-group;
}
tfoot {
  display: table-footer-group;
}
tr {
  display: table-row;
}
th,
td {
  display: table-cell;
}
code,
kbd,
samp,
var,
em,
strong,
mark,
i,
b,
q,
cite,
time,
dfn,
abbr,
small,
sup,
sub {
  display: inline;
}
hr {
  display: none;
}
q::before,
q::after {
  content: none;
}
body,
section,
article,
aside,
nav,
main,
header,
footer,
h1,
h2,
h3,
h4,
h5,
h6,
p,
address,
figure,
blockquote,
ol,
ul,
li,
dl,
dt,
dd,
table,
th,
td,
pre {
  padding: 0;
  border: 0;
  outline: 0;
  margin: 0;
  position: static;
}
html {
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  font-size: 16px;
  font-family: 'Helvetica', 'Arial', sans-serif;
  text-align: left;
  line-height: 1.25;
  vertical-align: baseline;
}
body {
  color: #000;
  background-color: #fff;
}
/*
h1, h2, h3, h4, h5, h6,
p, address, figure, blockquote,
ol, ul, li,
th,
a,
pre, code, kbd, samp, var,
em, strong, mark, i, b,
q, cite, dfn, abbr, del, ins, small, sup, sub {
	font-style:     inherit;
	font-variant:   inherit;
	font-weight:    inherit;
	font-size:      inherit;
	font-family:    inherit;
	text-align:     inherit;
	line-height:    inherit;
	vertical-align: inherit;
	color:          inherit;
	background-color: transparent;
}
*/
address,
em,
i,
cite,
dfn,
var {
  font-style: inherit;
}
h1,
h2,
h3,
h4,
h5,
h6,
th,
strong,
b {
  font-weight: inherit;
}
h1,
h2,
h3,
h4,
h5,
h6,
small,
sup,
sub {
  font-size: inherit;
}
pre,
code,
kbd,
samp {
  font-family: inherit;
}
caption {
  text-align: inherit;
}
sup,
sub {
  vertical-align: inherit;
}
ol,
ul {
  list-style-type: none;
}
del,
ins,
a {
  text-decoration: none;
}
a {
  color: inherit;
}
mark {
  background-color: transparent;
}
button {
  display: inline;
  padding: 0;
  border: 0;
  margin: 0;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
  background-color: transparent;
}
/*--------------------*\
    _interfaces.less
\*--------------------*/
/*@MIXINS*/
/**
  * Use this Mixin to apply a rotation transformation to an Element.
@params
: @rotation : the angle, in degrees, to rotate the element
@tags
: #transformation
: #vendorspecific
@author
: Chris Harvey
@updated
: 2014-05-10
  */
/**
  * Use this Mixin to apply a transition timing effect on an Element.
@params
: @props : the CSS property name(s). If more than one, they must be comma-separated
: @dura  : the length in time, in seconds, the transition is to be in effect
: @func  : the timing-function. See `https://developer.mozilla.org/en-US/docs/Web/CSS/timing-function`
: @delay : the length in time, in seconds, the transition will wait before starting
@tags
: #transition
: #vendorspecific
@author
: Chris Harvey
@updated
: 2014-06-17
  */
/**
  * Use this Mixin to apply a linear gradient background on an Element.
  * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient) for more info.
  *
  * The number of possibilities for the list of paramaters of the CSS function `linear-gradient()`
  * is so great that it would be inefficient to designate each parameter. Therefore, functions are
  * overloaded to handle up to five paramaters.
@params
: @param1 : the first paramater
: @param2 : the second paramater
: @param3 : the third paramater
: @param4 : the fourth paramater
: @param5 : the fifth paramater
@tags
: #gradient
: #vendorspecific
@author
: Chris Harvey
@updated
: 2014-06-24
  */
/*@Abstract Boxes*/
/**
  * This Mixin creates an abstract inline structure, boxed with a border.
@params
: @border_radius : the value of `border-radius` property
@implements
: .cellpaddingdefault
@mixesin
@tags
: #box
: #verticalrhythm
@author
: Chris Harvey
@updated
: 2014-05-25
  */
/**
  * This Mixin creates an abstract block structure, boxed with a border.
@params
: @border_radius : the value of `border-radius` property
@implements
: .cellpaddingdefault
: .vru-content
@mixesin
: .border-vert-both()
@tags
: #box
: #verticalrhythm
@author
: Chris Harvey
@updated
: 2014-05-25
  */
/*@INTERFACES*/
/**
  * This Interface creates default padding for cell-like structures (table cells, grid cells,
  * boxes, etc.).
  * The padding is based on the Vertical Rhythm Unit. The vertical padding is in rems, and
  * the horizontal padding is in pixels.
@tags
: #verticalrhythm
: #padding
@author
: Chris Harvey
@updated
: 2014-05-20
  */
.cellpaddingdefault,
.Cell,
.Code.Block,
.Label.Msg {
  padding: 12px 7.41640786px;
  padding: 0.75rem 7.41640786px;
}
/**
  * This Interface is used on containers of floats. It pushes subsequent content to the bottom
  * of the container.
@tags
: #float
@author
: Chris Harevy
@updated
: 2014-05-12
  */
.clearfix::after,
.Map.Vert::after,
.CSS .Ruleset::after {
  display: table;
  content: ' ';
  clear: both;
}
/**
  * This Interface makes an object slightly transparent, but it becomes opaque upon `:hover`.
@tags
: #schematic
: #golden
@author
: Chris Harvey
@updated
: 2014-04-30
  */
.transp {
  opacity: 0.61803399;
}
.transp:hover {
  opacity: 1;
}
/**
  * This Interface puts an outline around an element to show its structure. It is used for
  * deomonstration purposes.
@tags
: #structural
@author
: Chris Harvey
@updated
: 2014-06-07
  */
.help-otln {
  outline: 1px solid #cc004e;
}
/*@Delimiters*/
/**
  * This Interface adds opening and closing punctuation marks surrounding an element. The
  * punctuation marks are given by the `quotes` property.
@tags
: #typography
: #quote
@author
: Chris Harvey
@updated
: 2014-05-26
  */
.delimiters::before,
.parens::before,
.quotes-double::before,
.quotes-single::before,
.guillemets::before,
.Qblock.Long .Src::before,
q::before,
.Th::before {
  content: open-quote;
}
.delimiters::after,
.parens::after,
.quotes-double::after,
.quotes-single::after,
.guillemets::after,
.Qblock.Long .Src::after,
q::after,
.Th::after {
  content: close-quote;
}
.parens,
.Qblock.Long .Src {
  quotes: '(' ')';
}
.quotes-double,
q {
  quotes: '\201c' '\201d';
}
.quotes-single {
  quotes: '\2018' '\2019';
}
.guillemets,
.Th {
  quotes: '\00ab' '\00bb';
}
@media print {
  /**
	  * This Interface displays an Object on screen but does not print it.
	@tags
	: #schematic
	@author
	: Chris Harvey
	@updated
	: 2014-04-30
	  */
  .noprint {
    display: none;
  }
  /**
	  * This Interface starts a new page in the print media.
	@tags
	: #schematic
	@author
	: Chris Harvey
	@updated
	: 2014-04-30
	  */
  .pagebreak {
    page-break-before: always;
    padding-top: 0.25in;
  }
}
/*--------------*\
    _grid.less
\*--------------*/
/*@WIDTHS*/
/**
  * The following Interfaces change the width of the Objects that implement them.
  * The Interface names describe the widths.
@tags
: #grid
: #golden
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.w-p0,
.w-f1o1,
.w-f2o2,
.w-f3o3,
.w-f4o4,
.w-f5o5,
.w-f6o6,
.center-ful,
.normal-main {
  width: 100%;
}
.w-p1,
.center-sml {
  width: 61.80339887%;
}
.w-p2 {
  width: 38.19660113%;
}
.w-p3 {
  width: 23.60679775%;
}
.w-p4 {
  width: 14.58980338%;
}
.w-p3c {
  width: 76.39320225%;
}
.w-p4c {
  width: 85.41019662%;
}
.w-f1o2,
.w-f2o4,
.w-f3o6 {
  width: 50%;
}
.w-f1o3,
.w-f2o6 {
  width: 33.33333333%;
}
.w-f2o3,
.w-f4o6,
.center-med {
  width: 66.66666667%;
}
.w-f1o4 {
  width: 25%;
}
.w-f3o4,
.center-lrg {
  width: 75%;
}
.w-f1o5 {
  width: 20%;
}
.w-f2o5 {
  width: 40%;
}
.w-f3o5 {
  width: 60%;
}
.w-f4o5 {
  width: 80%;
}
.w-f1o6 {
  width: 16.66666667%;
}
.w-f5o6 {
  width: 83.33333333%;
}
/*@MARGINS*/
/**
  * The following Mixins define horizontal margins on `.Block`s of content.
  * `.margin-phi-[left|right]()` splits the margins so that the ratio of [left|right] margin
  * to [right|left] margin is Golden.
  * `.margin-even()` splits the margins equally.
  * `.margin-all-[left|right]()` moves all horizontal margins to the [left|right] side.
@tags
: #golden
@author
: Chris Harvey
@updated
: 2014-05-18
  */
/**
  * This Interface is like the `.margin-even()` Mixin except it can be used when the width of the
  * block is unknown. It is sets the left and right margins to `auto`.
@tags
@author
: Chris Harvey
@updated
: 2014-06-16
  */
.margin-even,
.List.I.Iconlist {
  margin-left: auto;
  margin-right: auto;
}
/**
  * This Object represents a block of content that has horizontal margins. It's not technically
  * part of the "grid" system, but it's here because it's used for layout.
@tags
: #golden
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.w-p1.left {
  margin-right: 38.19660113%;
}
.w-p2.left {
  margin-right: 61.80339887%;
}
.w-p3.left {
  margin-right: 76.39320225%;
}
.w-p4.left {
  margin-right: 85.41019662%;
}
.w-p3c.left {
  margin-right: 23.60679775%;
}
.w-p4c.left {
  margin-right: 14.58980338%;
}
.w-p1.right {
  margin-left: 38.19660113%;
}
.w-p2.right {
  margin-left: 61.80339887%;
}
.w-p3.right {
  margin-left: 76.39320225%;
}
.w-p4.right {
  margin-left: 85.41019662%;
}
.w-p3c.right {
  margin-left: 23.60679775%;
}
.w-p4c.right {
  margin-left: 14.58980338%;
}
.w-p1.ml {
  margin-left: 14.58980338%;
  margin-right: 23.60679775%;
}
.w-p1.mr {
  margin-left: 23.60679775%;
  margin-right: 14.58980338%;
}
.w-p2.ml {
  margin-left: 23.60679775%;
  margin-right: 38.19660113%;
}
.w-p2.mr {
  margin-left: 38.19660113%;
  margin-right: 23.60679775%;
}
.center-sml {
  margin-left: 19.09830056%;
  margin-right: 19.09830056%;
}
.center-med {
  margin-left: 16.66666667%;
  margin-right: 16.66666667%;
}
.center-lrg {
  margin-left: 12.5%;
  margin-right: 12.5%;
}
/*@Undo Golden Blocks*/
/*@TABLE SYSTEM*/
/**
  * This Object represents a container of blocks of content. The inner blocks are alinged
  * horizontally, as if all in the same row.
  * `.Grow` = "grid row"
@tags
: #grid
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.Grow {
  display: table;
  width: 100%;
}
/**
  * This Object represents a block of content within a `.Grow`. These blocks are alinged
  * horizontally.
  * `.Gcol` = "grid col"
@implements
: .P0   and similar
: .F1o1 and similar
@tags
: #grid
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.Grow > .Gcol {
  display: table-cell;
  vertical-align: top;
  overflow: visible;
}
/*@GUTTERS*/
/*--------------*\
    _vert.less
\*--------------*/
/*@FONT SIZES*/
/** One vertical rhythm unit. This is the 'magic number'. */
/**
  * These Mixins multiply `font-size` by `@ratio` and adjusts `line-height` such that
  * `font-size` * `line-height` = one vertical rhythm unit.
  * The `.fontsize-scale-double()` Mixin adjusts `line-height` such that
  * `font-size` * `line-height` = two vertical rhythm units
@params
: @ratio : the ratio of the new font size to `fontsize_base`
@tags
: #verticalrhythm
: #fontsize
@author
: Chris Harvey
@updated
: 2014-04-26
  */
/**
  * Same as `.fontsize-scale()` Mixins except adjusts `line-height` such that
  * 	`font-size` * `line-height` = two vertical rhythm units.
@params
: @ratio : the ratio of the new font size to `fontsize_base`
@tags
: #verticalrhythm
: #fontsize
@author
: Chris Harvey
@updated
: 2014-05-03
  */
/**
  * This Interface sets a [large|medium|small] font size and corresponding line height.
@implements
: .fontsize-scale()
@tags
: #verticalrhythm
: #fontsize
@author
: Chris Harvey
@updated
: 2014-05-20
  */
.fontsize-lrg,
.fontsize-lrg-inline,
.Qblock {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2;
}
.fontsize-med,
.Qblock.Long,
.Qblock.Long .Src,
.Button.Crumb {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
}
.fontsize-sml,
.fontsize-sml-inline,
.Capt,
.Qblock .Src,
.Table,
.Code.Block,
.Label,
.Button,
.Code,
.Dir,
.Key,
sup,
sub,
code {
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 2;
}
/**
  * This Interface sets an element to inline and does not affect vertical rhythm.
@tags
: #verticalrhythm
: #fontsize
@author
: Chris Harvey
@updated
: 2014-05-20
  */
.fontsize-inline,
.fontsize-lrg-inline,
.fontsize-sml-inline,
.Button,
.Code,
.Dir,
.Key,
sup,
sub,
code {
  display: inline;
  line-height: inherit;
}
/**
  * This Interface sets [large|small] font size for inline elements. They do not affect
  * vertical rhythm.
@implements
: .fontsize-[lrg|sml]
: .fontsize-inline
@tags
: #verticalrhythm
: #fontsize
@author
: Chris Harvey
@updated
: 2014-05-03
  */
/*@VERTICAL SPACING*/
/**
  * This Interface provides a minimum height of one vertical rhythm unit.
  * It is Meant for text-containing block elements, such as p, blockquote, li, dt, dd, th, td.
  * If these elements have shorter contents, the vertical rhythm won't break.
@tags
: #verticalrhythm
@author
: Chris Harvey
@updated
: 2014-05-10
  */
.vru-content,
.P,
.Capt,
.Addy,
.Fig,
.Qblock,
.List > .Item,
.Enum > .Item,
.Map > .Term,
.Map > .Desc,
.Cell,
.Code.Block,
.Label.Msg,
.Label.Tag {
  min-height: 24px;
  min-height: 1.5rem;
}
/**
  * These Mixins provide [top|bottom] spacing of a multiple of a vertical rhythm unit.
@params
: @ratio : the multliplier, i.e. how many `rem`s
@tags
: #verticalrhythm
@author
: Chris Harvey
@updated
: 2014-05-10
  */
.vru-top-0,
.List > .Item > .List {
  margin-top: 0;
}
.vru-bottom-0 {
  padding-bottom: 0;
}
.vru-top-1,
.P,
.Qblock.Long .Src,
.List,
.Map,
.Table,
.Label.Msg {
  margin-top: 24px;
  margin-top: 1.5rem;
}
.vru-bottom-1,
.P.Intro,
.Bc > .Anc,
.Bc > .Sib,
.Bc > .Child {
  padding-bottom: 24px;
  padding-bottom: 1.5rem;
}
/**
  * This Mixin sets the padding-top, border-top, and margin-top such that the padding:margin ratio
  * is Golden, while keeping the border-top-width. The sum of the padding, border, and margin is
  * one vertical rhythm unit.
@params
: @brdrw : value of the border-top-width property. Must be in pixels and less than `@vru_px`.
: @brdrs : value of the border-top-style property
: @brdrc : value of the border-top-color property
@tags
: #verticalrhythm
: #golden
@author
: Chris Harvey
@updated
: 2014-04-26
  */
.vru-top-phi,
.Addy,
.Fig,
.Qblock {
  padding-top: 9.16718427px;
  margin-top: 14.83281573px;
  border-top-width: 0;
  border-top-style: solid;
  border-top-color: #000000;
}
/*@VERTICAL BORDERS*/
/**
  * The following Mixins adjust borders for **BLOCK** elements only! They will keep the
  * vertical rhythm intact when adding borders (by slightly adjusting position and margins).
  * Do *not* use these mixins on INLINE elements!
  * Note: Methods with same # of params cannot be overloaded; thus mixin names have modifiers.
@params
: @width: the width of the top or bottom border
: @side:  either `top` or `bottom`
: @style: a `border-style` value
: @color: a `border-color` value
@tags
: #verticalrhythm
: #border
@author
: Chris Harvey
@updated
: 2014-04-26
  */
/** Adjust only the top or bottom border. */
/** Adjust both the top and bottom borders. */
/** Adjust all four borders. */
/*--------------*\
    _body.less
\*--------------*/
html {
  font-size: 16px;
  font-family: 'Optima', 'Candara', 'Helvetica', sans-serif;
  line-height: 1.5;
}
body {
  color: #0e0900;
  background-color: #f1f6ff;
}
main {
  margin-left: 23.60679775%;
  margin-right: 14.58980338%;
  margin-bottom: 192px;
}
/**
  * This Interface is to be used only on the `main` Element. It undoes the default style of `main`.
@tags
: #golden
@author
: Chris Harvey
@updated
: 2014-06-17
  */
.normal-main {
  margin-left: auto;
  margin-right: auto;
}
/**
  * This Interface undoes the effects of the `main` Element to a component inside.
  * Essentially, it treats the component as if it were not inside the `main` Element.
@tags
: #golden
@author
: Chris Harvey
@updated
: 2014-06-17
  */
.undo-main {
  width: 161.80339887%;
  position: relative;
  left: -38.19660113%;
  background-color: #fffcfa;
}
/**
  * The following Interfaces add background images to an Element, typically the `body` Element.
@tags
: #schematic
: #golden
@author
: Chris Harvey
@updated
: 2014-06-08
  */
.crossgrid-lined,
.Qblock {
  background-image: url('http://chharvey.github.io/core/images/crossgrid-lined_1x24.svg');
  background-size: 1px 24px;
  background-repeat: repeat;
  background-position: left bottom;
  background-position-y: bottom;
}
.crossgrid-phi {
  background-image: url('http://chharvey.github.io/core/images/crossgrid-phi_1440x24.svg');
  background-size: 100% 24px;
  background-repeat: repeat-y;
}
.crossgrid-even {
  background-image: url('http://chharvey.github.io/core/images/crossgrid-even_1440x24.svg');
  background-size: 100% 24px;
  background-repeat: repeat-y;
}
.crossgrid-even-lcm {
  background-image: url('http://chharvey.github.io/core/images/crossgrid-even-lcm_288x24.svg');
  background-size: 20% 24px;
  background-repeat: repeat;
}
@media print {
  body {
    font-size: 16px;
    font-size: 1rem;
    line-height: 1.5;
    color: #000;
    background-color: #fff;
    background-image: none;
  }
  main {
    width: auto;
    margin-left: auto;
    margin-right: auto;
  }
}
/*------------------*\
    _headings.less
\*------------------*/
/**
  * This Object represents a generic textual heading of a section, post, article, or document.
  * It does not represent a heading in a table. See the `.Cell.Hc` Object.
@tags
: #typography
: #heading
: #section
@author
: Chris Harvey
@updated
: 2014-04-14
  */
.H {
  display: block;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  font-family: 'Avenir', 'Calibri', 'Century Gothic', sans-serif;
  letter-spacing: 1px;
}
/**
  * This Object represents a generic tagline inside a heading, called a 'subheading'.
@tags
: #typography
: #heading
@author
: Chris Harvey
@updated
: 2014-04-30
  */
.H > .Hsub {
  font-size: 80%;
  padding-left: 24px;
  font-weight: normal;
  color: rgba(14, 9, 0, 0.61803399);
}
/**
  * The six Objects below represent different levels of headings, starting from top-level to level 6.
@extends
: .H
@tags
: #typography
: #heading
: #section
@author
: Chris Harvey
@updated
: 2014-04-14
  */
.H.Alpha {
  font-size: 48px;
  font-size: 3rem;
  line-height: 0.5;
  line-height: 1;
  margin-top: 29.66563146px;
  margin-top: 1.85410197rem;
  padding-bottom: 18.33436854px;
  padding-bottom: 1.14589803rem;
  font-variant: small-caps;
  font-weight: bold;
  text-align: center;
  color: #1800cc;
}
.H.Alpha > .Hsub {
  color: #1800cc;
}
.H.Beta {
  font-size: 35px;
  font-size: 2.1875rem;
  line-height: 0.68571429;
  margin-top: 24px;
  margin-top: 1.5rem;
  padding-bottom: 24px;
  padding-bottom: 1.5rem;
  font-weight: bold;
  color: #2d1f99;
}
.H.Beta > .Hsub {
  color: #2d1f99;
}
.H.Gamma {
  font-size: 26px;
  font-size: 1.625rem;
  line-height: 0.92307692;
  margin-top: 31.992px;
  margin-top: 1.9995rem;
  padding-bottom: 16.008px;
  padding-bottom: 1.0005rem;
  font-variant: small-caps;
  font-weight: bold;
}
.H.Delta {
  font-size: 21px;
  font-size: 1.3125rem;
  line-height: 1.14285714;
  margin-top: 18px;
  margin-top: 1.125rem;
  padding-bottom: 6px;
  padding-bottom: 0.375rem;
  font-style: italic;
  font-weight: bold;
}
.H.Epsilon {
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333333;
  margin-top: 0px;
  margin-top: 0rem;
  padding-bottom: 0px;
  padding-bottom: 0rem;
  font-style: italic;
  color: #2d1f99;
}
.H.Epsilon > .Hsub {
  color: #2d1f99;
}
.H.Zeta {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
  margin-top: 0px;
  margin-top: 0rem;
  padding-bottom: 0px;
  padding-bottom: 0rem;
  font-style: italic;
  font-variant: small-caps;
}
/**
  * A fancy heading for the portfolio pages
@extends
: .H.Alpha
@tags
: #typography
: #heading
@author
: Chris Harvey
@updated
: 2014-06-19
  */
.H.Alpha.Folio {
  font-size: 48px;
  font-size: 3rem;
  line-height: 0.5;
  line-height: 1;
  margin-top: 96px;
  margin-top: 6rem;
  padding-bottom: 48px;
  padding-bottom: 3rem;
  font-weight: normal;
  font-variant: normal;
  font-family: 'Zapfino', script;
  white-space: nowrap;
}
.H.Alpha.Folio .cap,
.H.Alpha.Folio::first-letter {
  font-size: 96px;
  font-size: 6rem;
  line-height: 0.25;
  font-family: 'Snell Roundhand', 'Zapfino', script;
}
@media print {
  .H {
    font-size: 16px;
    font-size: 1rem;
    line-height: 1.5;
  }
}
/*--------------------*\
    _paragraphs.less
\*--------------------*/
/**
  * These Mixins set the padding, border, and margin on the left or right side of an Object,
  * such that the border:padding ratio and the (border+padding):margin ratio are Golden.
@params
: @side:  either "left" or "right"
: @brdrw : value of the `border-[left|right]-width` property
: @brdrs : value of the `border-[left|right]-style` property
: @brdrc : value of the `border-[left|right]-color` property
@tags
: #golden
@author
: Chris Harvey
@updated
: 2014-05-10
  */
/** negate the effects of `.spacing-phi(@side; @brdrw; @brdrs; @brdrc)`  on the [left|right] side */
/**
  * This Object represents a generic paragraph in a section, article, or document. A paragraph
  * Object is a small grouping of textual ideas. In the written media, paragraphs can span
  * anywhere from 3 to 8 sentences. However on the Web, they can be much, much shorter.
@implements
: .vru-content
: .vru-top-1
@tags
: #typography
: #paragraph
@author
: Chris Harvey
@updated
: 2014-04-26
  */
.P {
  display: block;
}
/**
  * This Object refers to the first ("lede"/"lead") sentence in a paragraph or caption, which may
  * act as a "heading" for that paragraph or caption.
  * This Object is typically a child of a `.P` Object, or any paragraph-like Objects such as `.Capt`.
  * This can also be useful in a list of prose ("LOP"), whose list items consist of long prose text.
@tags
: #typography
: #span
@author
: Chris Harvey
@updated
: 2014-05-29
  */
.Lede {
  font-weight: bold;
  padding-right: 24px;
}
/**
  * This Object represents an introduction paragraph, typically referred to as a "standfirst"
  * (in the U.K.). It may also serve as an abstract of a scholarly article. This Object almost
  * always follows a `.H` Object (a heading).
@extends
: .P
@implements
: .vru-bottom-1
@tags
: #typography
: #paragraph
@author
: Chris Harvey
@updated
: 2014-05-29
  */
.P.Intro {
  font-weight: bold;
  font-family: 'Avenir', 'Calibri', 'Century Gothic', sans-serif;
  text-align: justify;
}
/**
  * This Object represents a paragraph whose first letter is a dropped capital ("drop cap").
@extends
: .P
@mixesin
: .fontsize-scale()
@tags
: #typography
: #paragraph
@author
: Chris Harvey
@updated
: 2014-04-30
  */
.P.Dropcap::first-letter {
  font-size: 32px;
  font-size: 2rem;
  line-height: 0.75;
  float: left;
  padding-top: 24px;
  padding-right: 12px;
  font-style: normal;
  font-weight: normal;
  font-family: 'Zapfino', script;
  color: #1800cc;
}
/*@QUASI-PARAGRAPHS*/
/**
  * This Object represents a generic caption of any sort. A caption is usually a short summary or
  * description of some content ("the described content"). The described content may be in a
  * literal `figure` element, `table` element, or it may be any generic content. Since captions are
  * usually too short to be a paragraph, it may *not* contain `.P` Objects. If the described content
  * is text only, the caption should be shorter and more concise than the content's text.
  * If this `.Capt` is a child of a `figure` element, it should be a `figcaption` element.
  * If this `.Capt` is a child of a `table` element, it should be a `caption` element.
@implements
: .vru-content
: .fontsize-small
@tags
: #typography
: #caption
: #table
: #figure
@author
: Chris Harvey
@updated
: 2014-05-11
  */
.Capt {
  text-align: right;
}
/**
  * A caption may appear before or after the described content, even if it and the content are
  * children of the same Object (e.g., a `figure`). A `.P.Capt.Before` appears before the content;
  * a `.P.Capt.After` appears after.
  * Note: According to the HTML5 specs, a `table > caption`, if it exists, may *only* be the
  * first child. However, applying `.Capt.Before` to the `table > caption:first-child` will make it
  * look ugly, because the borders conflict and it will have `display: block;` rather than
  * `display: table-caption;`. Just don't apply `.Capt.Before` or `.Capt.After` to `table > caption`s.
@extends
: .Capt
@mixesin
: .border-vert-one()
@tags
: #typography
: #caption
: #table
: #figure
@author
: Chris Harvey
@updated
: 2014-05-10
  */
.Capt.Before {
  display: block;
  position: relative;
  top: -1px;
  margin-bottom: -1px;
  border-bottom-width: 1px;
  border-bottom-style: dotted;
}
.Capt.After {
  display: block;
  position: relative;
  top: -1px;
  margin-bottom: -1px;
  border-top-width: 1px;
  border-top-style: dotted;
}
/**
  * This Object represents a generic postal address. It may be the contact address of the document
  * author(s) (contained in an `address` element), or it may be any arbitrary postal mailing address.
@extends
: .P
@implements
: .vru-content
: .vru-top-phi
@mixesin
: .spacing-phi()
@tags
: #typography
: #paragraph
: #geolocation
@author
: Chris Harvey
@updated
: 2014-04-30
  */
.Addy {
  border-right-width: 3px;
  border-right-style: solid;
  padding-right: 4.85410197px;
  margin-right: 12.70820393px;
  display: block;
  border-radius: 6px;
  text-align: right;
}
/**
  * This Object represents a generic figure in a document. A figure contains excerpts of text,
  * examples, or images that are used to illustrate a concept. This may or may not be a
  * literal `figure` element.
  * Inside this `.Fig` there may exist a `.Capt` (a generic caption), either at the beginning or at
  * the end. The `.Capt` may or may not be a `figcaption` or `caption` element.
  * Content in this `.Fig`---including its caption---is permissible to be extracted from the
  * document and presented on its own.
@implements
: .vru-content
: .vru-top-phi
@mixesin
: .spacing-phi()
@tags
: #typography
: #figure
: #caption
@author
: Chris Harvey
@updated
: 2014-05-10
  */
.Fig {
  border-left-width: 4px;
  border-left-style: solid;
  padding-left: 6.47213595px;
  margin-left: 16.94427191px;
  border-right-width: 4px;
  border-right-style: solid;
  padding-right: 6.47213595px;
  margin-right: 16.94427191px;
  display: block;
}
/**
  * This Object represents any Block Quotation, representing material taken directly from another
  * source. It may or may not take the form of a literal `blockquote` element.
  * If the original source is less than 40 words and does not have paragraph breaks (for example,
  * extracted inline text from an article), this `.Qblock` should not contain Paragraphs; it should
  * directly contain the source's text.
@implements
: .vru-content
: .vru-top-phi
: .fontsize-lrg
@mixesin
: .spacing-phi()
: .fontsize-scale-double()
@tags
: #typography
: #quote
@author
: Chris Harvey
@updated
: 2014-05-10
  */
.Qblock {
  border-left-width: 7px;
  border-left-style: double;
  padding-left: 11.32623792px;
  margin-left: 29.65247584px;
  display: block;
  font-family: 'Century Gothic', 'Gill Sans', 'Avenir', sans-serif;
}
/**
  * The `.Src` Object represents the citation of a source inside a `.Qblock` element. It is
  * recommended to apply this Class to a `cite` element.
@belongsto
: .Qblock
@implements
: .fontsize-sml
@tags
: #typography
: #quote
@author
: Chris Harvey
@updated
: 2014-05-10
  */
.Qblock .Src {
  display: block;
  padding-right: 24px;
  text-align: right;
}
.Qblock .Src::before {
  content: '~\0020';
}
/**
  * This Object represents a "long" block quotation.
  * If the original source is more than 40 words and does not have paragraph breaks, this
  * `.Qblock.Long` should have exactly one `.P` object, which contains the text from the source.
  * If the original source has paragraph breaks, regardless of word count, this `.Qblock.Long`
  * should have paragraph breaks that correspond to the source.
@extends
: .Qblock
@implements
: .fontsize-med
@tags
: #typography
: #quote
@author
: Chris Harvey
@updated
: 2014-05-10
  */
.Qblock.Long .Src {
  padding-right: 0;
}
.Capt,
.Addy,
.Fig,
.Qblock {
  border-color: #9acc7a;
}
/**
  * This Object represents a generic article, technical document, blog post, etc. This Object may
  * or may not take the form of a literal `article` element or `main` element of a page. This
  * Object is designed to contain other block-level Objects such as Headings and Paragraphs.
@tags
: #typography
: #article
@author
: Chris Harvey
@updated
: 2014-05-03
  */
.Article {
  font-family: 'Baskerville', 'Palatino', 'Book Antiqua', serif;
  text-align: justify;
}
/**
  * This Object represents text in an article that is not to displayed like .Article text.
  * Essentially it reverts back to the body copy styles.
@tags
: #typography
: #article
@author
: Chris Harvey
@updated
: 2014-05-02
  */
.UndoArticle {
  font-family: 'Optima', 'Candara', 'Helvetica', sans-serif;
  text-align: left;
}
@media print {
  .Fig,
  .Addy,
  .Qblock {
    font-size: 16px;
    font-size: 1rem;
    line-height: 1.5;
    border-left-width: 0;
    border-left-style: solid;
    padding-left: 0;
    margin-left: 0;
    border-left-color: #000000;
    border-right-width: 0;
    border-right-style: solid;
    padding-right: 0;
    margin-right: 0;
    border-right-color: #000000;
  }
}
/*---------------*\
    _lists.less
\*---------------*/
/*@LISTS*/
/**
  * This Interface adds a left padding to a `.List` Object. The padding-left is set to 48px, which is
  * equal to 0.5in, the standard indent for APA style.
@tags
: #typography
: #list
: #indent
: #padding
@author
: Chris Harvey
@updated
: 2014-05-11
  */
.listindent,
.List > .Item > .List,
.List.O,
.List.U {
  padding-left: 48px;
}
/**
  * This Object represents a block list. It may be a literal `ol` or `ul` element containing
  * `li` Elements, or it may be the abstract notion of a list of other block Objects. The order of
  * list items may be releveant or irrelevant.
  * This `.List` Object is  displayed as a block Object containing other block Objects. See the
  * `.Enum` Object for a short listing of inline Objects (e.g., a list of keywords).
@implements
: .vru-top-1
@tags
: #typography
: #list
@author
: Chris Harvey
@updated
: 2014-05-03
  */
.List {
  display: block;
  list-style-type: none;
  list-style-position: outside;
}
/**
  * This Object represents a block item in a `.List` Object. It may be a literal `li` Element
  * inside an `ol` or `ul` Element, or it may be any Element in a `.List` Object.
@implements
: .vru-content
@tags
: #typography
: #list
@author
: Chris Harvey
@updated
: 2014-05-08
  */
.List > .Item {
  display: list-item;
}
/**
  * This Object represents a nested List Object nested within a List Item Object.
@implements
: .vru-top-0
: .listindent
@tags
: #typography
: #list
@author
: Chris Harvey
@updated
: 2014-05-10
  */
/**
  * This Object represents an ordered list, or a list used for an outline. This does *not*
  * correspond directly to a literal `ol` element; this Object is simply to be displayed with
  * block list items, with markers that indicate order. This class does *not* indicate that the
  * list is semantically ordered. Typical uses include table of contents, etc. Outlines are by
  * definition, ordered.
@extends
: .List
@implements
: .listindent
@tags
: #typography
: #list
: #ordered
@author
: Chris Harvey
@updated
: 2014-05-11
  */
.List.O {
  list-style-type: decimal-leading-zero;
  list-style-type: decimal;
}
/**
  * These Objects represent outlined lists with different enumeration types.
@extends
: .List.O
@tags
: #typography
: #list
: #ordered
@author
: Chris Harvey
@updated
: 2014-05-03
  */
.List.O.Omega {
  list-style-type: decimal-leading-zero;
}
.List.O.Alpha {
  list-style-type: upper-roman;
}
.List.O.Beta {
  list-style-type: upper-alpha;
}
.List.O.Gamma {
  list-style-type: decimal;
}
.List.O.Delta {
  list-style-type: lower-alpha;
}
.List.O.Epsilon {
  list-style-type: lower-roman;
}
.List.O.Zeta {
  list-style-type: lower-greek;
}
/**
  * This Object represents a generic list whose items are to be displayed as blocks with the same
  * markers. It does *not* necessarily correspond directly to a literal `ul` element. This class
  * does *not* indicate that the list is semantically unordered.
@extends
: .List
@implements
: .listindent
@tags
: #typography
: #list
: #unordered
@author
: Chris Harvey
@updated
: 2014-05-11
  */
.List.U {
  list-style-type: square;
}
/**
  * This Object represents a generic list whose items are to be displayed inline. The list itself
  * appears as a block.
@extends
: .List
@tags
: #typography
: #list
: #inline
@author
: Chris Harvey
@updated
: 2014-05-11
  */
.List.I > .Item {
  display: inline;
}
/**
  * This Object represents a list of images, for example, contact icons.
@extends
: .List.I
@tags
: #typography
: #list
@author
: Chris Harvey
@updated
: 2014-06-16
  */
.List.I.Iconlist {
  width: 400px;
  text-align: center;
}
/**
  * This Object represents an action list, which typically contains hyperlinks.
@extends
: .List
@tags
: #typography
: #list
: #link
@author
: Chris Harvey
@updated
: 2014-05-11
  */
.List.A > .Item {
  color: #0062ff;
}
.List.A > .Item:hover {
  color: #ff9d00;
}
.List.A > .Item::before {
  content: '\2713\0020';
}
/*@ENUMS*/
/**
  * This Object represents a inline listing of items, typically words. The order of items may or
  * may not be relevant.
@tags
: #typography
: #list
@author
: Chris Harvey
@updated
: 2014-05-26
  */
.Enum {
  display: inline;
}
.Enum > .Item {
  display: inline;
}
/**
  * This Object represents a 'List in Prose', a list that is contained within prose paragraphs.
  * The list items contain spans of text, but not whole paragraphs. It is displayed inline, and has
  * inline items as well. The items are preceded with counters.
@extends
: .Enum
@tags
: #typography
: #list
: #inline
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Enum.LIP {
  counter-reset: count;
}
.Enum.LIP > .Item {
  counter-increment: count;
}
.Enum.LIP > .Item::before {
  content: '(' counter(count) ') ';
}
/**
  * These Objects are `.Item`s in a `.List` or `.Enum`. They represent character-separated values.
@tags
: #typography
: #list
@author
: Chris Harvey
@updated
: 2014-06-07
  */
.Item.Comma::after {
  content: ',\0020';
}
.Item.Mdash::after {
  content: '\0020\2014\0020';
}
.Item.Ndash::after {
  content: '\0020\2013\0020';
}
/**
  * This Object represents a generic list whose items are to be displayed as blocks that have
  * `float: left;`.
@implements
: .clearfix
@tags
: #typography
: #list
: #float
@author
: Chris Harvey
@updated
: 2014-05-11
  */
/*--------------*\
    _maps.less
\*--------------*/
/**
  * This Object represents an association list, which contains term-description pairs. Each pair
  * consists of exactly one `.Term` and exactly one `.Desc`.
@implements
: .vru-top-1
@tags
: #typography
: #map
@author
: Chris Harvey
@updated
: 2014-05-12
  */
.Map {
  display: block;
}
/**
  * This Object represent the term in a term-description pair of a `.Map`.
@belongsto
: .Map
@implements
: .vru-content
@tags
: #typography
: #map
@author
: Chris Harvey
@updated
: 2014-05-25
  */
/**
  * This Object represent the description in a term-description pair of a `.Map`.
@belongsto
: .Map
@implements
: .vru-content
@tags
: #typography
: #map
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Map > .Desc {
  padding-left: 48px;
}
/**
  * This Object represents a Map Object nested within a `.Term` Object or `.Desc` Object.
@implements
: .vru-top-0
@tags
: #typography
: #map
@author
: Chris Harvey
@updated
: 2014-05-25
  */
/**
  * This Object represents an association list in which terms are grouped together in one column
  * and descriptions are grouped together in one column.
  * This map acts like a table, with each row containing a single term-description group.
@extends
: .Map
@implements
: .clearfix
@tags
: #typography
: #map
: #golden
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Map.Vert > .Term,
.Map.Vert > .Desc {
  padding: 0;
  float: left;
}
.Map.Vert > .Term {
  width: 38.19660113%;
}
.Map.Vert > .Desc {
  width: 61.80339887%;
}
.Map.Vert > .Desc + .Term {
  clear: both;
}
/**
  * This Object represents an association list in which terms are grouped together in one column
  * and descriptions are grouped together in one column. The column widths are specified by
  * this subclass.
  * This map acts like a table, with each row containing a single term-description group.
@extends
: .Map.Vert
@params
: @namewidth : a percentage, which specifies the width of `.Nam`
@tags
: #typography
: #map
: #golden
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Map.Vert.Sml > .Term {
  width: 23.60679775%;
}
.Map.Vert.Sml > .Desc {
  width: 76.39320225%;
}
.Map.Vert.Msm > .Term {
  width: 38.19660113%;
}
.Map.Vert.Msm > .Desc {
  width: 61.80339887%;
}
.Map.Vert.Med > .Term {
  width: 50%;
}
.Map.Vert.Med > .Desc {
  width: 50%;
}
.Map.Vert.Mlg > .Term {
  width: 61.80339887%;
}
.Map.Vert.Mlg > .Desc {
  width: 38.19660113%;
}
.Map.Vert.Lrg > .Term {
  width: 76.39320225%;
}
.Map.Vert.Lrg > .Desc {
  width: 23.60679775%;
}
/*----------------*\
    _tables.less
\*----------------*/
/**
  * This Object represents a table-like structure. It may or may not be a literal `table` Element.
  * A `.Table` is defined as an collection of data in two or more dimensions. A common example
  * would be a multivariable map: given multiple (e.g., two) independent inputs there exists one
  * dependent output.
@implements
: .vru-top-1
: .fontsize-sml
@tags
: #typography
: #table
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.Table {
  display: table;
  text-align: center;
}
.Table > .Capt {
  border-top-width: 1px;
  border-top-style: solid;
}
/**
  * This Object represents a group of rows in a `.Table`.
@tags
: #typography
: #table
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.Rowgroup {
  border-width: 1px 0;
  border-style: solid;
  border-color: #9acc7a;
}
.Rowgroup.Head,
.Rowgroup.Foot {
  vertical-align: bottom;
  background-color: #f1f6ff;
}
.Rowgroup.Head .Row,
.Rowgroup.Foot .Row {
  background-color: transparent;
}
.Rowgroup.Head {
  display: table-header-group;
}
.Rowgroup.Body {
  display: table-row-group;
  vertical-align: top;
}
.Rowgroup.Foot {
  display: table-footer-group;
}
/**
  * This Object represents a single row in a `.Table`.
@tags
: #typography
: #table
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.Row {
  display: table-row;
}
.Row:nth-child(odd) {
  background-color: #f1f6ff;
}
.Row:nth-child(even) {
  background-color: #f1f6ff;
}
/**
  * This Object represents a single data entry in a `.Table`.
@implements
: .cellpaddingdefault
: .vru-content
@tags
: #typography
: #table
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.Cell {
  display: table-cell;
}
/**
  * This Object represents a heading in a `.Table`. A table heading may apply to a single row,
  * a single column, a group of rows, or a group of columns.
@tags
: #typography
: #table
: #heading
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.Cell.Hc {
  font-weight: bold;
}
.Table.Vert .Row .Cell:nth-child(odd) {
  background-color: #f1f6ff;
}
.Table.Vert .Row .Cell:nth-child(even) {
  background-color: #f1f6ff;
}
table {
  counter-reset: nrows;
  counter-increment: nrows;
}
table tr {
  counter-increment: nrows;
}
@media print {
  .Table {
    font-size: 16px;
    font-size: 1rem;
    line-height: 1.5;
  }
}
/*---------------*\
    _links.less
\*---------------*/
/*@INLINE LINKS*/
/**
  * This Object represents the abstract concept of a span of text that links to another file.
  * It does not represent an inactive placeholder (equivalent to an empty `a` Element). It also
  * does not represent a block-level hyperlink, e.g. a box that could contain an image.
@tags
: #hyperlink
: #span
@author
: Chris Harvey
@updated
: 2014-05-17
  */
.Link {
  text-decoration: none;
  color: #0062ff;
}
.Link:hover {
  text-decoration: underline;
  color: #ff9d00;
}
.Link:active {
  color: #cc004e;
}
.Link[rel~="external"] {
  font-style: italic;
}
/**
  * This Object represents a special link. It may refer to an external link, or some other type.
@extend
: .link
@tags
: #hyperlink
: #span
@author
: Chris Harvey
@updated
: 2014-04-21
  */
/**
  * This Object represents a placeholder reference to a name or title of a heading, section, figure,
  * table (or column in a table), or creative work.
  * It may be instantiated by the `a` or `cite` Elements.
@tags
: #hyperlink
: #span
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Ref {
  font-weight: bold;
}
/**
  * This Object represents a proper noun traditionally italicized, e.g. periodical name or ship name.
@tags
: #typography
: #span
: #highlight
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Proper {
  font-style: italic;
  text-transform: capitalize;
}
/*@BUTTONS*/
/** The default border for button-like Objects. */
/**
  * A general Button Object.
@implements
: .fontsize-sml-inline
@mixesin
: .box-inline()
@tags
: #button
@author
: Chris Harvey
@updated
: 2014-06-06
  */
.Button {
  display: inline;
  padding: 1px 2px;
  border-width: 1px;
  border-style: solid;
  border-radius: 6px;
  white-space: nowrap;
  border-width: 2px;
  border-style: outset;
  border-color: #0062ff;
  margin-bottom: -4px;
  font-family: 'Century Gothic', 'Gill Sans', 'Avenir', sans-serif;
  color: #0062ff;
  background-color: #c3daff;
  background-image: -webkit-linear-gradient(to bottom right, #dbe9ff, #92bcff);
  background-image: -moz-linear-gradient(to bottom right, #dbe9ff, #92bcff);
  background-image: -o-linear-gradient(to bottom right, #dbe9ff, #92bcff);
  background-image: linear-gradient(to bottom right, #dbe9ff, #92bcff);
  cursor: pointer;
}
.Button:hover {
  border-color: #ff9d00;
  color: #ff9d00;
  background-color: #ffe8c3;
  background-image: -webkit-linear-gradient(to bottom right, #fff1db, #ffd592);
  background-image: -moz-linear-gradient(to bottom right, #fff1db, #ffd592);
  background-image: -o-linear-gradient(to bottom right, #fff1db, #ffd592);
  background-image: linear-gradient(to bottom right, #fff1db, #ffd592);
}
.Button:active {
  border-style: inset;
  background-image: -webkit-linear-gradient(to top left, #fff1db, #ffd592);
  background-image: -moz-linear-gradient(to top left, #fff1db, #ffd592);
  background-image: -o-linear-gradient(to top left, #fff1db, #ffd592);
  background-image: linear-gradient(to top left, #fff1db, #ffd592);
}
.Button.Block {
  display: block;
}
/*--------------*\
    _code.less
\*--------------*/
/**
  * A Mixin used for both inline and block code.
@params
: @color_txt  : the value of the `color` property
: @color_comm : the value of the `color` property for code comments
: @color_bg   : the value of the `background-color` property
: @color_brdr : the value of the `border-color` property
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
/**
  * These Interfaces automate the coloring of code elements.
  * `.codecolors-sol-lite` sets a Solarized Light theme, while
  * `.codecolors-sol-dark` sets a Solarized Dark theme.
@mixesin
: .codecolors()
@tags
: #code
: #schematic
: #Solarized
@author
: Chris Harvey
@updated
: 2014-06-06
  */
.codecolors-sol-lite,
.Code,
.Code.Block.CSS.Invert,
code {
  border-color: #eee8d5;
  color: #657b83;
  background-color: #fdf6e3;
}
.codecolors-sol-lite .Comm,
.Code .Comm,
.Code.Block.CSS.Invert .Comm,
code .Comm {
  color: #93a1a1;
}
.codecolors-sol-dark,
.Code.Block,
.Key {
  border-color: #073642;
  color: #839496;
  background-color: #002b36;
}
.codecolors-sol-dark .Comm,
.Code.Block .Comm,
.Key .Comm {
  color: #586e75;
}
/** The default border radius for code-like Objects. */
/**
  * A span of text that a computer program would recognize.
@implements
: .fontsize-sml-inline
: .codecolors-sol-lite
@mixesin
: .box-inline()
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Code,
code {
  display: inline;
  padding: 1px 2px;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  font-family: 'Menlo', 'Lucida Sans Typewriter', 'Monaco', monospace;
  white-space: nowrap;
}
/**
  * A block of code. Its semantics are derived from the formatting (line breaks, indenting, etc) of
  * the text content. This Object does *not* extend the `.Code` Object.
@extends
: .Code
@implements
: .fontsize-sml
: .codecolors-sol-dark
@mixesin
: .box-block()
:. border-vert-both()
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Code.Block {
  top: -1px;
  margin-bottom: -2px;
  border-width: 1px;
  border-radius: 3px;
  display: block;
  position: relative;
  top: -2px;
  margin-bottom: -4px;
  border-width: 2px;
  border-style: solid;
  white-space: pre-wrap;
}
/**
  * Subcomponents of a code block.
  * `.Tag` : an HTML tag
  * `.Attr`: an HTML attribute
  * `.Val` : an HTML or CSS value
  * `.Sel` : a CSS selector
  * `.Prop`: a CSS property
  * `.Cmd` : a Less, LaTeX, or JS command
  * `.Arg` : a Less, LaTeX, or JS argument
@childof
: .Code.Block
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Code .Tag {
  color: #268bd2;
}
.Code .Atr {
  color: #cb4b16;
}
.Code .Val {
  color: #859900;
}
.Code .Sel {
  color: #2aa198;
}
.Code .Prp {
  color: #b58900;
}
.Code .Cmd {
  color: #6c71c4;
}
.Code .Arg {
  color: #d33682;
}
/**
  * This Object represents a block of CSS code. Its semantics are derived not from the formatting
  * of the text, but rather the elements inside.
@extends
: .Code.Block
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Code.Block.CSS {
  white-space: nowrap;
}
/**
  * This Object represents a CSS selector.
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.CSS .Sel::after {
  content: ' {';
}
.CSS .Comm::before {
  content: '/* ';
}
.CSS .Comm::after {
  content: ' */';
}
.CSS .String {
  color: #d33682;
}
.CSS .String::before,
.CSS .String::after {
  content: '\0027';
}
/**
  * This Object represents a ruleset for a CSS selector.
@implements
: .clearfix
: .vru-top-0
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
*/
.CSS .Ruleset::after {
  content: '}';
  color: #2aa198;
}
.Ruleset > .Comm {
  padding-left: 48px;
}
/**
  * This Object represents the property in a CSS property-value pair.
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Ruleset > .Prp {
  padding-left: 48px;
  float: left;
  clear: both;
}
.Ruleset > .Prp::after {
  content: ':\00A0';
}
/**
  * This Object represents the value in a CSS property-value pair.
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
*/
.Ruleset > .Val::after {
  content: ';';
  color: #b58900;
}
/**
  * A block of CSS code whose selectors are inline. This is really useful for selectors with one
  * property-value pair each.
@extends
: .Code.Block.CSS
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-31
  */
.Code.Block.CSS.I .Sel {
  display: inline;
  float: left;
  clear: both;
}
.Code.Block.CSS.I .Ruleset::after {
  display: inline;
}
.Code.Block.CSS.I .Ruleset > .Prp {
  display: inline;
  padding-left: 6px;
  float: none;
}
.Code.Block.CSS.I .Ruleset > .Val {
  display: inline;
}
/**
  * This Object represents a path in a directory system (for folders and files).
@implements
: .fontsize-sml-inline
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Dir {
  font-style: italic;
  font-family: 'Optima', 'Candara', 'Helvetica', sans-serif;
}
/**
  * This Object represents an individual key on a keyboard, calculator, or other device.
@implements
: .fontsize-sml-inline
: .codecolors-sol-dark
@mixesin
: .box-inline()
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-06-06
  */
.Key {
  display: inline;
  padding: 1px 2px;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  white-space: nowrap;
  font-family: 'Century Gothic', 'Gill Sans', 'Avenir', sans-serif;
  color: #93a1a1;
}
.latex {
  overflow: auto;
  font-family: 'Times', 'Times New Roman', serif;
  white-space: pre-wrap;
}
@media print {
  code {
    color: #000;
    background-color: #fff;
  }
}
/*--------------*\
    _text.less
\*--------------*/
/**
  * This Object represents a generic span of text in a paragraph, figure, caption, quote, list item,
  * table cell, or any container of text. It may or may not be a literal `span` element.
  * This can be useful when writing lists in prose ("LIP"), for example.
@tags
: #typography
: #span
@author
: Chris Harvey
@updated
: 2014-05-10
  */
.S {
  display: inline;
}
/*@HIGHLIGHTED TEXT*/
/**
  * Emphasized text represents words or phrases that are stressed, as if the tone of voice would be
  * affected. More importantly, **the placement of stress should affect the meaning of the passage**.
  * If the emphasis were to be removed or relocated, the passage's meaning should change.
@tags
: #typography
: #span
: #highlight
@author
: Chris Harvey
@updated
: 2014-05-30
*/
em {
  font-style: italic;
}
/**
  * Strong text has a level of importance. Important text does not necessarily affect tone of voice
  * (although it may), but rather upsets the normal prose by causing the reader to examine the text
  * more carefully. The placement of importance should not affect the meaning of the passage.
@tags
: #typography
: #span
: #highlight
@author
: Chris Harvey
@updated
: 2014-05-30
  */
strong {
  font-weight: bold;
}
/**
  * Marked text represents phrases that are relevant to a particular subject in a different context.
  * In an article about black holes, for example, the author may want to mark up anything that has
  * to do with the **Law of Conservation of Information** in one way, and mark up any phrases
  * involving **String Theory** in another way. Using classes, the reviewer could style different
  * contexts accordingly.
@tags
: #typography
: #span
: #highlight
@author
: Chris Harvey
@updated
: 2014-05-30
  */
mark {
  padding: 2px 3px;
  background-color: #cc004e;
  background-color: rgba(204, 0, 78, 0.61803399);
  color: #f1f6ff;
}
/**
  * A keyword, technical or specific term, or a vocabulary term.
  * Every `dfn` must have an `id` attribute, thus there must only be one `dfn` per page that
  * contains a given term in question. Furthermore, hyperlinks can point to the defining instance
  * of the term.
  * A `b` Element is any generic keyword or term, whose definition may or may not be present.
@tags
: #typography
: #span
: #highlight
@author
: Chris Harvey
@updated
: 2014-05-25
	*/
b,
dfn[id] {
  font-weight: bold;
  font-family: 'Baskerville', 'Palatino', 'Book Antiqua', serif;
}
/**
  * A phrase in a foreign language, such as the taxonomic classification (in Latin) of an organism.
  * Recommended to be instantiated by i[lang] Elements.
@tags
: #typography
: #span
: #highlight
@author
: Chris Harvey
@updated
: 2014-05-25
  */
i[lang] {
  font-style: italic;
  font-family: 'Times', 'Times New Roman', serif;
}
/*@DOCUMENTATION*/
/**
  * An inline quotation: a span of text that is taken directly from another source
  * (real or fictional).
@implements
: .quotes-double
@tags
: #typography
: #span
: #quote
@author
: Chris Harvey
@updated
: 2014-05-30
  */
/**
  * This Object represents an altered voice in the form of a thought. Like a quote but silent.
  * May be applied to the `q` Element.
@implements
: .guillemets
@tags
: #typography
: #span
: #quote
@author
: Chris Harvey
@updated
: 2014-05-25
  */
/**
  * An abbreviation.
@tags
: #typography
@author
: Chris Harvey
@updated
: 2014-06-16
  */
abbr[title] {
  cursor: help;
}
/**
  * A span or block of text that has been deleted from a document.
  * This is used to explicitly indicate that the text has been intentionally deleted.
@tags
: #typography
@author
: Chris Harvey
@updated
: 2014-06-13
  */
del[datetime] {
  text-decoration: line-through;
}
/**
  * A span or block of text that has been inserted into a document.
  * This is used to explicitly indicate that the text has been intentionally inserted.
@tags
: #typography
@author
: Chris Harvey
@updated
: 2014-06-13
  */
ins[datetime] {
  text-decoration: underline;
}
del + ins {
  padding-left: 24px;
}
/**
  * Superscripts and subscripts.
@tags
: #typography
@author
: Chris Harvey
@updated
: 2014-06-13
  */
sup,
sub {
  position: relative;
  vertical-align: baseline;
}
sup {
  bottom: 6px;
}
sub {
  top: 6px;
}
/*@FORMS*/
/*--------------*\
	_mods.less
\*--------------*/
/*@MEDIA*/
/**
  * The Media Object is a module that has an image with a body.
  * See `http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/`
  * for details.
@author
: Nicole Sullivan
: Chris Harvey
@updated
: 2014-06-16
  */
/*@LABELS*/
/**
  * A Label Object is used for displaying little indications to the user. There are two subclasses
  * of Labels: Messages and Tags. Each subclass may be of the following types:
  * - A **Warning Label** is used to indicate a negative consequence, such as an action that cannot
  * 	be undone or that will cause something to break.
  * - A **Caution Label** is used to indicate that the user must proceed with care.
  * - A **Success Label** is used to indicate that something was done right.
  * - An **Info Label** is used to indicate extra information about something.
  * - A **Help Label** is used to indicate tips and hints for the user.
@implements
: .fontsize-sml
@tags
: #label
: #message
: #tag
@author
: Chris Harvey
@updated
: 2014-06-22
  */
.Label {
  font-style: normal;
  font-weight: normal;
  font-family: 'Century Gothic', 'Gill Sans', 'Avenir', sans-serif;
}
.Label::before,
.Label::after {
  font-weight: bold;
}
/**
  * This Mixin is used for all `.Label` Objects. It sets the proper colors for the Object based on
  * its type.
@tags
: #label
: #message
: #tag
@author
: Chris Harvey
@updated
: 2014-06-22
  */
.Label.Warn {
  border-color: #ff0000;
  color: #610000;
  background-color: #ff9e9e;
}
.Label.Cshn {
  border-color: #ccff00;
  color: #4e6100;
  background-color: #ecff9e;
}
.Label.Skss {
  border-color: #00ff66;
  color: #006127;
  background-color: #9effc5;
}
.Label.Info {
  border-color: #0066ff;
  color: #002761;
  background-color: #9ec5ff;
}
.Label.Help {
  border-color: #cc00ff;
  color: #4e0061;
  background-color: #ec9eff;
}
/**
  * A Message Object is a Label with complete sentences or a longer span of information.
@extends
: .Label
@implements
: .vru-top-1
@mixesin
: .box-block()
@tags
: #label
: #message
@author
: Chris Harvey
@updated
: 2014-06-22
  */
.Label.Msg {
  display: block;
  position: relative;
  top: -1px;
  margin-bottom: -2px;
  border-width: 1px;
  border-style: solid;
  border-radius: 6px;
}
.Label.Msg.Warn {
  background-image: -webkit-linear-gradient(to bottom, #ff9e9e, #ff6b6b);
  background-image: -moz-linear-gradient(to bottom, #ff9e9e, #ff6b6b);
  background-image: -o-linear-gradient(to bottom, #ff9e9e, #ff6b6b);
  background-image: linear-gradient(to bottom, #ff9e9e, #ff6b6b);
}
.Label.Msg.Warn::before {
  content: 'Warning ' '!' ' ';
}
.Label.Msg.Cshn {
  background-image: -webkit-linear-gradient(to bottom, #ecff9e, #e1ff6b);
  background-image: -moz-linear-gradient(to bottom, #ecff9e, #e1ff6b);
  background-image: -o-linear-gradient(to bottom, #ecff9e, #e1ff6b);
  background-image: linear-gradient(to bottom, #ecff9e, #e1ff6b);
}
.Label.Msg.Cshn::before {
  content: 'Caution ' '\2026' ' ';
}
.Label.Msg.Skss {
  background-image: -webkit-linear-gradient(to bottom, #9effc5, #6bffa6);
  background-image: -moz-linear-gradient(to bottom, #9effc5, #6bffa6);
  background-image: -o-linear-gradient(to bottom, #9effc5, #6bffa6);
  background-image: linear-gradient(to bottom, #9effc5, #6bffa6);
}
.Label.Msg.Skss::before {
  content: 'Success ' '\263a' ' ';
}
.Label.Msg.Info {
  background-image: -webkit-linear-gradient(to bottom, #9ec5ff, #6ba6ff);
  background-image: -moz-linear-gradient(to bottom, #9ec5ff, #6ba6ff);
  background-image: -o-linear-gradient(to bottom, #9ec5ff, #6ba6ff);
  background-image: linear-gradient(to bottom, #9ec5ff, #6ba6ff);
}
.Label.Msg.Info::before {
  content: 'Info ' '?' ' ';
}
.Label.Msg.Help {
  background-image: -webkit-linear-gradient(to bottom, #ec9eff, #e16bff);
  background-image: -moz-linear-gradient(to bottom, #ec9eff, #e16bff);
  background-image: -o-linear-gradient(to bottom, #ec9eff, #e16bff);
  background-image: linear-gradient(to bottom, #ec9eff, #e16bff);
}
.Label.Msg.Help::before {
  content: 'Help ' '\2665' ' ';
}
/**
  * A Tag Object is a Label with a short bit of content, or perhaps no content at all. It can be
  * added to the inside of an Element.
@extends
: .Label
@tags
: #label
: #tag
@author
: Chris Harvey
@updated
: 2014-06-22
  */
.Label.Tag {
  display: inline;
  padding: 3px 5px;
  padding-bottom: 2px;
  margin-left: 24px;
  position: relative;
  white-space: nowrap;
}
.Label.Tag::before {
  content: "";
  display: block;
  width: 0;
  border-width: 10px 6px 10px 0;
  border-style: solid;
  border-color: transparent;
  position: absolute;
  left: -6px;
  top: 0;
  z-index: 1;
}
.Label.Tag.Warn {
  background-image: -webkit-linear-gradient(to right, #ff9e9e, #ff5151);
  background-image: -moz-linear-gradient(to right, #ff9e9e, #ff5151);
  background-image: -o-linear-gradient(to right, #ff9e9e, #ff5151);
  background-image: linear-gradient(to right, #ff9e9e, #ff5151);
}
.Label.Tag.Warn::before {
  border-right-color: #ff9e9e;
}
.Label.Tag.Warn::after {
  content: ' ' '!';
}
.Label.Tag.Cshn {
  background-image: -webkit-linear-gradient(to right, #ecff9e, #dcff51);
  background-image: -moz-linear-gradient(to right, #ecff9e, #dcff51);
  background-image: -o-linear-gradient(to right, #ecff9e, #dcff51);
  background-image: linear-gradient(to right, #ecff9e, #dcff51);
}
.Label.Tag.Cshn::before {
  border-right-color: #ecff9e;
}
.Label.Tag.Cshn::after {
  content: ' ' '\2026';
}
.Label.Tag.Skss {
  background-image: -webkit-linear-gradient(to right, #9effc5, #51ff97);
  background-image: -moz-linear-gradient(to right, #9effc5, #51ff97);
  background-image: -o-linear-gradient(to right, #9effc5, #51ff97);
  background-image: linear-gradient(to right, #9effc5, #51ff97);
}
.Label.Tag.Skss::before {
  border-right-color: #9effc5;
}
.Label.Tag.Skss::after {
  content: ' ' '\263a';
}
.Label.Tag.Info {
  background-image: -webkit-linear-gradient(to right, #9ec5ff, #5197ff);
  background-image: -moz-linear-gradient(to right, #9ec5ff, #5197ff);
  background-image: -o-linear-gradient(to right, #9ec5ff, #5197ff);
  background-image: linear-gradient(to right, #9ec5ff, #5197ff);
}
.Label.Tag.Info::before {
  border-right-color: #9ec5ff;
}
.Label.Tag.Info::after {
  content: ' ' '?';
}
.Label.Tag.Help {
  background-image: -webkit-linear-gradient(to right, #ec9eff, #dc51ff);
  background-image: -moz-linear-gradient(to right, #ec9eff, #dc51ff);
  background-image: -o-linear-gradient(to right, #ec9eff, #dc51ff);
  background-image: linear-gradient(to right, #ec9eff, #dc51ff);
}
.Label.Tag.Help::before {
  border-right-color: #ec9eff;
}
.Label.Tag.Help::after {
  content: ' ' '\2665';
}
/*@BREADCRUMBS*/
/**
  * A Breadcrumb module.
@tags
: #breadcrumbs
: #golden
@author
: Chris Harvey
@updated
: 2014-06-18
  */
.Bc {
  width: 14.58980338%;
  margin-left: 3.44418537%;
  margin-right: 5.572809%;
  position: fixed;
  left: 0;
  top: 48px;
  top: 3rem;
  z-index: 1;
}
/**
  * A list of breadcrumbs inside the module.
  * The list either contains ancestor pages (including parent),
  * sibling pages (including the same page), or children pages.
@implements
: .vru-bottom-1;
@tags
: #breadcrumbs
@author
: Chris Harvey
@updated
: 2014-06-18
  */
/**
  * An actual breadcrumb link.
@implements
: .fontsize-med;
@mixesin
: .vru-top()
@tags
: #breadcrumbs
@author
: Chris Harvey
@updated
: 2014-06-18
  */
.Button.Crumb {
  margin-top: 18px;
  margin-top: 1.125rem;
  display: block;
  padding: 3px 15px;
  padding: 0.1875rem 15px;
  border-radius: 15px;
  white-space: normal;
}
.Crumb[rel~="this"] {
  font-weight: bold;
}
@media print {
  .Bc {
    display: none;
  }
}
/*@QUASI-ELEMENTS*/
[data-status="nonnormative"] {
  font-style: italic;
  font-family: 'Optima', 'Candara', 'Helvetica', sans-serif;
}
/**
  * Elements still in testing mode but still not yet ready for implementation.
  */
[data-status="draft"] {
  background-color: #fffcfa;
  opacity: 0.61803399;
}
[hidden] {
  display: none !important;
}
[data-bool="0"] {
  color: #f1f6ff;
  background-color: #4d91ff;
}
[data-bool="1"] {
  color: #0e0900;
  background-color: #ffbb4d;
}
/*dl*/
.dl--ordered > dt:first-child,
.dl--ordered > dd + dt {
  display: list-item;
  list-style-type: decimal;
  list-style-position: outside;
}
