
/*----------------*\
    _tables.less
\*----------------*/

/**
  * This Object represents a table-like structure. It may or may not be a literal `table` element.
  * A .Table is defined as an collection of data in two or more dimensions. A common example would be a multivariable map: given multiple (e.g., two) independent inputs there exists one dependent output.
@tags
: #typography
: #table
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.Table {
	display: table;
}
/**
  * This Object represents a group of rows in a `.Table`.
@tags
: #typography
: #table
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.Rowgroup {
	border-width: 1px 0;
	border-style: solid;
	border-color: @color_table_brdr;
}
.Rowgroup.Head   {display: table-header-group;}
.Rowgroup.Body   {display: table-row-group;}
.Rowgroup.Foot   {display: table-footer-group;}
/**
  * This Object represents a single row in a `.Table`.
@tags
: #typography
: #table
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.Row {
	display: table-row;
}
/**
  * This Object represents a single data entry in a `.Table`.
@tags
: #typography
: #table
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.Cell {
	display: table-cell;
}
/**
  * This Object represents a heading in a `.Table`. A table heading may apply to a single row, a single column, a group of rows, or a group of columns.
@tags
: #typography
: #table
@author
: Chris Harvey
@updated
: 2014-05-18
  */
.Cell.Hc {
	font-weight: bold;
	background-color: @color_table_bg_hi;
}

.Table.Horz {
	width: 100%;
}
.Table.Horz > .Rowgroup {
	> .Row:nth-child(odd)  {background-color: @color_table_bg_md;}
	> .Row:nth-child(even) {background-color: @color_table_bg_lo;}
}
.Table.Vert {
	> .Rowgroup.Head > .Row {
		> .Cell.Hc:nth-child(odd)  {background-color: desaturate(@color_table_bg_lo, @fade);}
		> .Cell.Hc:nth-child(even) {background-color: desaturate(@color_table_bg_md, @fade);}
		> .Cell.Hc:first-child     {background-color: desaturate(@color_table_bg_hi, @fade);}
	}
	> .Rowgroup > .Row {
		> .Cell:nth-child(odd)  {background-color: @color_table_bg_lo;}
		> .Cell:nth-child(even) {background-color: @color_table_bg_md;}
	}
}
// .Table.Grid {
// 	> .Rowgroup.Head,
// 	> .Rowgroup > .Row > .Cell.Hc {background-color: @color_table_bg_hi;}
// 	> .Rowgroup {
// 		> .Row {
// 			> .Cell {border: 1px solid @color_table_brdr;}
// 		}
// 		> .Row:nth-child(odd) {
// 			> .Cell:nth-child(odd)  {background-color: @color_table_bg_lo;}
// 			> .Cell:nth-child(even) {background-color: @color_table_bg_md;}
// 		}
// 		> .Row:nth-child(even) {
// 			> .Cell:nth-child(odd)  {background-color: @color_table_bg_md;}
// 			> .Cell:nth-child(even) {background-color: @color_table_bg_hi;}
// 		}
// 	}
// }
table {
	counter-reset: nrows;
	tr {
		counter-increment: nrows;
	}
	counter-increment: nrows; // once more for the last border
//		@btm: -(((nrows + 12) % 24) - 12);
//		if (btm <= 0) {
//			margin-bottom: @btm;
//		} else {
//			padding-bottom: @btm;
//		}
}
@media print {
	.Table {
		.fontsize-med;
	}
}
