// main: ../all.less

/*##############*\
    _code.less
\*##############*/


// default border radius for code-like Objects
@code_brdr_radius: 3px;

// colors for inline code
@color_code_bg:   @solarized_base3;
@color_code_brdr: @solarized_base2;
@color_code_comm: @solarized_base1;
@color_code_txt:  @solarized_base00;
@color_code_emph: @solarized_base01;

// colors for block code
@color_codeblock_bg:   @solarized_base03;
@color_codeblock_brdr: @solarized_base02;
@color_codeblock_comm: @solarized_base01;
@color_codeblock_txt:  @solarized_base0;
@color_codeblock_emph: @solarized_base1;

// colors for syntax highlighting
@color_code_tag: @solarized_blue;
@color_code_atr: @solarized_orange;
@color_code_val: @solarized_green;
@color_code_sel: @solarized_cyan;
@color_code_prp: @solarized_yellow;
@color_code_cmd: @solarized_violet;
@color_code_arg: @solarized_magenta;

/**
  * A Mixin used for both inline and block code.
@params
: @color_txt  : the value of the `color` property
: @color_comm : the value of the `color` property for code comments
: @color_bg   : the value of the `background-color` property
: @color_brdr : the value of the `border-color` property
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.codecolors(@color_txt; @color_comm; @color_bg; @color_brdr) {
	border-color: @color_brdr;
	color: @color_txt;
	background-color: @color_bg; // fallback
	// background-color: fadeout(@color_bg, @golden4);
	.Comm {color: @color_comm;}
}
/**
  * These Interfaces automate the coloring of code Elements.
  * `.codecolors-sol-lite` sets a Solarized Light theme, while
  * `.codecolors-sol-dark` sets a Solarized Dark theme.
@mixesin
: .codecolors()
@tags
: #code
: #schematic
: #Solarized
@author
: Chris Harvey
@updated
: 2014-06-06
  */
.codecolors-sol-lite {.codecolors(@color_code_txt;      @color_code_comm;      @color_code_bg;      @color_code_brdr);}
.codecolors-sol-dark {.codecolors(@color_codeblock_txt; @color_codeblock_comm; @color_codeblock_bg; @color_codeblock_brdr);}
/**
  * A span of text that a computer program would recognize.
@implements
: .fontsize-sml-inline
: .codecolors-sol-lite
@mixesin
: .box-inline()
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
code {
	&:extend(.fontsize-sml);
	&:extend(.codecolors-sol-lite all);
	.box-inline(@code_brdr_radius);
	font-family: @fontfam_code;
	white-space: nowrap;
}
/**
  * A block of code. Its semantics are derived from the formatting (line breaks, indenting, etc) of
  * the text content. This Object does *not* extend the `.Code` Object.
@implements
: .fontsize-sml
: .codecolors-sol-dark
@mixesin
: .box-block()
:. border-vert-both()
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-07-10
  */
.Codeblock {
	&:extend(.fontsize-block-sml);
	&:extend(.codecolors-sol-dark all);
	.box-block(2px; @code_brdr_radius);
	font-family: @fontfam_code;
	white-space: pre;
	overflow: auto;
}
/**
  * Subcomponents of a code block.
  * `.Tag` : an HTML tag
  * `.Attr`: an HTML attribute
  * `.Val` : an HTML or CSS value
  * `.Sel` : a CSS selector
  * `.Prop`: a CSS property
  * `.Cmd` : a Less, LaTeX, or JS command
  * `.Arg` : a Less, LaTeX, or JS argument
@childof
: .Codeblock
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Codeblock .Tag  {color: @color_code_tag;}
.Codeblock .Atr  {color: @color_code_atr;}
.Codeblock .Val  {color: @color_code_val;}
.Codeblock .Sel  {color: @color_code_sel;}
.Codeblock .Prp  {color: @color_code_prp;}
.Codeblock .Cmd  {color: @color_code_cmd;}
.Codeblock .Arg  {color: @color_code_arg;}

.Codeblock .Tag {
	&:extend(.angles all);
	.Val {&:extend(.quot all);}
}

/**
  * This Object represents a block of CSS code. Its semantics are derived not from the formatting
  * of the text, but rather the elements inside.
@extends
: .Codeblock
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Codeblock.CSS {
	white-space: nowrap;
	&.Invert {&:extend(.codecolors-sol-lite all);}
}
/**
  * This Object represents a CSS selector.
@childof
: .Codeblock.CSS
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.CSS .Sel {
	&::after {content: ' {';}
}
.CSS .Comm {
	&::before {content: '/* ';}
	&::after  {content: ' */';}
}
.CSS .String {
	color: @color_code_arg;
	&::before,
	&::after  {content: '\0027';} // &apos;
}
/**
  * This Object represents a ruleset for a CSS selector.
@childof
: .Codeblock.CSS
@implements
: .clearfix
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
*/
.CSS .Ruleset {
	&:extend(.clearfix all);
	&::after {
		content: '}';
		color: @color_code_sel;
	}
	> .Comm {padding-left: @tab;}
}
/**
  * This Object represents the property in a CSS property-value pair.
@childof
: .Codeblock.CSS .Ruleset
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Ruleset > .Prp {
	padding-left: @tab;
	float: left;
	clear: both;
	&::after {content: ':\00A0';} // `&nbsp;` because a normal (`\0020`) will not work on a float
}
/**
  * This Object represents the value in a CSS property-value pair.
@childof
: .Codeblock.CSS .Ruleset
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
*/
.Ruleset > .Val {
	&::after {
		content: ';';
		color: @color_code_prp;
	}
}
/**
  * A block of CSS code whose selectors are inline. This is really useful for selectors with one
  * property-value pair each.
@extends
: .Codeblock.CSS
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-31
  */
.Codeblock.CSS.I {
	.Sel {
		float: left;
		clear: both;
	}
	.Ruleset {
		&::after {
			display: inline;
		}
		> .Prp {
			display: inline;
			padding-left: @en;
			float: none;
		}
		> .Val {
			display: inline;
		}
	}
}

/**
  * This Object represents an individual key (a button) on a keyboard, calculator, or other device.
  * Recommended instantiated by a `kbd > kbd` Element.
@implements
: .fontsize-sml-inline
: .codecolors-sol-dark
@mixesin
: .box-inline()
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-06-06
  */
.Key {
	&:extend(.fontsize-sml);
	&:extend(.codecolors-sol-dark all);
	.box-inline(@code_brdr_radius);
	font-family: @fontfam_accent;
	color: @color_codeblock_emph;
}
kbd {white-space: nowrap;}
/**
  * This Object represents a path in a directory system (for folders and files).
  * Recommended instantiated by a `code` or `samp` Element.
@implements
: .fontsize-sml-inline
@tags
: #code
@author
: Chris Harvey
@updated
: 2014-05-25
  */
.Dir {
	&:extend(.fontsize-sml);
	font-style: italic;
	font-family: @fontfam_base;
}
/**
  * This Object represents a mathematical expression or statement.
  * Its input is the LaTeX syntax.
@author
: Chris Harvey
@updated
: 2014-08-22
  */
.Math,
.M {
	overflow: auto;
	font-family: @fontfam_math;
	white-space: pre;
}
/**
  * These Objects are subclasses of `.M`.
@author
: Chris Harvey
@updated
: 2014-08-22
  */
// .M.I {display: inline;}
.M.B {display: block;}
