
/*##############*\
    _code.less
\*##############*/


// colors for Solarized Light Theme code
@code_sol_lite_bg:   @solarized_base3;
@code_sol_lite_brdr: @solarized_base2;
@code_sol_lite_txt:  @solarized_base00;
@code_sol_lite_comm: @solarized_base1;
@code_sol_lite_emph: @solarized_base01;
// colors for Solarized Dark Theme code
@code_sol_dark_bg:   @solarized_base03;
@code_sol_dark_brdr: @solarized_base02;
@code_sol_dark_txt:  @solarized_base0;
@code_sol_dark_comm: @solarized_base01;
@code_sol_dark_emph: @solarized_base1;
// colors for Lunarized Light Theme code
@code_lun_lite_bg:   @lunarized_base3;
@code_lun_lite_brdr: @lunarized_base2;
@code_lun_lite_txt:  @lunarized_base00;
@code_lun_lite_comm: @lunarized_base1;
@code_lun_lite_emph: @lunarized_base01;
// colors for Lunarized Dark Theme code
@code_lun_dark_bg:   @lunarized_base03;
@code_lun_dark_brdr: @lunarized_base02;
@code_lun_dark_txt:  @lunarized_base0;
@code_lun_dark_comm: @lunarized_base01;
@code_lun_dark_emph: @lunarized_base1;

.bg(@back; @brdr) {
  background-color: @back;
  border-color:     @brdr;
}
.fg(@text; @comm; @emph) {
  color:            @text;
  > small   {color: @comm;}
  > strong  {color: @emph;}
}
.lite.bg-sol {.bg(@code_sol_lite_bg;  @code_sol_lite_brdr);}
.lite.bg-lun {.bg(@code_lun_lite_bg;  @code_lun_lite_brdr);}
.lite.fg-sol {.fg(@code_sol_lite_txt; @code_sol_lite_comm; @code_sol_lite_emph);}
.lite.fg-lun {.fg(@code_lun_lite_txt; @code_lun_lite_comm; @code_lun_lite_emph);}
.dark.bg-sol {.bg(@code_sol_dark_bg;  @code_sol_dark_brdr);}
.dark.bg-lun {.bg(@code_lun_dark_bg;  @code_lun_dark_brdr);}
.dark.fg-sol {.fg(@code_sol_dark_txt; @code_sol_dark_comm; @code_sol_dark_emph);}
.dark.fg-lun {.fg(@code_lun_dark_txt; @code_lun_dark_comm; @code_lun_dark_emph);}

/**
  * Sub-Components of code:
  *
  * `.c__Ctl`  : programming control (if, for, switch, return)
  * `.c__Opr`  : delimiter or operator (+, ==, ., new, this)
  * `.c__Kwd`  : predefined keywords (var, function)
  * `.c__Cst`  : a number, color, or character constant
  * `.c__Str`  : any string
  * `.c__Cmd`  : a function name, function call, constructor call, or Less, LaTeX, or JS command
  * `.c__Arg`  : argument to a function or constructor call, or a Less, LaTeX, or JS argument
  * `.c__Obj`  : a class or object reference

  * `.c__Tag`  : an HTML tag
  * `.c__Atr`  : an HTML attribute
  * `.c__Val`  : an HTML or CSS value
  * `.c__Sel`  : a CSS selector
  * `.c__Prp`  : a CSS property
@tags
: #code
@author
: Chris Harvey
@updated
: 2015-02-19
  */
.ac-sol {
  .c__Ctl {color: @solarized_red;}
  .c__Opr {color: @solarized_orange;}
  .c__Kwd {color: @solarized_yellow;}
  .c__Cst {color: @solarized_green;}
  .c__Str {color: @solarized_cyan;}
  .c__Cmd {color: @solarized_blue;}
  .c__Arg {color: @solarized_violet;}
  .c__Obj {color: @solarized_magenta;}
  .c__Tag {color: @solarized_blue;}
  .c__Atr {color: @solarized_yellow;}
  .c__Val {color: @solarized_cyan;}
  .c__Sel {color: @solarized_blue;}
  .c__Prp {color: @solarized_yellow;}
}
.ac-lun {
  .c__Ctl {color: @lunarized_red;}
  .c__Opr {color: @lunarized_orange;}
  .c__Kwd {color: @lunarized_yellow;}
  .c__Cst {color: @lunarized_green;}
  .c__Str {color: @lunarized_cyan;}
  .c__Cmd {color: @lunarized_blue;}
  .c__Arg {color: @lunarized_indigo;}
  .c__Obj {color: @lunarized_violet;}
  .c__Tag {color: @lunarized_blue;}
  .c__Atr {color: @lunarized_yellow;}
  .c__Val {color: @lunarized_cyan;}
  .c__Sel {color: @lunarized_blue;}
  .c__Prp {color: @lunarized_yellow;}
}
//++++ @end SOLARIZED / LUNARIZED THEMES ++++//
