// main: ../../core.less

/*##############*\
    _code.less
\*##############*/


// colors for inline code (Solarized Light Theme)
@color_codeinl_bg:   @solarized_base3;
@color_codeinl_brdr: @solarized_base2;
@color_codeinl_comm: @solarized_base1;
@color_codeinl_txt:  @solarized_base00;
@color_codeinl_emph: @solarized_base01;
// colors for block code (Solarized Dark Theme)
@color_codeblk_bg:   @solarized_base03;
@color_codeblk_brdr: @solarized_base02;
@color_codeblk_comm: @solarized_base01;
@color_codeblk_txt:  @solarized_base0;
@color_codeblk_emph: @solarized_base1;

/**
  * An Interface used for both inline and block code. Automate the coloring of code Elements.
  * `.codecolors-sol(lite)` sets a Solarized Light theme
  * `.codecolors-sol(dark)` sets a Solarized Dark theme
  * CHANGED:
  * - To denote comments, use the HTML `small` Element. Yes, this means code comments.
  * - To denote importance, use the HTML `strong` Element.
@params
: @color_txt  : the value of the `color` property
: @color_comm : the value of the `color` property for code comments
: @color_emph : the value of the `color` property for code marked important
: @color_bg   : the value of the `background-color` property
: @color_brdr : the value of the `border-color` property
@tags
: #code
: #schematic
: #Solarized
@author
: Chris Harvey
@updated
: 2015-02-19
  */
.codecolors(@color_txt; @color_comm; @color_emph; @color_bg; @color_brdr) {
  border-color: @color_brdr;
  color: @color_txt;
  background-color: @color_bg;
  > small {
    font-size: inherit;
    color: @color_comm;
  }
  > strong {
    color: @color_emph;
  }
}
.codecolors-sol(lite) {.codecolors(@color_codeinl_txt; @color_codeinl_comm; @color_codeinl_emph; @color_codeinl_bg; @color_codeinl_brdr);}
.codecolors-sol(dark) {.codecolors(@color_codeblk_txt; @color_codeblk_comm; @color_codeblk_emph; @color_codeblk_bg; @color_codeblk_brdr);}
