@import url('../../node_modules/normalize.css/normalize.css');
/*################*\
    default.less
\*################*/
/*#################*\
    _flexbox.less
\*#################*/
/*@FLEXBOXES*/
/*@Containers*/
/**
  * Sets up a flexbox container.
@tags
: #flex
: #vendor-specific
@author
: Chris Harvey
@updated
: 2015-02-21
  */
/**
  * Determines the direction of the flow.
@params
: @direction :
             : `row` (default)  : left to right in `ltr`; right to left in `rtl`
             : `row-reverse`    : right to left in `ltr`; left to right in `rtl`
             : `column`         : same as `row` but top to bottom
             : `column-reverse` : same as `row-reverse` but bottom to top
@tags
: #flex
: #vendor-specific
@author
: Chris Harvey
@updated
: 2015-02-12
  */
/**
  * Determines whether boxes wrap to the next row or column.
@params
: @wrap :
        : `nowrap` (default) : single-line / left to right in `ltr`; right to left in `rtl`
        : `wrap`             : multi-line  / left to right in `ltr`; right to left in `rtl`
        : `wrap-reverse`     : multi-line  / right to left in `ltr`; left to right in `rtl`
@tags
: #flex
: #vendor-specific
@author
: Chris Harvey
@updated
: 2015-02-12
  */
/**
  * Determines how content is justified.
@params
: @justify :
           : `flex-start` (default) : items are aligned left (in rows) or top (in columns)
           : `flex-end`             : items are aligned right (in rows) or bottom (in columns)
           : `center`               : items are pushed to middle
           : `space-between`        : extra space is distributed between items,
                                      leaving them flush left/right
           : `space-around`         : extra space is distributed around items,
                                      leaving margin on left/right. Good for centering one item
                                      without using `margin-left: auto; margin-right: auto;`!!!
@tags
: #flex
: #vendor-specific
@author
: Chris Harvey
@updated
: 2015-02-20
  */
/*@Items*/
/**
  * What does this do again?
@params
: @values : ?????
@tags
: #flex
: #vendor-specific
@author
: Chris Harvey
@updated
: 2015-02-12
  */
/**
  * Determines the order in which items appear in the flex container.
@params
: @number : (integer, 0 default) the order in which the item appears in the flex container.
@tags
: #flex
: #vendor-specific
@author
: Chris Harvey
@updated
: 2015-02-12
  */
/*#################*\
    _borders.less
\*#################*/
/**
  * The following mixins adjust borders for **BLOCK** Objects only! They will keep the
  * vertical rhythm intact when adding borders (by slightly adjusting position and margins).
  * Do *not* use these mixins on INLINE Objects!
  *
  * Methods with same # of params cannot be overloaded; thus mixin names have modifiers.
  * Use the `.border-vert-one(@side; ...)`   set of Mixins to adjust either the top or bottom border.
  * Use the `.border-vert-both(topbot; ...)` set of Mixins to adjust both the top and bottom borders.
  * Use the `.border-vert-both(all; ...)`    set of Mixins to adjust all four borders.
  *
  * Note: `.border-vert-***(@side; @width)` is not defined because the default `style` is set to
  * `none`. Thus `@width` and `@style` must be defined, but `@color` is optional.
@params
: @side  : either `top` or `bottom`
: @width : value of `border-width`
: @style : value of `border-style` (default to `solid`)
: @color : value of `border-color` (default to `currentColor`)
@tags
: #verticalrhythm
: #border
@author
: Chris Harvey
@updated
: 2015-02-17
  */
/*##################*\
    _settings.less
\*##################*/
html {
  font-size: 100%;
  line-height: 1.5;
}
/*##################*\
    _sections.less
\*##################*/
/*@SECTIONS*/
body {
  margin: 0 0 1.5rem;
}
main {
  margin: 0 1rem 1.5rem;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 1.5rem;
}
h1 {
  font-size: 2rem;
  line-height: 0.75;
  padding-top: 1.5rem;
}
h2 {
  font-size: 1.5rem;
  line-height: 1;
}
h3 {
  font-size: 1.25rem;
  line-height: 1.2;
}
h4 {
  font-size: 1rem;
  line-height: 1.5;
}
h5 {
  font-size: 0.75rem;
  line-height: 2;
}
h6 {
  font-size: 0.625rem;
  line-height: 2.4;
}
address {
  font-style: inherit;
}
/*##################*\
    _grouping.less
\*##################*/
/*@GROUPING CONTENT*/
hr {
  display: none;
}
p,
ol,
ul,
dl,
table {
  margin: 0 0 1.5rem;
}
/*@Paragraph-Like Content*/
figure,
blockquote,
pre {
  margin: 0 1rem 1.5rem;
}
/*@Lists*/
ol,
ul {
  padding: 0 0 0 4rem;
}
dt {
  font-weight: bold;
}
dd {
  margin: 0;
}
dd + dt {
  padding-top: 1.5rem;
}
/*@Tables*/
th {
  text-align: center;
}
/*####################*\
    _text-level.less
\*####################*/
/*@TEXT-LEVEL SEMANTICS*/
a,
br,
em,
strong,
i,
mark,
u,
small,
s,
dfn,
b,
var,
q,
cite,
sup,
sub,
data,
abbr,
time,
code,
kbd,
samp {
  line-height: 0;
}
a:not([href]) {
  opacity: 0.5;
}
br {
  display: none;
}
address > br {
  display: inline;
}
/*@Stressed Text*/
i:not([lang]) {
  quotes: '\201c' '\201d';
}
i:not([lang])::before {
  content: open-quote;
}
i:not([lang])::after {
  content: close-quote;
}
u {
  text-decoration: none;
  color: #080;
}
small {
  font-size: 0.75em;
}
s {
  color: #e00;
}
/*@Documentation and Edits*/
ins {
  background: #a6f3a6;
}
del {
  background: #f8cbcb;
}
dfn {
  font-style: inherit;
  font-weight: bold;
}
sup,
sub {
  font-size: 0.75em;
}
/*@Machine-Readable Text*/
abbr[title] {
  cursor: help;
}
code,
kbd,
samp {
  font-size: 0.75em;
  white-space: nowrap;
}
/*##################*\
    _embedded.less
\*##################*/
/*@EMBEDDED CONTENT*/
/*###############*\
    _forms.less
\*###############*/
/*@FORMS*/
