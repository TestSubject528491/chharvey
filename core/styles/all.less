// out: all.css


/**
  * Settings include:
  * - global variables that are used throught the site and give it its look and feel. Global
  *   variables, such as the base font size, font families, and base colors, may be changed.
  * - math functions that encapsulate repetitive mathematical operations. These are *not*
  *   Mixins or Interfaces used for CSS.
  * - global constants such as numerical values, color values, etc.
  */
@import url('_settings.less');

/**
  * The Reset stylesheet removes the browser-default styles from all HTML Elements
  * (e.g. bold, margin, etc.). This is the first stylesheet with actual CSS.
  * With the Reset put into place (and nothing else), every single Element would look
  * exactly the same.
  */
@import url('_reset.less');

/**
  * Layout stylesheets determine how and where Objects are placed on the page.
  */
@import url('_grid.less');

/**
  * Tools are Mixins and Interfaces that, like functions, encapsulate repetitive tasks.
  * These classes are not meant to be added to Elements in the HTML source (that is,
  * Elements cannot instantiate them), but are rather meant to be implemented in higher-level
  * Components or Objects.
  */
@import url('tools/_fontsize.less');
@import url('tools/_borders.less');
@import url('tools/_spacing.less');
@import url('_interfaces.less');

/**
  * Components are pieces of Objects that are used recurringly throughout the site. They utilize
  * reusable and abstract design patterns, but do not describe whole Objects.
  */
@import url('comps/_boxes.less');
@import url('comps/_hr.less');

/**
  * Typographical Objects are mostly text-based and are used mainly in document prose.
  * All of the stylesheets describe grouping content except for `_text.less`, which includes
  * CSS for text-level content (phrasing content).
  * The exception is `_code.less`, which, in addition to block-level code, contains CSS for
  * the HTML `code` Element and also for inline-level spans of mathematical expressions.
  */
@import url('typo/_body.less');
@import url('typo/_headings.less');
@import url('typo/_paragraphs.less');
@import url('typo/_lists.less');
@import url('typo/_maps.less');
@import url('typo/_tables.less');
@import url('typo/_links.less');
@import url('typo/_code.less');
@import url('typo/_text.less');

/**
  * Form Objects are typographical, though slightly less text-based, and are only used in forms.
  * Examples include buttons, text boxes, drop-down lists, check boxes, etc.
  */
@import url('forms/_buttons.less');

/**
  * Modules are self-containing Objects that may be placed anywhere. They are not necessarily
  * typographical or semantic (they might be `div`s and `span`s), but their semantics are
  * derived from their presentation. That is, the meaning of the Object can really only be
  * determined by how it looks.
  */
@import url('mods/_labels.less');
@import url('mods/_breadcrumbs.less');
@import url('mods/_media.less');









// subsites:
//@import url('../../home/index.less');
//@import url('../../home/folio.less');
//@import url('../../home/resume/resume.less');
//@import url('../../home/more/links.less');
//@import url('../../home/more/contact.less');
//@import url('../../site-design/griddothtml.less');
//@import url('../../site-design/colors.less');
//@import url('../../reals/reals.less');
//@import url('../../higher-ed/higher-ed.less');
//@import url('../../higher-ed/secondary-ed.less');

//+++++++++++++++//
/*@QUASI-ELEMENTS*/
//+++++++++++++++//
[data-code-lang="html"].precode,
[data-code-lang="css"].precode,
[data-code-lang="latex"].precode {
	// * Denote the language of a block of code.
}
[data-status="normative"] {}
[data-status="informative"] {}
[data-status="nonnormative"] {
	font-style: italic;
	font-family: @fontfam_base;
}
/**
  * Elements still in testing mode but still not yet ready for implementation.
  */
[data-status="draft"] {
	background-color: #fffcfa; // @aperture_white rotated by [] degrees
	opacity: @phi1;
}
[hidden] {
	display: none !important;
}
[data-bool="0"] {
	color: @color_base_bg;
	background-color: lighten(@color_link_up, 15%);
}
[data-bool="1"] {
	color: @color_base_txt;
	background-color: lighten(@color_link_dn, 15%);
}
/*dl*/.dl--ordered {
	> dt:first-child,
	> dd + dt {
		display: list-item;
		list-style-type: decimal;
		list-style-position: outside;
	}
}
//.phone, // use microdata
//.tel,
//.email {
//	font-family: @fontfam--code;
//}

//++++ @end QUASI-ELEMENTS ++++//
@media print {
	body,
	.H,
	.Fig, .Addy, .Qblock,
	.Table {.fontsize-block-med;}
	body,
	code {color: #000;}
	body,
	code {background-color: #fff;}
	body {
		background-image: none;
	}
	main {
		width: auto;
		margin-left: auto;
		margin-right: auto;
	}
	.Fig, .Addy, .Qblock {
		// .spacing-phi-left;
		// .spacing-phi-right;
		.spacing-phi(left;  0; solid; #000);
		.spacing-phi(right; 0; solid; #000);
	}
}
