
/* @group main stuff */
body,
.hub-body {
	font-size: @font-size-base;
	font-family: @font-fam-base;
	text-align: left;
	line-height: 1.4;
	color: @color-base-txt;
	background-color: @color-base-bg;
	> nav .breadcrumbs {.P1-midright;}
}
.hub-body {
	background-image: url('/home/images/phi-stripes-trans.png');
	background-repeat: repeat-y;
	background-size: contain;
}
/* the main container in the body */
.main, main {
	.P1-midright;	
	margin-bottom: 162px; // why did I choose this number?
}
.masthead {
	@iconsize: 96px; // 1in
	.P4-right;
	position: fixed;
	top: (@iconsize / 2);
	nav {
		.P1-midleft;
		.mylogo {
			display: block;
			border-bottom: 0;
			font-weight: bold;
			font-size: @iconsize;
			font-family: 'Times','Times New Roman',serif;
		}
	}
}
@media print {
	body,
	h1, h2, h3, h4, h5, h6,
	blockquote, table {
		font-size: 12pt !important;
	}
	body {
		color: #000;
		background-color: #fff;
		background-image: none;
	}
	.main, main {
		width: auto;
		margin: auto;
	}
	.masthead {display: none;}
}
/* @end */

/* @group headings */
h1,
.h-alpha,
.h-beta,
.h-gamma,
.h-delta,
.h-epsilon,
.h-zeta {
	margin: 1em 0 0.25em;
	font-style: normal;
	font-variant: normal;
	font-weight: normal;
	font-family: @font-fam-heading;
	letter-spacing: 1px;
	.latex {color: inherit;}
	small.h-sub {
		padding-left: 1em;
		font-size: 80%;
		color: @color-subsubheading;
	}
}
.h-alpha {
	font-variant: small-caps;
	font-weight: bold;
	font-size: @font-size-h1;
	text-align: center;
	color: @color-heading;
}
.h-beta {
	font-weight: bold;
	font-size: @font-size-h2;
	color: @color-subheading;
}
.h-gamma {
	font-variant: small-caps;
	font-weight: bold;
	font-size: @font-size-h3;
}
.h-delta {
	font-style: italic;
	font-weight: bold;
	font-size: @font-size-h4;
}
.h-epsilon {
	font-style: italic;
	font-size: @font-size-h5;
	text-indent: 0.5in;
	color: @color-subheading;
}
.h-zeta {
	font-style: italic;
	font-variant: small-caps;
	font-size: @font-size-h6;
	text-indent: 0.5in;
}
//h1 + h1,
//h1 + h2,
//h2 + h3,
//h3 + h4,
//h4 + h5,
//h5 + h6 {
//	margin-top: 0;
//}
.title, .title * {
	text-align: center;
}
/* @end */

/* @group paragraphs */
@defaultmargins: 0 0 0.5em;
p {
	margin: @defaultmargins;
	text-align: left;
}
.prose {
	font-family: @font-fam-prose;
	text-align: justify;
	line-height: 1.3;
}
p.prose {
	margin-bottom: 0.75em;
}
.lede {
	font-weight: bold;
	font-family: @font-fam-base;
	color: #000000;
}
p.lede {
	margin-bottom: 1em;
	text-align: justify;
	line-height: 1.5;
}
span.lede {
	padding-right: 1em;
}

/* captions of figures, tables, or anything */
.caption {
	margin: @defaultmargins;
	margin-top: 0.5em;
	font-style: normal;
	font-size: @font-size-small;
	text-align: right;
}
.sideborder-left(@pad-width; @brdr-width; @marg-width; @brdr-style; @brdr-color) {
	margin: @defaultmargins;
	padding-left: @pad-width;
	padding-top: @brdr-width;
	padding-bottom: @brdr-width;
	border-left-width: @brdr-width;
	border-left-style: @brdr-style;
	border-left-color: @brdr-color;
	margin-left: @marg-width;
}
.sideborder-right(@pad-width; @brdr-width; @marg-width; @brdr-style; @brdr-color) {
	margin: @defaultmargins;
	padding-right: @pad-width;
	padding-top: @brdr-width;
	padding-bottom: @brdr-width;
	border-right-width: @brdr-width;
	border-right-style: @brdr-style;
	border-right-color: @brdr-color;
	margin-right: @marg-width;
}
/* a container containing paragraphs, etc. that are not officially part of an official document, but are still a major part of the normal flow of the document. Used when 'aside' and 'figure' elements are not suitable. */
.informal {
	.sideborder-left(5px; 3px; 13px; solid; @color-accent);
	font-family: @font-fam-base;
	background-color: #f4f4f4;
//	& * {background-color: transparent;}
}
/* example figures (text, images, etc.) */
figure {
	.sideborder-left(8px; 5px; 21px; solid; @color-accent);
	> figcaption {
		&:extend(.caption);
		border-top: 1px dashed;
		border-bottom: 0;
	}
	&.bad, &.bad * {
		color: @color-base-bg;
		background-color: @color-base-txt;
	}
}
/* blocks of short or long quoted material */
blockquote {
	.sideborder-left(13px; 8px; 34px; double; @color-accent);
	font-size: @font-size-big;
	font-family: @font-fam-accent;
	line-height: 1.5;
	&.prose {
		font-size: @font-size-base;
		cite.source {
			&:extend(.parens all);
			padding-left: 0;
		}
	}
	cite.source {
		padding-left: 1em;
		font-family: @font-fam-base;
		&::before {content: '~';}
	}
}
address {
	margin: @defaultmargins;
}
/* a paragraph element that indicates the most recent edit of a webpage or document. includes a <time datetime=""> element. */
//p.timestamp {
//	font-size: smaller;
//	text-align: left;
//}
/* @end */

/* @group lists */
ul, ol, dl {
	margin: @defaultmargins;
	padding-left: 0.5in;
	line-height: 1.3;
	ul, ol, dl {margin-bottom: auto;}
}
dd {
	margin: 0;
	padding-left: 0.5in;
	& + dt {margin-top: 0.5em;}
}
/* a basic list with no margins, padding, or numbering. list items are blocks */
.list-basic {
	padding: 0;
	list-style-type: none;
	li, dt, dd {margin: 0; padding: 0;}
}
/* a basic list except the list items are inline. dt elements are still blocks */
.list-inline {
	&:extend(.list-basic all);
	display: block;
	li, dd {display: inline;}
	dt {
		text-indent: 0;
		 + dd {padding-left: 0.5in;} // first dd following a dt
	}	
}
/* a basic list that acts as a table with the list items acting as table cells */
.list-line {
	&:extend(.list-basic all);
	.line;
	li {.unit;}
}
/* a list typically containing textual (non-block) hyperlinks */
.list-action {
	&:extend(.list-basic all);
	color: @color-link-up-txt;
	ul, ol, dl {list-style-type: none;}
	li::before {content: '\2713\0020';} // check mark, space
	a {border-bottom: 0;}
	a:not([href]) {color: @color-base-txt;}
}
ol.breadcrumbs {
	&:extend(.list-inline all);
	&:extend(.list-action all);
	font-family: @font-fam-heading;
	li {
		padding-right: 1em;
		&::before {content: '';}
	}
}
ol.prose {
	list-style-type: decimal;
	p.lede {margin: @defaultmargins;}
}
/* outlined lists */
.list-omega   {list-style-type: decimal-leading-zero;}
.list-alpha   {list-style-type: upper-roman;}
.list-beta    {list-style-type: upper-alpha;}
.list-gamma   {list-style-type: decimal;}
.list-delta   {list-style-type: lower-alpha;}
.list-epsilon {list-style-type: lower-roman;}
.list-zeta    {list-style-type: lower-greek;}
/* @end */

/* @group tables */
.tablesection() {
	border: 1px solid @color-table-brdr;
}
.tablesection-horiz() {
	.tablesection();
	border-left: 0;
	border-right: 0;
}
.tablesection-vert() {
	.tablesection();
	border-top: 0;
	border-bottom: 0;
}
.tableheader() {
	//font-weight: bold;
	text-align: center;
	vertical-align: middle;
	background-color: @color-table-bg-head;
}
table {
	border-collapse: collapse;
	margin: 0 auto 2em;
	text-align: center;
	> caption {
		&:extend(.caption);
	}
	thead, tfoot {font-weight: bold;}
	tbody {
		//.code, code {background-color: transparent;} // fix later when fixing code, boxes, etc.
	}
	th, td {
		padding: 5px;
		border-width: 1px;
		border-style: solid;
		border-color: #808080;
	}
	th {font-weight: bold;}
}
.table-list {
	thead, tfoot {
		tr {
			.tablesection-horiz();
			.tableheader();
		}
	}
	tbody {
		.tablesection-horiz();
		th {background-color: @color-table-bg-strong;}
		tr:nth-child(odd)  {background-color: @color-table-bg-medium;}
		tr:nth-child(even) {background-color: @color-table-bg-weak;}
	}
	th, td {border-width: 0;}
}
.table-bars {
	thead, tfoot {
		tr {
			.tablesection-vert();
			.tableheader();
		}
	}
	tbody {
		th {background-color: @color-table-bg-strong;}
		tr td:nth-child(odd)  {background-color: @color-table-bg-weak;}
		tr td:nth-child(even) {background-color: @color-table-bg-medium;}
	}
	th, td {border-width: 0;}
}
//.table-grid {
//	.table;
//	td {.special-table-border();}
//	.header,
//	th {background-color: @color-table-bg-head;}
//	.row-odd {
//		.column-odd  {background-color: @color-table-bg-weak;}
//		.column-even {background-color: @color-table-bg-medium;}
//	}
//	.row-even {
//		.column-odd  {background-color: @color-table-bg-medium;}
//		.column-even {background-color: @color-table-bg-strong;}
//	}
//}
/* @end */

/* mixin used for lots of things */
.parens {
	&::before {content: '(';}
	&::after  {content: ')';}	
}
/* non-semantic elements reset */
i,
b {
	font-style: inherit;
	font-weight: inherit;
}

/* @group highlighted text */
em {
	font-style: italic;
	> em {font-weight: bold;}
}
strong {font-weight: bold;}
mark {background-color: transparent;}
/* scare quotes contain abuse of vocabulary or language */
i.scare {
	&::before {content: open-quote;}
	&::after  {content: close-quote;}
}
/* mentions refer to phrases without referring to their meaning */
i.mention {
	&::before {content: open-quote;}
	&::after  {content: close-quote;}
}
/* phrases representing silent thoughts */
i.thought {
	&::before {content: '\00ab';} // &laquo;
	&::after  {content: '\00bb';} // &raquo;
}
/* phrases in foreign languages */
.foreignlang() {
	font-style: italic;
	font-family: 'Times','Times New Roman',serif;
}
i:lang(la),
i:lang(it),
i:lang(fr) { 
	.foreignlang();
}
i[lang=la],
i[lang=it],
i[lang=fr] {
	.foreignlang();
}
.solfege {.foreignlang();}
/* reference to a title, section heading, figure, table. use only when the `a` element or the `cite` element would not be appropriate */
b.ref {
	font-weight: bold;
}
/* keywords or technical terms */
b.keyword {
	font-weight: bold;
}
dfn {}
/* @end */

/* @group addresses */
//.phone, // use microformats
//.tel,
//.email {
//	font-family: @font-fam-code;
//}
/* @end */

/* @group citations */
q {}
cite {font-style: normal;}
small {
	&:extend(.parens all);
	font-size: @font-size-small;
}
.new[datetime],
ins[datetime],
.old[datetime],
del[datetime],
abbr[title] {
	cursor: help;
	&::after {
		display: none;
		position: relative;
		left: 5px;
		top: 5px;
		color: @color-info-txt;
		background-color: @color-info-bg;
		text-decoration: none;
	}
	&:hover::after {display: inline;}
}
.new, ins {
	padding-left: 0.5em;
	text-decoration: underline;
	color: @color-ins-txt;
	background-color: @color-ins-bg;
	&[datetime]::after {content: 'inserted on ' attr(datetime);}
}
.old, del {
	padding-right: 0.5em;
	text-decoration: line-through;
	color: @color-del-txt;
	background-color: @color-del-bg;
	&[datetime]::after {content: 'deleted on ' attr(datetime);}
}
abbr[title] {
	color: #000;
	background-color: @color-info-bg;
	&::after {content: attr(title);}
}
@media print {
	abbr[title] {
		border-bottom: 0;
	}
}
.superscript, sup,
.subscript, sub {
	font-size: @font-size-small;
}
.superscript, sup {vertical-align: super;}
.subscript,   sub {vertical-align: sub;}
/* @end */

/* @group special boxes */
@box-radius-small:  3px;
@box-radius-medium: 6px;
@box-radius-large: 10px;
/* inline content, boxed */
.box {
	display: inline;
	padding: 0 1px;
	border-width: 1px;
	border-style: solid;
	border-radius: @box-radius-small;
}
/* inline content, with block structure, boxed */
.box-inline-block {
	&:extend(.box);
	display: inline-block;
}
/* a block structure, boxed */
.box-block {
	&:extend(.box-inline-block);
	display: block;
	padding: 2px 4px;
	border-radius: @box-radius-large;
	margin: 4px;
}
	/* @group labels */
	/* Tags are little warnings/tips/etc. for the user. More elegant than tooltips. */
	.label {
		&:extend(.box-inline-block);
		padding: 1px;
		border: 0;
		font-size: @font-size-small;
		font-family: @font-fam-accent;
		cursor: help;
		&::before {
			&:extend(.box);
			padding: 1px;
			border: 0;
			margin-right: 1em;
			font-size: @font-size-base;
			font-family: @font-fam-code;
		}
	}
	.label(@color-txt, @color-bg, @color-icon-bg, @content) {
		color: @color-txt;
		background-color: @color-bg;
		&::before {
			content: @content;
			color: @color-txt;
			background-color: @color-icon-bg;
		}
	}
	/* "dire consequences" */
	span.warning {
		&:extend(.label all);
		.label(@color-warning-txt, @color-warning-bg, @color-warning-icon-bg, '!');
	}
	/* "be careful" */
	span.caution {
		&:extend(.label all);
		.label(@color-caution-txt, @color-caution-bg, @color-caution-icon-bg, '\2026'); // &hellip;
	}
	/* "something was done right" */
	span.success {
		&:extend(.label all);
		.label(@color-success-txt, @color-success-bg, @color-success-icon-bg, '\263A'); // smiley
	}
	/* "extra information" */
	span.info {
		&:extend(.label all);
		.label(@color-info-txt, @color-info-bg, @color-info-icon-bg, '?');
	}
	/* "tips and hints" */
	span.help {
		&:extend(.label all);
		.label(@color-help-txt, @color-help-bg, @color-help-icon-bg, '\2665'); // &hearts;
	}
	/* "cyan" */
	span.cyan {
		&:extend(.label all);
		.label(@color-cyan-txt, @color-cyan-bg, @color-cyan-icon-bg, 'c');
	}
	@media print {
		.warning,
		.caution,
		.success,
		.info,
		.help {
			&::before {display: none;}
		}
	}
	/* @end */
/* @end */

/* @group forms */
fieldset {
	padding: 0;
	border: 0;
	margin: 0;
}
/* @end */

/* @group inline links */
a {
	text-decoration: none;
	color: inherit;
	border-width: 0 0 1px;
	border-style: dotted;
	&[href] {
		color: @color-link-up-txt; // also sets border color
		&:hover {color: @color-link-dn-txt;}
		&.sp {
			color: @color-link-sp-up-txt;
			&:hover {color: @color-link-sp-dn-txt;}
		}
		&:active {color: @color-link-active-txt;}
	}
	.latex {color: inherit}
}
/* @end */

/* @group block links */
a.a-block {
	&:extend(.box-block);
	border-color: inherit;
	border-radius: @box-radius-medium;
	text-align: center;
	background-color: inherit;
	&[href] {
		border-color: @color-link-up-block-brdr;
		background-color: @color-link-up-block-bg;
		&:hover {
			border-color: @color-link-dn-block-brdr;
			background-color: @color-link-dn-block-bg;
		}
		&:active {
			border-color: @color-link-active-block-brdr;
			background-color: @color-link-active-block-bg;
		}
	}
}
/* @end */

/* @group coding */
pre {
	margin: 0;
	white-space: pre-wrap;
	> code {
		&:extend(.box-block);
		//line-height: 1.4;
	}
}
//figure pre > code {border: 0;}
samp {font-family: inherit;}
/* example of a fragment or string of code a computer would recognize */
code {
	&:extend(.box);
	border-color: @color-code-brdr;
	font-size: @font-size-small;
	font-family: @font-fam-code;
	color: @color-code-txt;
	background-color: @color-code-bg;
	&.lang-html {
		.tag       {color: @color-code-html-tag;}
		.attribute {color: @color-code-html-attr;}
		.value     {color: @color-code-html-val;}
	}
	&.lang-css {
		.selector {color: @color-code-css-sel;}
		.property {color: @color-code-css-prop;}
		.value    {color: @color-code-css-val;}
	}
	&.lang-latex {
		.cmd {color: @color-code-latex-comm;}
		.arg {color: @color-code-latex-arg;}
	}
	&.dir { /* directory system (folders and files) */
		font-style: italic;
		font-family: @font-fam-base;
	}
	.comment {color: @color-code-comment;}
}
@media print {
	.code {
		color: #000000;
		background-color: #fff;
	}
}
/* user input, in the form of a string, menu item, etc. */
kbd { 
	white-space: nowrap;
//	&.write { // what is this?
//		font-family: inherit;
//		&::before {content: open-quote;}
//		&::after  {content: close-quote;}
//	}
	/* an individual key on a keyboard, calculator, or other device */
	> kbd {
		&:extend(.code);
		padding: 2px;
		font-family: @font-fam-base;
	}
}
/* @end */

/* @group math */
.latex {
	font-size: @font-size-small;
	font-family: @font-fam-code;
	white-space: pre-line;
	color: @color-latex-txt;
	div&, p& { // block-level containers
		overflow: auto;
	}
}
var {font-style: italic;}
.tex { // a reminder to change all <... class="tex"> to <... class="latex">
	color: #f00;
	* {color: #f00;}
}
/* @end */

/* @group miscellaneous */
/* Elements not yet ready for publishing. Elements with the 'hidden' boolean attribute (hidden="") are not to be processed by browsers and are to be ignored by SEO patterns. Sometimes, the browser-default css-style is overridden, hence this selector exists. */
[hidden] {display: none !important;}

/* Elements needed for SEO *only* (e.g. extraneous titles, etc). Try to only use this selector as a last resort. */
.seo-only {display: none !important;}

/* Elements still in testing mode but still not yet ready for implementation. */
.draft, .draft * {color: #999; background-color: @color-caution-bg;}

/* To display on screen but not to print. */
@media print {.noprint {display: none !important;}}

/* Starts a new page. */
.pagebreak {page-break-before: always; padding-top: 0.5in;}
/* @end */
