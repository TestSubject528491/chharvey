// main: all.less
/* @group absract mixins */
@box-radius-small:  3px;
@box-radius-medium: 6px;
@box-radius-large: 10px;
.box-inline {
	//* inline content, boxed
	display: inline;
	padding: 0 1px;
	border-width: 1px;
	border-style: solid;
	border-radius: @box-radius-small;
}
.box-inline-block {
	//* inline content, with block structure, boxed
	&:extend(.box-inline);
	display: inline-block;
}
.box-block {
	//* a block structure, boxed
	&:extend(.box-inline-block);
	display: block;
	padding: 2px 4px;
	border-radius: @box-radius-large;
	margin: 0 4px;
}
.padding-top-lh(@lh-top) {
	padding-top: @lh-top * @line-height-base * @font-size-base;
}
.padding-bot-lh(@lh-bot) {
	padding-bottom: @lh-bot * @line-height-base * @font-size-base;
}
.margin-top-lh(@lh-top) {
	margin-top: @lh-top * @line-height-base * @font-size-base;
}
.margin-bot-lh(@lh-bot) {
	margin-bottom: @lh-bot * @line-height-base * @font-size-base;
}
.border-vert-single(@width) {
	margin-bottom: (-1 * @width);
	position: relative;
	top: (-1 * @width);
}
.border-vert-both(@width) {
	.border-vert-single(@width);
	margin-bottom: (-2 * @width);
}
.border-top(@width; @style; @color) {
	.border-vert-single(@width);
	border-top: @width @style @color;
}
.border-top(@width; @style) {
	.border-vert-single(@width);
	border-top-width: @width;
	border-top-style: @style;
}
.border-bot(@width; @style; @color) {
	.border-vert-single(@width);
	border-bottom: @width @style @color;
}
.border-bot(@width; @style) {
	.border-vert-single(@width);
	border-bottom-width: @width;
	border-bottom-style: @style;
}
.border-topbot(@width; @style; @color) {
	.border-vert-both(@width);
	border-top: @width @style @color;
	border-bottom: @width @style @color;
	border-left: 0;
	border-right: 0;
}
.border-topbot(@width; @style) {
	.border-vert-both(@width);
	border-top-width: @width;
	border-top-style: @style;
	border-bottom-width: @width;
	border-bottom-style: @style;
	border-left: 0;
	border-right: 0;
}
.border-all(@width; @style; @color) {
	.border-vert-both(@width);
	border: @width @style @color;
}
.border-all(@width; @style) {
	.border-vert-both(@width);
	border-width: @width;
	border-style: @style;
}
/* @end */


/* @group main stuff */
body,
.hub-body {
	font-size: @font-size-base;
	font-family: @font-fam-base;
	text-align: left;
	line-height: @line-height-base;
	vertical-align: baseline;
	color: @color-base-txt;
	background-color: @color-base-bg;
}
.hub-body {
	background-image: url('/home/images/phi-stripes-trans.png');
	background-repeat: repeat-y;
	background-size: contain;
}
.main, main {
	//* the main container in the body
	&:extend(.P1-midright);
	margin-bottom: 192px; // 2in
}
.masthead {
	@iconsize: 96px; // 1in
	.P4-right;
	position: fixed;
	top: (@iconsize / 2);
	nav {
		&:extend(.P1-midleft);
		.mylogo {
			display: block;
			border-bottom: 0;
			font-weight: bold;
			font-size: @iconsize;
			font-family: 'Times','Times New Roman',serif;
		}
	}
}
/* @end */

/* @group headings */
h1, h2, h3, h4, h5, h6,
.h-alpha,
.h-beta,
.h-gamma,
.h-delta,
.h-epsilon,
.h-zeta {
	padding: 0;
	margin: 0;
	font-style: normal;
	font-variant: normal;
	font-weight: normal;
	font-family: @font-fam-heading;
	letter-spacing: 1px;
	.latex {color: inherit;}
	small.h-sub {
		padding-left: 1em;
		font-weight: normal;
	}
	+ p,
	+ ul,
	+ ol,
	+ dl {margin-top: 0;}
}
@hsub-lighten: 20%;
.h-alpha {
	.padding-bot-lh(1);
	.margin-top-lh(2);
	font-variant: small-caps;
	font-weight: bold;
	font-size: @font-size-h1;
	text-align: center;
	line-height: @line-height-h1;
	color: @color-heading;
	small.h-sub {
		font-size: @font-size-h1-sub;
		color: lighten(@color-heading, @hsub-lighten);
	}
}
.h-beta {
	.padding-bot-lh(0.5);
	.margin-top-lh(1.5);
	font-weight: bold;
	font-size: @font-size-h2;
	line-height: @line-height-h2;
	color: @color-subheading;
	small.h-sub {
		font-size: @font-size-h2-sub;
		color: lighten(@color-subheading, @hsub-lighten);
	}
}
.h-gamma {
	.padding-bot-lh(0.25);
	.margin-top-lh(0.75);
	font-variant: small-caps;
	font-weight: bold;
	font-size: @font-size-h3;
	line-height: @line-height-h3;
	small.h-sub {
		font-size: @font-size-h3-sub;
		color: lighten(@color-base-txt, @hsub-lighten);
	}
}
.h-delta {
	.margin-top-lh(1);
	font-style: italic;
	font-weight: bold;
	font-size: @font-size-h4;
	line-height: @line-height-h4;
	small.h-sub {
		font-size: @font-size-h4-sub;
		color: lighten(@color-base-txt, @hsub-lighten);
	}
}
.h-epsilon {
	font-style: italic;
	font-size: @font-size-h5;
	text-indent: 0.5in;
	line-height: @line-height-h5;
	color: @color-subheading;
	small.h-sub {
		font-size: @font-size-h5-sub;
		color: lighten(@color-subheading, @hsub-lighten);
	}
}
.h-zeta {
	font-style: italic;
	font-variant: small-caps;
	font-size: @font-size-h6;
	text-indent: 0.5in;
	line-height: @line-height-h6;
	small.h-sub {
		font-size: @font-size-h6-sub;
		color: lighten(@color-base-txt, @hsub-lighten);
	}
}
.title, .title * {
	text-align: center;
}
/* @end */

p, figure, blockquote,
ul, ol, dl,
table {
	//* margin reset
	margin: 0;
	.margin-top-lh(1);
}

/* @group paragraphs */
p {}
.sideborder,
li,
td {
	> p:first-child {margin-top: 0;}
}
.prose {
	font-family: @font-fam-prose;
	text-align: justify;
}
p.prose {}
.lede {
	font-weight: bold;
	font-family: @font-fam-base;
	color: #000;
}
p.lede {
	text-align: justify;
	+ p {.margin-top-lh(2);}
}
span.lede {
	padding-right: 1em;
}

.caption {
	//* captions of figures, tables, or anything
	font-style: normal;
	font-size: @font-size-small;
	text-align: right;
	line-height: @line-height-small;
}
.sideborder {
	.margin-top-lh(@Phi1) !important;
	.padding-top-lh(@Phi2) !important;
}
.sideborder-left(@pad-width; @brdr-width; @marg-width; @brdr-style; @brdr-color) {
	&:extend(.sideborder all);
	padding-left: @pad-width;
	border-left: @brdr-width @brdr-style @brdr-color;
	margin-left: @marg-width;
	margin-right: 0;
}
.sideborder-right(@pad-width; @brdr-width; @marg-width; @brdr-style; @brdr-color) {
	&:extend(.sideborder all);
	padding-right: @pad-width;
	border-right: @brdr-width @brdr-style @brdr-color;
	margin-right: @marg-width;
	margin-left: 0;
}
.informal {
	//* a container containing paragraphs, etc. that are not officially part of an official document, but are still a major part of the normal flow of the document. Used when 'aside' and 'figure' elements are not suitable.
	.sideborder-left(5px; 3px; 13px; solid; @color-accent);
	font-family: @font-fam-base;
	background-color: @color-info-bg;
//	& * {background-color: transparent;}
}
figure {
	//* example figures (text, images, etc.)
	.sideborder-left(8px; 5px; 21px; solid; @color-accent);
	&.bad, &.bad * {
		color: @color-base-bg;
		background-color: @color-base-txt;
	}
}
figcaption {
	&:extend(.caption);
	.border-top(1px; dashed);
}
blockquote {
	.sideborder-left(13px; 8px; 34px; double; @color-accent);
	font-size: @font-size-big;
	font-family: @font-fam-accent;
	line-height: @line-height-big;
	&.prose {
		font-size: @font-size-base;
		line-height: @line-height-base;
		cite.source {
			&:extend(.parens all);
			padding-left: 0;
		}
	}
	cite.source {
		padding-left: 1em;
		font-family: @font-fam-base;
		&::before {content: '~';}
	}
}
address {
	margin: 0;
	font-style: inherit;
}
.postal {
	.sideborder-right(21px; 13px; 55px; solid ;@color-accent);
	border-radius: 10px;
	font-size: @font-size-big;
	font-family: @font-fam-accent;
	text-align: right;
	line-height: @line-height-big;
	a {border: 0;}
}
/* @end */

/* @group lists */
ul, ol {
	padding-left: 0.5in;
	ul, ol, dl {margin-top: 0;}
}
dd {
	margin-left: 0.5in;
//	& + dt {margin-top: 0.5em;}
}
.list-basic {
	padding: 0;
	list-style-type: none;
	li, dt, dd {margin: 0; padding: 0;}
}
.list-inline {
	//* a basic list except the list items are inline. dt elements are still blocks
	&:extend(.list-basic all);
	display: block;
	li, dd {display: inline;}
	dt {
		text-indent: 0;
		 + dd {padding-left: 0.5in;}
	}	
}
.list-line {
	//* a basic list that acts as a table with the list items acting as table cells
	&:extend(.list-basic all);
	.line;
	> li {.unit;}
}
.dltable(@dtwidth) {
	//* a dl list that acts like a table, with each row containing a single name-value group
	&:extend(.list-line all);
	dt, dd {
		float: left;
		clear: both;
	}
	dt {width: @dtwidth;}
	dd {margin-left: @dtwidth;}
	dt + dd {
		clear: none;
		margin-left: 0;
	}
	& + * {clear: both;}
}
.list-action {
	//* a list typically containing textual (non-block) hyperlinks
	&:extend(.list-basic all);
	color: @color-link-up-txt;
	ul, ol, dl {list-style-type: none;}
	li::before {content: '\2713\0020';} // check mark, space
	a {border-bottom: 0;}
	a:not([href]) {color: @color-base-txt;}
}
body > nav .breadcrumbs {&:extend(.P1-midright);}
.breadcrumbs {
	&:extend(.list-inline all);
	&:extend(.list-action all);
	font-family: @font-fam-heading;
	li {
		padding-right: 1em;
		&::before {content: '';}
	}
}
ol.prose {
	list-style-type: decimal;
	p.lede + p {margin-top: 0;}
}
//* outlined lists
.list-omega   {list-style-type: decimal-leading-zero;}
.list-alpha   {list-style-type: upper-roman;}
.list-beta    {list-style-type: upper-alpha;}
.list-gamma   {list-style-type: decimal;}
.list-delta   {list-style-type: lower-alpha;}
.list-epsilon {list-style-type: lower-roman;}
.list-zeta    {list-style-type: lower-greek;}
/* @end */

/* @group tables */
.tablesection() {
	border: 1px solid @color-table-brdr;
}
.tableheader() {
	.tablesection();
//	font-weight: bold;
	text-align: center;
	vertical-align: middle;
	background-color: @color-table-bg-head;
}
.tablesection-horiz() {
	.tablesection();
	border-left: 0;
	border-right: 0;
}
.tablesection-vert() {
	.tablesection();
	border-top: 0;
	border-bottom: 0;
}
table {
	border-collapse: collapse;
	margin: 0 auto 1em;
	text-align: center;
}
caption {&:extend(.caption);}
thead, tfoot {font-weight: bold;}
tbody {
//	.code, code {background-color: transparent;} // fix later when fixing code, boxes, etc.
}
th, td {
	padding: 5px;
	border-width: 1px;
	border-style: solid;
	border-color: #808080;
}
th {
	font-weight: bold;
	background-color: @color-table-bg-strong;
}
.table-list,
.table-bars {
	thead tr,
	tfood tr {.tableheader();}
	th, td {border-width: 0;}
}
.table-list {
	thead tr,
	tfoot tr {.tablesection-horiz();}
	tbody {
		.tablesection-horiz();
		tr:nth-child(odd)  {background-color: @color-table-bg-medium;}
		tr:nth-child(even) {background-color: @color-table-bg-weak;}
	}
}
.table-bars {
	thead tr,
	tfoot tr {.tablesection-vert();}
	tbody {
		.tablesection-vert();
		tr td:nth-child(odd)  {background-color: @color-table-bg-weak;}
		tr td:nth-child(even) {background-color: @color-table-bg-medium;}
	}
}
//.table-grid {
//	.table;
//	td {.special-table-border();}
//	.header,
//	th {background-color: @color-table-bg-head;}
//	.row-odd {
//		.column-odd  {background-color: @color-table-bg-weak;}
//		.column-even {background-color: @color-table-bg-medium;}
//	}
//	.row-even {
//		.column-odd  {background-color: @color-table-bg-medium;}
//		.column-even {background-color: @color-table-bg-strong;}
//	}
//}
/* @end */

.parens {
	//* mixin used for lots of things
	&::before {content: '(';}
	&::after  {content: ')';}	
}
i,
b {
	//* non-semantic elements reset
	font-style: inherit;
	font-weight: inherit;
}

/* @group highlighted text */
em {
	font-style: italic;
	> em {font-weight: bold;}
}
strong {font-weight: bold;}
mark {background-color: transparent;}
i.scare {
	//* scare quotes contain abuse of vocabulary or language
	&::before {content: open-quote;}
	&::after  {content: close-quote;}
}
i.mention {
	//* mentions refer to phrases without referring to their meaning
	&::before {content: open-quote;}
	&::after  {content: close-quote;}
}
i.thought {
	//* phrases representing silent thoughts
	&::before {content: '\00ab';} // &laquo;
	&::after  {content: '\00bb';} // &raquo;
}
.foreignlang() {
	//* phrases in foreign languages
	font-style: italic;
	font-family: @font-fam-math;
}
i:lang(la),
i:lang(it),
i:lang(fr) { 
	.foreignlang();
}
i[lang=la],
i[lang=it],
i[lang=fr] {
	.foreignlang();
}
.solfege {
	.foreignlang();
}
b.keyword {
	//* keywords or technical terms
	font-weight: bold;
}
b.proper {
	//* proper noun traditionally italicized
	font-style: italic;
	text-transform: capitalize;
}
b.ref {
	//* reference to a title, section heading, figure, table, or creative work. use only when the `a` element or the `cite` element would not be appropriate
	font-weight: bold;
}
dfn {
	//* defining instance of a term
	font-weight: bold;
	font-style: inherit;
}
/* @end */

/* @group documentation */
//p.timestamp {
//	//* a paragraph element that indicates the most recent edit of a webpage or document. includes a <time datetime=""> element
//	font-size: smaller;
//	text-align: left;
//}
q {}
cite {
	font-style: inherit;
}
small, sup, sub {
	font-size: @font-size-small;
}
sup {vertical-align: super;}
sub {vertical-align: sub;}
ins[datetime],
del[datetime],
abbr[title] {
	cursor: help;
	&::after {
		display: none;
		position: relative;
		left: 5px;
		top: 5px;
		color: @color-info-txt;
		background-color: @color-info-bg;
		text-decoration: none;
	}
	&:hover::after {display: inline;}
}
ins {
	padding-left: 0.5em;
	text-decoration: underline;
	color: @color-ins-txt;
	background-color: @color-ins-bg;
	&[datetime]::after {content: 'inserted on ' attr(datetime);}
}
del {
	padding-right: 0.5em;
	text-decoration: line-through;
	color: @color-del-txt;
	background-color: @color-del-bg;
	&[datetime]::after {content: 'deleted on ' attr(datetime);}
}
abbr {
	color: #000;
	background-color: @color-info-bg;
	&[title]::after {content: attr(title);}
}
//.phone, // use microformats
//.tel,
//.email {
//	font-family: @font-fam-code;
//}
/* @end */

/* @group hyperlinks */
a {
	text-decoration: none;
	color: inherit;
	border-width: 0 0 1px;
	border-style: dotted;
	&[href] {
		color: @color-link-up-txt; // also sets border color
		&:hover {color: @color-link-dn-txt;}
		&.sp {
			color: @color-link-sp-up-txt;
			&:hover {color: @color-link-sp-dn-txt;}
		}
		&:active {color: @color-link-active-txt;}
	}
	&[title] {
		//* `title` attribute should be the Title of the linked document
	}
	.latex {color: inherit}
}
a.a-block {
	&:extend(.box-block);
	border-color: inherit;
	border-radius: @box-radius-medium;
	text-align: center;
	background-color: transparent;
	&[href] {
		border-color: @color-link-up-block-brdr;
		background-color: @color-link-up-block-bg;
		&:hover {
			border-color: @color-link-dn-block-brdr;
			background-color: @color-link-dn-block-bg;
		}
		&:active {
			border-color: @color-link-active-block-brdr;
			background-color: @color-link-active-block-bg;
		}
	}
}
/* @end */

/* @group coding */
pre {
	margin: 0;
	white-space: pre-wrap;
	> code {
		&:extend(.box-block);
		line-height: @line-height-small;
	}
}
//figure pre > code {border: 0;}
samp {font-family: inherit;}
code {
	//* example of a fragment or string of code a computer would recognize
	&:extend(.box-inline);
	border-color: @color-code-brdr;
	font-size: @font-size-small;
	font-family: @font-fam-code;
	color: @color-code-txt;
	background-color: @color-code-bg;
	&.lang-html {
		.tag       {color: @color-code-html-tag;}
		.attribute {color: @color-code-html-attr;}
		.value     {color: @color-code-html-val;}
	}
	&.lang-css {
		.selector {color: @color-code-css-sel;}
		.property {color: @color-code-css-prop;}
		.value    {color: @color-code-css-val;}
	}
	&.lang-latex {
		.cmd {color: @color-code-latex-comm;}
		.arg {color: @color-code-latex-arg;}
	}
	&.dir {
		//* directory system (folders and files)
		font-style: italic;
		font-family: @font-fam-base;
	}
	.comment {color: @color-code-comment;}
}
kbd { 
	//* user input, in the form of a string, menu item, etc.
	white-space: nowrap;
//	&.write { // what is this?
//		font-family: inherit;
//		&::before {content: open-quote;}
//		&::after  {content: close-quote;}
//	}
	> kbd {
		//* an individual key on a keyboard, calculator, or other device
		&:extend(.code);
		padding: 2px;
		font-family: @font-fam-base;
	}
}
/* @end */

/* @group math */
.latex {
//	font-size: @font-size-small;
//	line-height: @line-height-small;
	font-family: @font-fam-math;
	white-space: pre-line;
	color: @color-latex-txt;
	div&, p& {
		//* block-level containers
		overflow: auto;
	}
}
var {font-style: italic;}
.tex { // a reminder to change all <... class="tex"> to <... class="latex">
	color: #f00;
	* {color: #f00;}
}
/* @end */

/* @group labels */
.label {
	//* labels are little warnings/tips/etc. for the user. More elegant than tooltips
	&:extend(.box-inline-block);
	padding: 1px;
	border: 0;
	font-size: @font-size-small;
	font-family: @font-fam-accent;
	cursor: help;
	&::before {
		&:extend(.box-inline);
		padding: 1px;
		border: 0;
		margin-right: 1em;
		font-family: @font-fam-code;
	}
}
.label(@color-txt; @color-bg; @color-icon-bg; @content) {
	color: @color-txt;
	background-color: @color-bg;
	&::before {
		content: @content;
		color: @color-txt;
		background-color: @color-icon-bg;
	}
}
span.warning {
	//* "dire consequences"
	&:extend(.label all);
	.label(@color-warning-txt; @color-warning-bg; @color-warning-icon-bg; '!');
}
span.caution {
	//* "be careful"
	&:extend(.label all);
	.label(@color-caution-txt; @color-caution-bg; @color-caution-icon-bg; '\2026'); // &hellip;
}
span.success {
	//* "something was done right"
	&:extend(.label all);
	.label(@color-success-txt; @color-success-bg; @color-success-icon-bg; '\263A'); // smiley
}
span.info {
	//* "extra or informal information"
	&:extend(.label all);
	.label(@color-info-txt; @color-info-bg; @color-info-icon-bg; '?');
}
span.help {
	//* "tips and hints"
	&:extend(.label all);
	.label(@color-help-txt; @color-help-bg; @color-help-icon-bg; '\2665'); // &hearts;
}
span.cyan {
	//* "cyan"
	&:extend(.label all);
	.label(@color-cyan-txt; @color-cyan-bg; @color-cyan-icon-bg; 'c');
}
/* @end */

/* @group forms */
fieldset {
	padding: 0;
	border: 0;
	margin: 0;
}
/* @end */


/* @group miscellaneous */
[hidden] {
	//* Elements not yet ready for publishing. Elements with the 'hidden' boolean attribute (hidden="") are not to be processed by browsers and are to be ignored by SEO patterns. Sometimes, the browser-default css-style is overridden, hence this selector exists.
	display: none !important;
}
.seo-only {
	//* Elements needed for SEO *only* (e.g. extraneous titles, etc). Try to only use this selector as a last resort.
	display: none !important;
}
.draft, .draft * {
	//* Elements still in testing mode but still not yet ready for implementation.
	color: #999; background-color: #fe8;
}
@media print {
	body,
	h1, h2, h3, h4, h5, h6,
	.h-alpha, .h-beta, .h-gamma, .h-delta, .h-epsilon, .h-zeta,
	blockquote, .postal,
	table {
		font-size: 16px !important;
		line-height: 24px !important;
	}
	body {
		color: #000;
		background-color: #fff;
		background-image: none;
	}
	.main, main {
		width: auto !important;
		margin: auto !important;
	}
	.masthead {display: none;}
	.postal {
		border: 0;
		text-align: left;
	}
	ins, del, abbr {background-color: transparent;}
	.code {
		color: #000000;
		background-color: #fff;
	}
	.warning,
	.caution,
	.success,
	.info,
	.help,
	.cyan {
		&::before {display: none;}
	}
	.noprint {
		//* To display on screen but not to print.
		display: none !important;
	}
	.pagebreak {
		//* Starts a new page in the `print` media type.
		page-break-before: always; padding-top: 0.5in;
	}
}
/* @end */
