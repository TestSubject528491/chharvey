@import url('vardefs.less');

/* @group MODS.LESS */
/* @group main stuff */
.body, body {
	font-size: 12pt;
	font-family: @font-fam-base;
	text-align: left;
	line-height: 1.4em;
	color: @color-body-txt;
	background-color: @color-body-bg;
}
.hub-body {
	.body;
	background-image: url('/home/images/phi-stripes-trans.png');
	background-repeat: repeat-y;
	background-size: contain;
}
.main,
main { // the main container in the body
	.P1-midright();	
	margin-bottom: 162px; // why did I choose this number?
}
.masthead {
	.P4-right();	
	position: fixed;
	top: 0;
	font-weight: bold;
	font-size: 1in;
	font-family: 'Times','Times New Roman',serif;
	nav {
		.P1-midleft();
		.mylogo {
			// do NOT extend/include `.up`! because `this` will override the `.dn` and `.active` classes
			// include `.up` in the HTML
			display: block;
			border-bottom: 0;
		}
	}
}
	/* @group hacks */
	
	/* Selects elements not yet ready for publishing. Elements with the 'hidden' boolean attribute are not to be processed by browsers and are to be ignored by SEO patterns. Sometimes, the browser-default css-style is overridden, hence this selector exists. */
	[hidden] {display:none !important;}
	
	/* Selects elements still in testing mode but still not yet ready for implementation. */
	.draft, .draft * {color: #999;}
	
	/* Selects elements to hide ONLY in browsers with JS ENabled (i.e. it represents a fall-back feature for non-JS users). In '/core/scripts/all.js', see method for adding style 'visibility: hidden;' to this class. */
//	.js-enabled-remove {}
	
	/* Selects elements to hide ONLY in browsers with JS DISabled (i.e. it represents a special feature for JS users). In '/core/scripts/all.js', see method for adding style 'display: inline-block;' to this class. */
//	.js-disabled-remove {display: none;}
	
	/* Selects elements needed for SEO *only* (e.g. extraneous titles, etc). Try to only use this selector as a last resort. */
	.seo-only {display: none !important;}
	
	/* @end */

@media print {
	body {color: #000000;}
	body {background-image: none;}
	body,
	a,
	.code,
	code {background-color: #ffffff;}
	.hub-nav,
	.courseinfo,
	.masthead {display: none;}
	.main,
	main {
		width: auto;
		margin: auto;
	}
	.noprint {display: none !important;} // to display on screen but not to print
}

/* @end */

/* @group special boxes */
@box-radius-small:  3px;
@box-radius-medium: 6px;
@box-radius-large: 10px;

.box { // inline content, boxed
	display: inline;
	padding: 0 1px;
	border-width: 1px;
	border-style: solid;
	border-radius: @box-radius-small;
}
.box-inline-block { // inline content, with block structure, boxed
	.box;
	display: inline-block;
}
.box-block { // a block structure, boxed
	.box-inline-block;
	display: block;
	padding: 2px 4px;
	border-radius: @box-radius-large;
	margin: 4px;
}
/* @end */
/* @group hyperlinks */
	/* @group inline links */
//	.link(@color) {
//		border-width: 0 0 1px;
//		border-style: dotted;
//		text-decoration: none;
//		color: @color;
//		.latex {color: inherit}
//	}
	.link() {
		text-decoration: none;
		color: inherit;  // automatically sets text and border color
		.latex {color: inherit}
	}
	a {
		.link();
		border-width: 0 0 1px;
		border-style: dotted;
		&[href] {
			color: @color-link-up-txt;
			&:hover {color: @color-link-dn-txt;}
			&.sp {
				color: @color-link-sp-up-txt;
				&:hover {color: @color-link-sp-dn-txt;}
			}
			&:active {color: @color-link-active-txt;}
		}
	}
	/* @end */
	
	/* @group block links */
	a.a-block {
		.box-block;
		border-color: inherit;
		border-radius: @box-radius-medium;
		text-align: center;
		background-color: inherit;
		&[href],
		#index & {
			border-color: @color-link-up-block-brdr;
			background-color: @color-link-up-block-bg;
			&:hover {
				border-color: @color-link-dn-block-brdr;
				background-color: @color-link-dn-block-bg;
			}
			&:active {
				border-color: @color-link-active-block-brdr;
				background-color: @color-link-active-block-bg;
			}
		}
	}
	/* @end */
/* @end */
/* @group modules containing sample things */
//.sample() {
//	.box-block;
//	position: relative;
//	padding: 2em 10px 10px;
//	.code, code {border: 0;}
//}
//.sample-label() {
//	.box-block;
//	position: absolute;
//	top: -1px;
//	left: -1px;
//	border-bottom-left-radius: 0;
//	border-top-right-radius: 0;
//	margin: 0;
//	font-size: smaller;
//}
/* @end */

/* @group coding */
/* CODE represents EXAMPLE code, typically something a user would input. do NOT use the 'example' class, though it would be semantically correct, because this 'code' class this is more specific. */
.code() { // fragment or string of code a computer would recognize
	.box;
	border-color: @color-code-brdr;
	font-size: 10pt;
	font-family: @font-fam-code;
	color: @color-code-txt;
	background-color: @color-code-bg;
}
code {
	.code();
	&.lang-html {
		.tag       {color: @color-code-html-tag;}
		.attribute {color: @color-code-html-attr;}
		.value     {color: @color-code-html-val;}
	}
	&.lang-css, &.lang-less {
		.selector {color: @color-code-css-sel;}
		.property {color: @color-code-css-prop;}
		.value    {color: @color-code-css-val;}
	}
	&.lang-latex {
		.cmd {color: @color-code-latex-comm;}
		.arg {color: @color-code-latex-arg;}
	}
	.comment {color: @color-code-comment;}
}
/* user input, in the form of a string, menu item, etc. */
.userinput,
kbd { 
	white-space: nowrap;
}
/* an individual key on a keyboard, calculator, or other device */
.key,
kbd kbd {
	.code();
	padding: 2px;
	font-family: @font-fam-base;
}
//.code-block() {
//	.sample();
//	.label {
//		.sample-label();
//		border-color: @color-code-brdr;
//		color: @color-code-label-txt;
//		background-color: @color-code-label-bg;
//	}
//}
pre {
	margin: 0;
	white-space: pre-wrap;
}
pre > code {
	.box-block;
	line-height: 1.4em;
}
figure pre > code {border: 0;}
samp {font-family: inherit;}
/* demos are blocks or figures that demonstrate output of an example code block */
//.demo {
//	.sample();
//	border-color: @color-demo-brdr;
//	background-color: @color-demo-bg;
//	> .label {
//		.sample-label();
//		border-color: @color-demo-brdr;
//		color: @color-demo-label-txt;
//		background-color: @color-demo-label-bg;
//	}
//}
/* @end */

/* @group math */
.latex {
	font-size: 10pt;
	font-family: @font-fam-code;
	white-space: pre-line;
	color: @color-latex-txt;
	div&, p& { // block-level containers
		overflow: auto;
	}
}
.tex { // a reminder to change all <... class="tex"> to <... class="latex">
	color: #f00;
	* {color: #f00;}
}
/* @end */

/* @group messages */
/* Messages are little warnings/tips/etc. for the user. More elegant than tooltips. */
.message(@color, @content) {
	.box-inline-block;
	border: 0;
	background-color: @color;
	&:before {
		.box;
		margin-right: 1em;
		border: 0;
		content: @content;
		font-size: 10pt;
		color: darken(@color, 80%);
		background-color: darken(@color, 10%);
	}
}
.warning { // dire consequences
	.message(@color-warning, '!');
}
.caution { // be careful
	.message(@color-caution, '\2026'); // &hellip;
}
.success { // something was done right
	.message(@color-success, '=)');
}
.info { // extra information
	.message(@color-info, '?');
}
.help { // tips and hints
	.message(@color-help, '\2665' ); // &hearts;
	cursor: help;
}
/* @end */

/* @end MODS */
