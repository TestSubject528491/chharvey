@import url('../core/stylesheets/grid.less');
@import url('../core/stylesheets/typo.less');
@import url('../core/stylesheets/mods.less');

.standard-id {
	.lede;
	padding-right: 1em;
}

/* @group unit overviews */
#unitobjectives {
	.optional,
	.optional *,
	.honors,
	.honors * {
		font-family: @font-fam-prose;
	}
	.optional, .optional * {
		color: #004d80; // change this color
		&:before {content: '(';}
		&:after  {content: ')';}
	}
	.honors, .honors *     {color: #803300;} // change this color
}
.cat-hwcw {color: purple;}
.cat-quiz {color: blue;}
.cat-sbg  {color: green;}
.cat-text {color: red;}
.cat-exam {color: orange;}
/* @end group */


/* @group lesson plans */
.main-idea {background-color: #fdf7ae;}
.vocab, .vocablist dt {background-color: #ffb6e9;}
/* for strictly quoted material to present to students */
blockquote {
	font-size: inherit;
	font-family: inherit;
}
ol.practiceproblems {
	line-height: 3em;
}
@media print {
	body,
	.h-alpha,
	.h-beta,
	.h-gamma,
	.h-delta,
	.h-epsion,
	.h-zeta {
		font-size: 10pt;
	}
	ol.practiceproblems {
		line-height: inherit;
	}
}
/* @end group */


/* @group assessments */
body.assessment {
	.main {
		margin-top: 0.25in;
	}
	.main > header {
		.line();
		.quizheading {
			.unit-1to2();
			.h-alpha {
				margin: @defaultmargins;
				font-style: italic;
				font-weight: inherit;
				font-variant: inherit;
				font-size: inherit;
				font-family: inherit;
				text-align: inherit;
				letter-spacing: inherit;
				color: inherit;
			}
		}
		.studentheading {
			.unit-1to2();
			text-align: right;
			label {display: block;}
		}
	}
	.directions {font-weight: bold;}
	.verb {text-decoration: underline;}
	form {
		ol.problemset {
			list-style-type: decimal;
			.problem() {
				margin-bottom: 5em;
				clear: both;
			}
			.choose() {
				.problem();
				ol.answerchoices {
					line-height: 2em;
					//li.correct {background-color: #cfc;}
				}
			}
			/* A multiple-choice problem contains possible answer choices that the user must select (only one selection allowed). */
			li.multiple-choice {
				.choose();
				margin-bottom: 2em;
				ol.answerchoices {list-style-type: upper-alpha;}
			}
			/* A select-multiple problem is like multiple choice, except multiple selections are allowed. */
			li.select-multiple {
				.choose();
				ol.answerchoices {list-style-type: none;}
			}
			/* A free-response problem requires the user to construct the response. */
			.free-response() {
				.problem();
			}
			/* A free-response-number problem requires a numerical input */
			li.free-response-number {
				.free-response();
			}
			/* A free-response-text problem requires a textual input */
			li.free-response-text {
				.free-response();
			}
		}
	}
}
body.assessment.test {background-color: #fcc;}
body.assessment.sbg {background-color: #cfc;}
body.assessment.quiz {background-color: #bdf;}
body.assessment.prequiz {background-color: #dbf;}

@media print {
	body.assessment {background-color: #fff !important;}
	form {
		font-family: 'Helvetica','Arial',sans-serif;
		input[type='text'],
		input[type='number'],
		input[type='date'],
		input[type='submit'],
		textarea {
			display: none;
		}
		input#name,
		input#date,
		input#period {
			display: inline-block;
			visibility: hidden;
		}
	}
}
/* @end group */

/* @group misc */
.line {.line();}
.unit-1to2 {.unit-1to2();}

.model-chip,
.model-block {
	width: 250px;
	height: 150px;
}
.model-numberline {
	width: 500px;
	height: 150px;
}
/* @end group */

/* @group old shit */
.list-standards {
	margin: 0;
	padding: 0;
	list-style-type: none;
}
.list-standards li {
	text-indent: -.5in; padding-left: .5in;
	margin-bottom: 1em;
}
.lesson-box {
	padding: 2px 8px;
	border-width: 1px;
	border-style: solid;
	border-color: #000;
}
.student .lesson-box {
	height: 3em;
	font-weight: bold;
}
.lesson-note-content .lesson-box {
	border-width: 0 1px;
}
.lesson-note-heading {
	background-color: #000;
	color: #fff;
}
.lesson-masthead {
	/* picture */
}
.topicname {
	font-weight: normal;
	text-decoration: underline;
}
.reflection .prose {font-family: 'Comic Sans MS';}
/* @end group */
